// Code generated by protoc-gen-go. DO NOT EDIT.
// source: office/office.proto

/*
Package office is a generated protocol buffer package.

It is generated from these files:
	office/office.proto

It has these top-level messages:
	CommonResp
	TagUser
	Tag
	GetUserTagsReq
	GetUserTagsResp
	CreateTagReq
	CreateTagResp
	DeleteTagReq
	DeleteTagResp
	SetTagReq
	SetTagResp
	SendMsg2TagReq
	SendMsg2TagResp
	GetTagSendLogsReq
	TagSendLog
	GetTagSendLogsResp
	GetUserTagByIDReq
	GetUserTagByIDResp
	LikeUser
	NotificationUser
	Comment
	PermissionGroup
	WorkMomentUser
	WorkMoment
	CreateOneWorkMomentReq
	CreateOneWorkMomentResp
	DeleteOneWorkMomentReq
	DeleteOneWorkMomentResp
	LikeOneWorkMomentReq
	LikeOneWorkMomentResp
	CommentOneWorkMomentReq
	CommentOneWorkMomentResp
	DeleteCommentReq
	DeleteCommentResp
	GetWorkMomentByIDReq
	GetWorkMomentByIDResp
	ChangeWorkMomentPermissionReq
	ChangeWorkMomentPermissionResp
	GetUserWorkMomentsReq
	GetUserWorkMomentsResp
	GetUserFriendWorkMomentsReq
	GetUserFriendWorkMomentsResp
	WorkMomentNotificationMsg
	SetUserWorkMomentsLevelReq
	SetUserWorkMomentsLevelResp
*/
package office

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import server_api_params "Open_IM/pkg/proto/sdk_ws"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type CommonResp struct {
	ErrCode int32  `protobuf:"varint,1,opt,name=errCode" json:"errCode,omitempty"`
	ErrMsg  string `protobuf:"bytes,2,opt,name=errMsg" json:"errMsg,omitempty"`
}

func (m *CommonResp) Reset()                    { *m = CommonResp{} }
func (m *CommonResp) String() string            { return proto.CompactTextString(m) }
func (*CommonResp) ProtoMessage()               {}
func (*CommonResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *CommonResp) GetErrCode() int32 {
	if m != nil {
		return m.ErrCode
	}
	return 0
}

func (m *CommonResp) GetErrMsg() string {
	if m != nil {
		return m.ErrMsg
	}
	return ""
}

type TagUser struct {
	UserID   string `protobuf:"bytes,1,opt,name=userID" json:"userID,omitempty"`
	UserName string `protobuf:"bytes,2,opt,name=userName" json:"userName,omitempty"`
}

func (m *TagUser) Reset()                    { *m = TagUser{} }
func (m *TagUser) String() string            { return proto.CompactTextString(m) }
func (*TagUser) ProtoMessage()               {}
func (*TagUser) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *TagUser) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *TagUser) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

type Tag struct {
	TagID    string     `protobuf:"bytes,1,opt,name=tagID" json:"tagID,omitempty"`
	TagName  string     `protobuf:"bytes,2,opt,name=tagName" json:"tagName,omitempty"`
	UserList []*TagUser `protobuf:"bytes,3,rep,name=userList" json:"userList,omitempty"`
}

func (m *Tag) Reset()                    { *m = Tag{} }
func (m *Tag) String() string            { return proto.CompactTextString(m) }
func (*Tag) ProtoMessage()               {}
func (*Tag) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Tag) GetTagID() string {
	if m != nil {
		return m.TagID
	}
	return ""
}

func (m *Tag) GetTagName() string {
	if m != nil {
		return m.TagName
	}
	return ""
}

func (m *Tag) GetUserList() []*TagUser {
	if m != nil {
		return m.UserList
	}
	return nil
}

type GetUserTagsReq struct {
	UserID      string `protobuf:"bytes,1,opt,name=userID" json:"userID,omitempty"`
	OperationID string `protobuf:"bytes,2,opt,name=operationID" json:"operationID,omitempty"`
}

func (m *GetUserTagsReq) Reset()                    { *m = GetUserTagsReq{} }
func (m *GetUserTagsReq) String() string            { return proto.CompactTextString(m) }
func (*GetUserTagsReq) ProtoMessage()               {}
func (*GetUserTagsReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *GetUserTagsReq) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *GetUserTagsReq) GetOperationID() string {
	if m != nil {
		return m.OperationID
	}
	return ""
}

type GetUserTagsResp struct {
	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=commonResp" json:"commonResp,omitempty"`
	Tags       []*Tag      `protobuf:"bytes,2,rep,name=tags" json:"tags,omitempty"`
}

func (m *GetUserTagsResp) Reset()                    { *m = GetUserTagsResp{} }
func (m *GetUserTagsResp) String() string            { return proto.CompactTextString(m) }
func (*GetUserTagsResp) ProtoMessage()               {}
func (*GetUserTagsResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *GetUserTagsResp) GetCommonResp() *CommonResp {
	if m != nil {
		return m.CommonResp
	}
	return nil
}

func (m *GetUserTagsResp) GetTags() []*Tag {
	if m != nil {
		return m.Tags
	}
	return nil
}

type CreateTagReq struct {
	TagName     string   `protobuf:"bytes,1,opt,name=tagName" json:"tagName,omitempty"`
	UserID      string   `protobuf:"bytes,2,opt,name=userID" json:"userID,omitempty"`
	UserIDList  []string `protobuf:"bytes,3,rep,name=userIDList" json:"userIDList,omitempty"`
	OperationID string   `protobuf:"bytes,4,opt,name=operationID" json:"operationID,omitempty"`
}

func (m *CreateTagReq) Reset()                    { *m = CreateTagReq{} }
func (m *CreateTagReq) String() string            { return proto.CompactTextString(m) }
func (*CreateTagReq) ProtoMessage()               {}
func (*CreateTagReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *CreateTagReq) GetTagName() string {
	if m != nil {
		return m.TagName
	}
	return ""
}

func (m *CreateTagReq) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *CreateTagReq) GetUserIDList() []string {
	if m != nil {
		return m.UserIDList
	}
	return nil
}

func (m *CreateTagReq) GetOperationID() string {
	if m != nil {
		return m.OperationID
	}
	return ""
}

type CreateTagResp struct {
	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=commonResp" json:"commonResp,omitempty"`
}

func (m *CreateTagResp) Reset()                    { *m = CreateTagResp{} }
func (m *CreateTagResp) String() string            { return proto.CompactTextString(m) }
func (*CreateTagResp) ProtoMessage()               {}
func (*CreateTagResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *CreateTagResp) GetCommonResp() *CommonResp {
	if m != nil {
		return m.CommonResp
	}
	return nil
}

type DeleteTagReq struct {
	UserID      string `protobuf:"bytes,1,opt,name=userID" json:"userID,omitempty"`
	TagID       string `protobuf:"bytes,2,opt,name=tagID" json:"tagID,omitempty"`
	OperationID string `protobuf:"bytes,3,opt,name=operationID" json:"operationID,omitempty"`
}

func (m *DeleteTagReq) Reset()                    { *m = DeleteTagReq{} }
func (m *DeleteTagReq) String() string            { return proto.CompactTextString(m) }
func (*DeleteTagReq) ProtoMessage()               {}
func (*DeleteTagReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *DeleteTagReq) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *DeleteTagReq) GetTagID() string {
	if m != nil {
		return m.TagID
	}
	return ""
}

func (m *DeleteTagReq) GetOperationID() string {
	if m != nil {
		return m.OperationID
	}
	return ""
}

type DeleteTagResp struct {
	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=commonResp" json:"commonResp,omitempty"`
}

func (m *DeleteTagResp) Reset()                    { *m = DeleteTagResp{} }
func (m *DeleteTagResp) String() string            { return proto.CompactTextString(m) }
func (*DeleteTagResp) ProtoMessage()               {}
func (*DeleteTagResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *DeleteTagResp) GetCommonResp() *CommonResp {
	if m != nil {
		return m.CommonResp
	}
	return nil
}

type SetTagReq struct {
	UserID             string   `protobuf:"bytes,1,opt,name=userID" json:"userID,omitempty"`
	TagID              string   `protobuf:"bytes,2,opt,name=tagID" json:"tagID,omitempty"`
	NewName            string   `protobuf:"bytes,3,opt,name=newName" json:"newName,omitempty"`
	IncreaseUserIDList []string `protobuf:"bytes,4,rep,name=increaseUserIDList" json:"increaseUserIDList,omitempty"`
	ReduceUserIDList   []string `protobuf:"bytes,5,rep,name=reduceUserIDList" json:"reduceUserIDList,omitempty"`
	OperationID        string   `protobuf:"bytes,6,opt,name=operationID" json:"operationID,omitempty"`
}

func (m *SetTagReq) Reset()                    { *m = SetTagReq{} }
func (m *SetTagReq) String() string            { return proto.CompactTextString(m) }
func (*SetTagReq) ProtoMessage()               {}
func (*SetTagReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *SetTagReq) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *SetTagReq) GetTagID() string {
	if m != nil {
		return m.TagID
	}
	return ""
}

func (m *SetTagReq) GetNewName() string {
	if m != nil {
		return m.NewName
	}
	return ""
}

func (m *SetTagReq) GetIncreaseUserIDList() []string {
	if m != nil {
		return m.IncreaseUserIDList
	}
	return nil
}

func (m *SetTagReq) GetReduceUserIDList() []string {
	if m != nil {
		return m.ReduceUserIDList
	}
	return nil
}

func (m *SetTagReq) GetOperationID() string {
	if m != nil {
		return m.OperationID
	}
	return ""
}

type SetTagResp struct {
	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=commonResp" json:"commonResp,omitempty"`
}

func (m *SetTagResp) Reset()                    { *m = SetTagResp{} }
func (m *SetTagResp) String() string            { return proto.CompactTextString(m) }
func (*SetTagResp) ProtoMessage()               {}
func (*SetTagResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *SetTagResp) GetCommonResp() *CommonResp {
	if m != nil {
		return m.CommonResp
	}
	return nil
}

type SendMsg2TagReq struct {
	TagList          []string `protobuf:"bytes,1,rep,name=tagList" json:"tagList,omitempty"`
	UserList         []string `protobuf:"bytes,2,rep,name=UserList,json=userList" json:"UserList,omitempty"`
	GroupList        []string `protobuf:"bytes,3,rep,name=GroupList,json=groupList" json:"GroupList,omitempty"`
	SendID           string   `protobuf:"bytes,4,opt,name=sendID" json:"sendID,omitempty"`
	SenderPlatformID int32    `protobuf:"varint,5,opt,name=senderPlatformID" json:"senderPlatformID,omitempty"`
	Content          string   `protobuf:"bytes,6,opt,name=content" json:"content,omitempty"`
	OperationID      string   `protobuf:"bytes,7,opt,name=operationID" json:"operationID,omitempty"`
}

func (m *SendMsg2TagReq) Reset()                    { *m = SendMsg2TagReq{} }
func (m *SendMsg2TagReq) String() string            { return proto.CompactTextString(m) }
func (*SendMsg2TagReq) ProtoMessage()               {}
func (*SendMsg2TagReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *SendMsg2TagReq) GetTagList() []string {
	if m != nil {
		return m.TagList
	}
	return nil
}

func (m *SendMsg2TagReq) GetUserList() []string {
	if m != nil {
		return m.UserList
	}
	return nil
}

func (m *SendMsg2TagReq) GetGroupList() []string {
	if m != nil {
		return m.GroupList
	}
	return nil
}

func (m *SendMsg2TagReq) GetSendID() string {
	if m != nil {
		return m.SendID
	}
	return ""
}

func (m *SendMsg2TagReq) GetSenderPlatformID() int32 {
	if m != nil {
		return m.SenderPlatformID
	}
	return 0
}

func (m *SendMsg2TagReq) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *SendMsg2TagReq) GetOperationID() string {
	if m != nil {
		return m.OperationID
	}
	return ""
}

type SendMsg2TagResp struct {
	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=commonResp" json:"commonResp,omitempty"`
}

func (m *SendMsg2TagResp) Reset()                    { *m = SendMsg2TagResp{} }
func (m *SendMsg2TagResp) String() string            { return proto.CompactTextString(m) }
func (*SendMsg2TagResp) ProtoMessage()               {}
func (*SendMsg2TagResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *SendMsg2TagResp) GetCommonResp() *CommonResp {
	if m != nil {
		return m.CommonResp
	}
	return nil
}

type GetTagSendLogsReq struct {
	Pagination  *server_api_params.RequestPagination `protobuf:"bytes,1,opt,name=Pagination,json=pagination" json:"Pagination,omitempty"`
	UserID      string                               `protobuf:"bytes,2,opt,name=userID" json:"userID,omitempty"`
	OperationID string                               `protobuf:"bytes,3,opt,name=operationID" json:"operationID,omitempty"`
}

func (m *GetTagSendLogsReq) Reset()                    { *m = GetTagSendLogsReq{} }
func (m *GetTagSendLogsReq) String() string            { return proto.CompactTextString(m) }
func (*GetTagSendLogsReq) ProtoMessage()               {}
func (*GetTagSendLogsReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *GetTagSendLogsReq) GetPagination() *server_api_params.RequestPagination {
	if m != nil {
		return m.Pagination
	}
	return nil
}

func (m *GetTagSendLogsReq) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *GetTagSendLogsReq) GetOperationID() string {
	if m != nil {
		return m.OperationID
	}
	return ""
}

type TagSendLog struct {
	UserList []*TagUser `protobuf:"bytes,1,rep,name=userList" json:"userList,omitempty"`
	Content  string     `protobuf:"bytes,2,opt,name=content" json:"content,omitempty"`
	SendTime int64      `protobuf:"varint,3,opt,name=sendTime" json:"sendTime,omitempty"`
}

func (m *TagSendLog) Reset()                    { *m = TagSendLog{} }
func (m *TagSendLog) String() string            { return proto.CompactTextString(m) }
func (*TagSendLog) ProtoMessage()               {}
func (*TagSendLog) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *TagSendLog) GetUserList() []*TagUser {
	if m != nil {
		return m.UserList
	}
	return nil
}

func (m *TagSendLog) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *TagSendLog) GetSendTime() int64 {
	if m != nil {
		return m.SendTime
	}
	return 0
}

type GetTagSendLogsResp struct {
	CommonResp  *CommonResp                           `protobuf:"bytes,1,opt,name=commonResp" json:"commonResp,omitempty"`
	Pagination  *server_api_params.ResponsePagination `protobuf:"bytes,2,opt,name=Pagination,json=pagination" json:"Pagination,omitempty"`
	TagSendLogs []*TagSendLog                         `protobuf:"bytes,3,rep,name=tagSendLogs" json:"tagSendLogs,omitempty"`
}

func (m *GetTagSendLogsResp) Reset()                    { *m = GetTagSendLogsResp{} }
func (m *GetTagSendLogsResp) String() string            { return proto.CompactTextString(m) }
func (*GetTagSendLogsResp) ProtoMessage()               {}
func (*GetTagSendLogsResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *GetTagSendLogsResp) GetCommonResp() *CommonResp {
	if m != nil {
		return m.CommonResp
	}
	return nil
}

func (m *GetTagSendLogsResp) GetPagination() *server_api_params.ResponsePagination {
	if m != nil {
		return m.Pagination
	}
	return nil
}

func (m *GetTagSendLogsResp) GetTagSendLogs() []*TagSendLog {
	if m != nil {
		return m.TagSendLogs
	}
	return nil
}

type GetUserTagByIDReq struct {
	UserID      string `protobuf:"bytes,1,opt,name=userID" json:"userID,omitempty"`
	TagID       string `protobuf:"bytes,2,opt,name=tagID" json:"tagID,omitempty"`
	OperationID string `protobuf:"bytes,3,opt,name=operationID" json:"operationID,omitempty"`
}

func (m *GetUserTagByIDReq) Reset()                    { *m = GetUserTagByIDReq{} }
func (m *GetUserTagByIDReq) String() string            { return proto.CompactTextString(m) }
func (*GetUserTagByIDReq) ProtoMessage()               {}
func (*GetUserTagByIDReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

func (m *GetUserTagByIDReq) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *GetUserTagByIDReq) GetTagID() string {
	if m != nil {
		return m.TagID
	}
	return ""
}

func (m *GetUserTagByIDReq) GetOperationID() string {
	if m != nil {
		return m.OperationID
	}
	return ""
}

type GetUserTagByIDResp struct {
	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=commonResp" json:"commonResp,omitempty"`
	Tag        *Tag        `protobuf:"bytes,2,opt,name=tag" json:"tag,omitempty"`
}

func (m *GetUserTagByIDResp) Reset()                    { *m = GetUserTagByIDResp{} }
func (m *GetUserTagByIDResp) String() string            { return proto.CompactTextString(m) }
func (*GetUserTagByIDResp) ProtoMessage()               {}
func (*GetUserTagByIDResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

func (m *GetUserTagByIDResp) GetCommonResp() *CommonResp {
	if m != nil {
		return m.CommonResp
	}
	return nil
}

func (m *GetUserTagByIDResp) GetTag() *Tag {
	if m != nil {
		return m.Tag
	}
	return nil
}

type LikeUser struct {
	UserID   string `protobuf:"bytes,1,opt,name=userID" json:"userID,omitempty"`
	UserName string `protobuf:"bytes,2,opt,name=userName" json:"userName,omitempty"`
}

func (m *LikeUser) Reset()                    { *m = LikeUser{} }
func (m *LikeUser) String() string            { return proto.CompactTextString(m) }
func (*LikeUser) ProtoMessage()               {}
func (*LikeUser) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{18} }

func (m *LikeUser) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *LikeUser) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

type NotificationUser struct {
	UserID   string `protobuf:"bytes,1,opt,name=userID" json:"userID,omitempty"`
	UserName string `protobuf:"bytes,2,opt,name=userName" json:"userName,omitempty"`
}

func (m *NotificationUser) Reset()                    { *m = NotificationUser{} }
func (m *NotificationUser) String() string            { return proto.CompactTextString(m) }
func (*NotificationUser) ProtoMessage()               {}
func (*NotificationUser) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{19} }

func (m *NotificationUser) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *NotificationUser) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

type Comment struct {
	UserID        string `protobuf:"bytes,1,opt,name=userID" json:"userID,omitempty"`
	UserName      string `protobuf:"bytes,2,opt,name=userName" json:"userName,omitempty"`
	FaceURL       string `protobuf:"bytes,3,opt,name=faceURL" json:"faceURL,omitempty"`
	ReplyUserID   string `protobuf:"bytes,4,opt,name=replyUserID" json:"replyUserID,omitempty"`
	ReplyUserName string `protobuf:"bytes,5,opt,name=replyUserName" json:"replyUserName,omitempty"`
	ContentID     string `protobuf:"bytes,6,opt,name=contentID" json:"contentID,omitempty"`
	Content       string `protobuf:"bytes,7,opt,name=content" json:"content,omitempty"`
	CreateTime    int32  `protobuf:"varint,8,opt,name=createTime" json:"createTime,omitempty"`
}

func (m *Comment) Reset()                    { *m = Comment{} }
func (m *Comment) String() string            { return proto.CompactTextString(m) }
func (*Comment) ProtoMessage()               {}
func (*Comment) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{20} }

func (m *Comment) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *Comment) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

func (m *Comment) GetFaceURL() string {
	if m != nil {
		return m.FaceURL
	}
	return ""
}

func (m *Comment) GetReplyUserID() string {
	if m != nil {
		return m.ReplyUserID
	}
	return ""
}

func (m *Comment) GetReplyUserName() string {
	if m != nil {
		return m.ReplyUserName
	}
	return ""
}

func (m *Comment) GetContentID() string {
	if m != nil {
		return m.ContentID
	}
	return ""
}

func (m *Comment) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *Comment) GetCreateTime() int32 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

type PermissionGroup struct {
	GroupName string `protobuf:"bytes,1,opt,name=groupName" json:"groupName,omitempty"`
	GroupID   string `protobuf:"bytes,2,opt,name=groupID" json:"groupID,omitempty"`
}

func (m *PermissionGroup) Reset()                    { *m = PermissionGroup{} }
func (m *PermissionGroup) String() string            { return proto.CompactTextString(m) }
func (*PermissionGroup) ProtoMessage()               {}
func (*PermissionGroup) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{21} }

func (m *PermissionGroup) GetGroupName() string {
	if m != nil {
		return m.GroupName
	}
	return ""
}

func (m *PermissionGroup) GetGroupID() string {
	if m != nil {
		return m.GroupID
	}
	return ""
}

type WorkMomentUser struct {
	UserID   string `protobuf:"bytes,1,opt,name=userID" json:"userID,omitempty"`
	UserName string `protobuf:"bytes,2,opt,name=userName" json:"userName,omitempty"`
}

func (m *WorkMomentUser) Reset()                    { *m = WorkMomentUser{} }
func (m *WorkMomentUser) String() string            { return proto.CompactTextString(m) }
func (*WorkMomentUser) ProtoMessage()               {}
func (*WorkMomentUser) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{22} }

func (m *WorkMomentUser) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *WorkMomentUser) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

type WorkMoment struct {
	WorkMomentID        string             `protobuf:"bytes,1,opt,name=workMomentID" json:"workMomentID,omitempty"`
	UserID              string             `protobuf:"bytes,2,opt,name=userID" json:"userID,omitempty"`
	UserName            string             `protobuf:"bytes,3,opt,name=userName" json:"userName,omitempty"`
	FaceURL             string             `protobuf:"bytes,4,opt,name=faceURL" json:"faceURL,omitempty"`
	Content             string             `protobuf:"bytes,5,opt,name=content" json:"content,omitempty"`
	LikeUserList        []*WorkMomentUser  `protobuf:"bytes,6,rep,name=likeUserList" json:"likeUserList,omitempty"`
	Comments            []*Comment         `protobuf:"bytes,7,rep,name=comments" json:"comments,omitempty"`
	Permission          int32              `protobuf:"varint,8,opt,name=permission" json:"permission,omitempty"`
	PermissionUserList  []*WorkMomentUser  `protobuf:"bytes,9,rep,name=permissionUserList" json:"permissionUserList,omitempty"`
	PermissionGroupList []*PermissionGroup `protobuf:"bytes,10,rep,name=permissionGroupList" json:"permissionGroupList,omitempty"`
	AtUserList          []*WorkMomentUser  `protobuf:"bytes,11,rep,name=atUserList" json:"atUserList,omitempty"`
	CreateTime          int32              `protobuf:"varint,12,opt,name=createTime" json:"createTime,omitempty"`
}

func (m *WorkMoment) Reset()                    { *m = WorkMoment{} }
func (m *WorkMoment) String() string            { return proto.CompactTextString(m) }
func (*WorkMoment) ProtoMessage()               {}
func (*WorkMoment) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{23} }

func (m *WorkMoment) GetWorkMomentID() string {
	if m != nil {
		return m.WorkMomentID
	}
	return ""
}

func (m *WorkMoment) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *WorkMoment) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

func (m *WorkMoment) GetFaceURL() string {
	if m != nil {
		return m.FaceURL
	}
	return ""
}

func (m *WorkMoment) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *WorkMoment) GetLikeUserList() []*WorkMomentUser {
	if m != nil {
		return m.LikeUserList
	}
	return nil
}

func (m *WorkMoment) GetComments() []*Comment {
	if m != nil {
		return m.Comments
	}
	return nil
}

func (m *WorkMoment) GetPermission() int32 {
	if m != nil {
		return m.Permission
	}
	return 0
}

func (m *WorkMoment) GetPermissionUserList() []*WorkMomentUser {
	if m != nil {
		return m.PermissionUserList
	}
	return nil
}

func (m *WorkMoment) GetPermissionGroupList() []*PermissionGroup {
	if m != nil {
		return m.PermissionGroupList
	}
	return nil
}

func (m *WorkMoment) GetAtUserList() []*WorkMomentUser {
	if m != nil {
		return m.AtUserList
	}
	return nil
}

func (m *WorkMoment) GetCreateTime() int32 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

type CreateOneWorkMomentReq struct {
	WorkMoment  *WorkMoment `protobuf:"bytes,1,opt,name=workMoment" json:"workMoment,omitempty"`
	OperationID string      `protobuf:"bytes,2,opt,name=operationID" json:"operationID,omitempty"`
}

func (m *CreateOneWorkMomentReq) Reset()                    { *m = CreateOneWorkMomentReq{} }
func (m *CreateOneWorkMomentReq) String() string            { return proto.CompactTextString(m) }
func (*CreateOneWorkMomentReq) ProtoMessage()               {}
func (*CreateOneWorkMomentReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{24} }

func (m *CreateOneWorkMomentReq) GetWorkMoment() *WorkMoment {
	if m != nil {
		return m.WorkMoment
	}
	return nil
}

func (m *CreateOneWorkMomentReq) GetOperationID() string {
	if m != nil {
		return m.OperationID
	}
	return ""
}

type CreateOneWorkMomentResp struct {
	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=commonResp" json:"commonResp,omitempty"`
}

func (m *CreateOneWorkMomentResp) Reset()                    { *m = CreateOneWorkMomentResp{} }
func (m *CreateOneWorkMomentResp) String() string            { return proto.CompactTextString(m) }
func (*CreateOneWorkMomentResp) ProtoMessage()               {}
func (*CreateOneWorkMomentResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{25} }

func (m *CreateOneWorkMomentResp) GetCommonResp() *CommonResp {
	if m != nil {
		return m.CommonResp
	}
	return nil
}

type DeleteOneWorkMomentReq struct {
	WorkMomentID string `protobuf:"bytes,1,opt,name=workMomentID" json:"workMomentID,omitempty"`
	UserID       string `protobuf:"bytes,2,opt,name=userID" json:"userID,omitempty"`
	OperationID  string `protobuf:"bytes,3,opt,name=operationID" json:"operationID,omitempty"`
}

func (m *DeleteOneWorkMomentReq) Reset()                    { *m = DeleteOneWorkMomentReq{} }
func (m *DeleteOneWorkMomentReq) String() string            { return proto.CompactTextString(m) }
func (*DeleteOneWorkMomentReq) ProtoMessage()               {}
func (*DeleteOneWorkMomentReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{26} }

func (m *DeleteOneWorkMomentReq) GetWorkMomentID() string {
	if m != nil {
		return m.WorkMomentID
	}
	return ""
}

func (m *DeleteOneWorkMomentReq) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *DeleteOneWorkMomentReq) GetOperationID() string {
	if m != nil {
		return m.OperationID
	}
	return ""
}

type DeleteOneWorkMomentResp struct {
	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=commonResp" json:"commonResp,omitempty"`
}

func (m *DeleteOneWorkMomentResp) Reset()                    { *m = DeleteOneWorkMomentResp{} }
func (m *DeleteOneWorkMomentResp) String() string            { return proto.CompactTextString(m) }
func (*DeleteOneWorkMomentResp) ProtoMessage()               {}
func (*DeleteOneWorkMomentResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{27} }

func (m *DeleteOneWorkMomentResp) GetCommonResp() *CommonResp {
	if m != nil {
		return m.CommonResp
	}
	return nil
}

type LikeOneWorkMomentReq struct {
	UserID       string `protobuf:"bytes,1,opt,name=userID" json:"userID,omitempty"`
	WorkMomentID string `protobuf:"bytes,2,opt,name=WorkMomentID,json=workMomentID" json:"WorkMomentID,omitempty"`
	OperationID  string `protobuf:"bytes,3,opt,name=operationID" json:"operationID,omitempty"`
}

func (m *LikeOneWorkMomentReq) Reset()                    { *m = LikeOneWorkMomentReq{} }
func (m *LikeOneWorkMomentReq) String() string            { return proto.CompactTextString(m) }
func (*LikeOneWorkMomentReq) ProtoMessage()               {}
func (*LikeOneWorkMomentReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{28} }

func (m *LikeOneWorkMomentReq) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *LikeOneWorkMomentReq) GetWorkMomentID() string {
	if m != nil {
		return m.WorkMomentID
	}
	return ""
}

func (m *LikeOneWorkMomentReq) GetOperationID() string {
	if m != nil {
		return m.OperationID
	}
	return ""
}

type LikeOneWorkMomentResp struct {
	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=commonResp" json:"commonResp,omitempty"`
}

func (m *LikeOneWorkMomentResp) Reset()                    { *m = LikeOneWorkMomentResp{} }
func (m *LikeOneWorkMomentResp) String() string            { return proto.CompactTextString(m) }
func (*LikeOneWorkMomentResp) ProtoMessage()               {}
func (*LikeOneWorkMomentResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{29} }

func (m *LikeOneWorkMomentResp) GetCommonResp() *CommonResp {
	if m != nil {
		return m.CommonResp
	}
	return nil
}

type CommentOneWorkMomentReq struct {
	UserID       string `protobuf:"bytes,1,opt,name=userID" json:"userID,omitempty"`
	WorkMomentID string `protobuf:"bytes,2,opt,name=workMomentID" json:"workMomentID,omitempty"`
	ReplyUserID  string `protobuf:"bytes,3,opt,name=replyUserID" json:"replyUserID,omitempty"`
	Content      string `protobuf:"bytes,4,opt,name=content" json:"content,omitempty"`
	OperationID  string `protobuf:"bytes,5,opt,name=operationID" json:"operationID,omitempty"`
}

func (m *CommentOneWorkMomentReq) Reset()                    { *m = CommentOneWorkMomentReq{} }
func (m *CommentOneWorkMomentReq) String() string            { return proto.CompactTextString(m) }
func (*CommentOneWorkMomentReq) ProtoMessage()               {}
func (*CommentOneWorkMomentReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{30} }

func (m *CommentOneWorkMomentReq) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *CommentOneWorkMomentReq) GetWorkMomentID() string {
	if m != nil {
		return m.WorkMomentID
	}
	return ""
}

func (m *CommentOneWorkMomentReq) GetReplyUserID() string {
	if m != nil {
		return m.ReplyUserID
	}
	return ""
}

func (m *CommentOneWorkMomentReq) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *CommentOneWorkMomentReq) GetOperationID() string {
	if m != nil {
		return m.OperationID
	}
	return ""
}

type CommentOneWorkMomentResp struct {
	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=commonResp" json:"commonResp,omitempty"`
}

func (m *CommentOneWorkMomentResp) Reset()                    { *m = CommentOneWorkMomentResp{} }
func (m *CommentOneWorkMomentResp) String() string            { return proto.CompactTextString(m) }
func (*CommentOneWorkMomentResp) ProtoMessage()               {}
func (*CommentOneWorkMomentResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{31} }

func (m *CommentOneWorkMomentResp) GetCommonResp() *CommonResp {
	if m != nil {
		return m.CommonResp
	}
	return nil
}

type DeleteCommentReq struct {
	WorkMomentID string `protobuf:"bytes,1,opt,name=workMomentID" json:"workMomentID,omitempty"`
	ContentID    string `protobuf:"bytes,2,opt,name=contentID" json:"contentID,omitempty"`
	OpUserID     string `protobuf:"bytes,3,opt,name=opUserID" json:"opUserID,omitempty"`
	OperationID  string `protobuf:"bytes,4,opt,name=operationID" json:"operationID,omitempty"`
}

func (m *DeleteCommentReq) Reset()                    { *m = DeleteCommentReq{} }
func (m *DeleteCommentReq) String() string            { return proto.CompactTextString(m) }
func (*DeleteCommentReq) ProtoMessage()               {}
func (*DeleteCommentReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{32} }

func (m *DeleteCommentReq) GetWorkMomentID() string {
	if m != nil {
		return m.WorkMomentID
	}
	return ""
}

func (m *DeleteCommentReq) GetContentID() string {
	if m != nil {
		return m.ContentID
	}
	return ""
}

func (m *DeleteCommentReq) GetOpUserID() string {
	if m != nil {
		return m.OpUserID
	}
	return ""
}

func (m *DeleteCommentReq) GetOperationID() string {
	if m != nil {
		return m.OperationID
	}
	return ""
}

type DeleteCommentResp struct {
	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=commonResp" json:"commonResp,omitempty"`
}

func (m *DeleteCommentResp) Reset()                    { *m = DeleteCommentResp{} }
func (m *DeleteCommentResp) String() string            { return proto.CompactTextString(m) }
func (*DeleteCommentResp) ProtoMessage()               {}
func (*DeleteCommentResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{33} }

func (m *DeleteCommentResp) GetCommonResp() *CommonResp {
	if m != nil {
		return m.CommonResp
	}
	return nil
}

type GetWorkMomentByIDReq struct {
	WorkMomentID string `protobuf:"bytes,1,opt,name=workMomentID" json:"workMomentID,omitempty"`
	OpUserID     string `protobuf:"bytes,2,opt,name=opUserID" json:"opUserID,omitempty"`
	OperationID  string `protobuf:"bytes,3,opt,name=operationID" json:"operationID,omitempty"`
}

func (m *GetWorkMomentByIDReq) Reset()                    { *m = GetWorkMomentByIDReq{} }
func (m *GetWorkMomentByIDReq) String() string            { return proto.CompactTextString(m) }
func (*GetWorkMomentByIDReq) ProtoMessage()               {}
func (*GetWorkMomentByIDReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{34} }

func (m *GetWorkMomentByIDReq) GetWorkMomentID() string {
	if m != nil {
		return m.WorkMomentID
	}
	return ""
}

func (m *GetWorkMomentByIDReq) GetOpUserID() string {
	if m != nil {
		return m.OpUserID
	}
	return ""
}

func (m *GetWorkMomentByIDReq) GetOperationID() string {
	if m != nil {
		return m.OperationID
	}
	return ""
}

type GetWorkMomentByIDResp struct {
	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=commonResp" json:"commonResp,omitempty"`
	WorkMoment *WorkMoment `protobuf:"bytes,2,opt,name=workMoment" json:"workMoment,omitempty"`
}

func (m *GetWorkMomentByIDResp) Reset()                    { *m = GetWorkMomentByIDResp{} }
func (m *GetWorkMomentByIDResp) String() string            { return proto.CompactTextString(m) }
func (*GetWorkMomentByIDResp) ProtoMessage()               {}
func (*GetWorkMomentByIDResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{35} }

func (m *GetWorkMomentByIDResp) GetCommonResp() *CommonResp {
	if m != nil {
		return m.CommonResp
	}
	return nil
}

func (m *GetWorkMomentByIDResp) GetWorkMoment() *WorkMoment {
	if m != nil {
		return m.WorkMoment
	}
	return nil
}

type ChangeWorkMomentPermissionReq struct {
	WorkMomentID         string   `protobuf:"bytes,1,opt,name=workMomentID" json:"workMomentID,omitempty"`
	OpUserID             string   `protobuf:"bytes,2,opt,name=opUserID" json:"opUserID,omitempty"`
	Permission           int32    `protobuf:"varint,3,opt,name=permission" json:"permission,omitempty"`
	PermissionUserIDList []string `protobuf:"bytes,4,rep,name=permissionUserIDList" json:"permissionUserIDList,omitempty"`
	OperationID          string   `protobuf:"bytes,5,opt,name=operationID" json:"operationID,omitempty"`
}

func (m *ChangeWorkMomentPermissionReq) Reset()                    { *m = ChangeWorkMomentPermissionReq{} }
func (m *ChangeWorkMomentPermissionReq) String() string            { return proto.CompactTextString(m) }
func (*ChangeWorkMomentPermissionReq) ProtoMessage()               {}
func (*ChangeWorkMomentPermissionReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{36} }

func (m *ChangeWorkMomentPermissionReq) GetWorkMomentID() string {
	if m != nil {
		return m.WorkMomentID
	}
	return ""
}

func (m *ChangeWorkMomentPermissionReq) GetOpUserID() string {
	if m != nil {
		return m.OpUserID
	}
	return ""
}

func (m *ChangeWorkMomentPermissionReq) GetPermission() int32 {
	if m != nil {
		return m.Permission
	}
	return 0
}

func (m *ChangeWorkMomentPermissionReq) GetPermissionUserIDList() []string {
	if m != nil {
		return m.PermissionUserIDList
	}
	return nil
}

func (m *ChangeWorkMomentPermissionReq) GetOperationID() string {
	if m != nil {
		return m.OperationID
	}
	return ""
}

type ChangeWorkMomentPermissionResp struct {
	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=commonResp" json:"commonResp,omitempty"`
}

func (m *ChangeWorkMomentPermissionResp) Reset()                    { *m = ChangeWorkMomentPermissionResp{} }
func (m *ChangeWorkMomentPermissionResp) String() string            { return proto.CompactTextString(m) }
func (*ChangeWorkMomentPermissionResp) ProtoMessage()               {}
func (*ChangeWorkMomentPermissionResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{37} }

func (m *ChangeWorkMomentPermissionResp) GetCommonResp() *CommonResp {
	if m != nil {
		return m.CommonResp
	}
	return nil
}

type GetUserWorkMomentsReq struct {
	UserID      string                               `protobuf:"bytes,1,opt,name=userID" json:"userID,omitempty"`
	OpUserID    string                               `protobuf:"bytes,2,opt,name=opUserID" json:"opUserID,omitempty"`
	Pagination  *server_api_params.RequestPagination `protobuf:"bytes,3,opt,name=Pagination,json=pagination" json:"Pagination,omitempty"`
	OperationID string                               `protobuf:"bytes,4,opt,name=operationID" json:"operationID,omitempty"`
}

func (m *GetUserWorkMomentsReq) Reset()                    { *m = GetUserWorkMomentsReq{} }
func (m *GetUserWorkMomentsReq) String() string            { return proto.CompactTextString(m) }
func (*GetUserWorkMomentsReq) ProtoMessage()               {}
func (*GetUserWorkMomentsReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{38} }

func (m *GetUserWorkMomentsReq) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *GetUserWorkMomentsReq) GetOpUserID() string {
	if m != nil {
		return m.OpUserID
	}
	return ""
}

func (m *GetUserWorkMomentsReq) GetPagination() *server_api_params.RequestPagination {
	if m != nil {
		return m.Pagination
	}
	return nil
}

func (m *GetUserWorkMomentsReq) GetOperationID() string {
	if m != nil {
		return m.OperationID
	}
	return ""
}

type GetUserWorkMomentsResp struct {
	CommonResp  *CommonResp                           `protobuf:"bytes,1,opt,name=commonResp" json:"commonResp,omitempty"`
	WorkMoments []*WorkMoment                         `protobuf:"bytes,2,rep,name=workMoments" json:"workMoments,omitempty"`
	Pagination  *server_api_params.ResponsePagination `protobuf:"bytes,3,opt,name=Pagination,json=pagination" json:"Pagination,omitempty"`
}

func (m *GetUserWorkMomentsResp) Reset()                    { *m = GetUserWorkMomentsResp{} }
func (m *GetUserWorkMomentsResp) String() string            { return proto.CompactTextString(m) }
func (*GetUserWorkMomentsResp) ProtoMessage()               {}
func (*GetUserWorkMomentsResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{39} }

func (m *GetUserWorkMomentsResp) GetCommonResp() *CommonResp {
	if m != nil {
		return m.CommonResp
	}
	return nil
}

func (m *GetUserWorkMomentsResp) GetWorkMoments() []*WorkMoment {
	if m != nil {
		return m.WorkMoments
	}
	return nil
}

func (m *GetUserWorkMomentsResp) GetPagination() *server_api_params.ResponsePagination {
	if m != nil {
		return m.Pagination
	}
	return nil
}

type GetUserFriendWorkMomentsReq struct {
	UserID      string                               `protobuf:"bytes,1,opt,name=userID" json:"userID,omitempty"`
	Pagination  *server_api_params.RequestPagination `protobuf:"bytes,2,opt,name=Pagination,json=pagination" json:"Pagination,omitempty"`
	OperationID string                               `protobuf:"bytes,3,opt,name=operationID" json:"operationID,omitempty"`
}

func (m *GetUserFriendWorkMomentsReq) Reset()                    { *m = GetUserFriendWorkMomentsReq{} }
func (m *GetUserFriendWorkMomentsReq) String() string            { return proto.CompactTextString(m) }
func (*GetUserFriendWorkMomentsReq) ProtoMessage()               {}
func (*GetUserFriendWorkMomentsReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{40} }

func (m *GetUserFriendWorkMomentsReq) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *GetUserFriendWorkMomentsReq) GetPagination() *server_api_params.RequestPagination {
	if m != nil {
		return m.Pagination
	}
	return nil
}

func (m *GetUserFriendWorkMomentsReq) GetOperationID() string {
	if m != nil {
		return m.OperationID
	}
	return ""
}

type GetUserFriendWorkMomentsResp struct {
	CommonResp  *CommonResp                           `protobuf:"bytes,1,opt,name=commonResp" json:"commonResp,omitempty"`
	WorkMoments []*WorkMoment                         `protobuf:"bytes,2,rep,name=workMoments" json:"workMoments,omitempty"`
	Pagination  *server_api_params.ResponsePagination `protobuf:"bytes,3,opt,name=Pagination,json=pagination" json:"Pagination,omitempty"`
}

func (m *GetUserFriendWorkMomentsResp) Reset()                    { *m = GetUserFriendWorkMomentsResp{} }
func (m *GetUserFriendWorkMomentsResp) String() string            { return proto.CompactTextString(m) }
func (*GetUserFriendWorkMomentsResp) ProtoMessage()               {}
func (*GetUserFriendWorkMomentsResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{41} }

func (m *GetUserFriendWorkMomentsResp) GetCommonResp() *CommonResp {
	if m != nil {
		return m.CommonResp
	}
	return nil
}

func (m *GetUserFriendWorkMomentsResp) GetWorkMoments() []*WorkMoment {
	if m != nil {
		return m.WorkMoments
	}
	return nil
}

func (m *GetUserFriendWorkMomentsResp) GetPagination() *server_api_params.ResponsePagination {
	if m != nil {
		return m.Pagination
	}
	return nil
}

type WorkMomentNotificationMsg struct {
	NotificationMsgType int32  `protobuf:"varint,1,opt,name=notificationMsgType" json:"notificationMsgType,omitempty"`
	ReplyUserName       string `protobuf:"bytes,2,opt,name=replyUserName" json:"replyUserName,omitempty"`
	ReplyUserID         string `protobuf:"bytes,3,opt,name=replyUserID" json:"replyUserID,omitempty"`
	Content             string `protobuf:"bytes,4,opt,name=content" json:"content,omitempty"`
	ContentID           string `protobuf:"bytes,5,opt,name=contentID" json:"contentID,omitempty"`
	WorkMomentID        string `protobuf:"bytes,6,opt,name=workMomentID" json:"workMomentID,omitempty"`
	UserID              string `protobuf:"bytes,7,opt,name=userID" json:"userID,omitempty"`
	UserName            string `protobuf:"bytes,8,opt,name=userName" json:"userName,omitempty"`
	FaceURL             string `protobuf:"bytes,9,opt,name=faceURL" json:"faceURL,omitempty"`
	WorkMomentContent   string `protobuf:"bytes,10,opt,name=workMomentContent" json:"workMomentContent,omitempty"`
	CreateTime          int32  `protobuf:"varint,11,opt,name=createTime" json:"createTime,omitempty"`
}

func (m *WorkMomentNotificationMsg) Reset()                    { *m = WorkMomentNotificationMsg{} }
func (m *WorkMomentNotificationMsg) String() string            { return proto.CompactTextString(m) }
func (*WorkMomentNotificationMsg) ProtoMessage()               {}
func (*WorkMomentNotificationMsg) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{42} }

func (m *WorkMomentNotificationMsg) GetNotificationMsgType() int32 {
	if m != nil {
		return m.NotificationMsgType
	}
	return 0
}

func (m *WorkMomentNotificationMsg) GetReplyUserName() string {
	if m != nil {
		return m.ReplyUserName
	}
	return ""
}

func (m *WorkMomentNotificationMsg) GetReplyUserID() string {
	if m != nil {
		return m.ReplyUserID
	}
	return ""
}

func (m *WorkMomentNotificationMsg) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *WorkMomentNotificationMsg) GetContentID() string {
	if m != nil {
		return m.ContentID
	}
	return ""
}

func (m *WorkMomentNotificationMsg) GetWorkMomentID() string {
	if m != nil {
		return m.WorkMomentID
	}
	return ""
}

func (m *WorkMomentNotificationMsg) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *WorkMomentNotificationMsg) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

func (m *WorkMomentNotificationMsg) GetFaceURL() string {
	if m != nil {
		return m.FaceURL
	}
	return ""
}

func (m *WorkMomentNotificationMsg) GetWorkMomentContent() string {
	if m != nil {
		return m.WorkMomentContent
	}
	return ""
}

func (m *WorkMomentNotificationMsg) GetCreateTime() int32 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

type SetUserWorkMomentsLevelReq struct {
	UserID      string `protobuf:"bytes,1,opt,name=userID" json:"userID,omitempty"`
	Level       int32  `protobuf:"varint,2,opt,name=level" json:"level,omitempty"`
	OperationID string `protobuf:"bytes,3,opt,name=operationID" json:"operationID,omitempty"`
}

func (m *SetUserWorkMomentsLevelReq) Reset()                    { *m = SetUserWorkMomentsLevelReq{} }
func (m *SetUserWorkMomentsLevelReq) String() string            { return proto.CompactTextString(m) }
func (*SetUserWorkMomentsLevelReq) ProtoMessage()               {}
func (*SetUserWorkMomentsLevelReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{43} }

func (m *SetUserWorkMomentsLevelReq) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *SetUserWorkMomentsLevelReq) GetLevel() int32 {
	if m != nil {
		return m.Level
	}
	return 0
}

func (m *SetUserWorkMomentsLevelReq) GetOperationID() string {
	if m != nil {
		return m.OperationID
	}
	return ""
}

type SetUserWorkMomentsLevelResp struct {
	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=commonResp" json:"commonResp,omitempty"`
}

func (m *SetUserWorkMomentsLevelResp) Reset()                    { *m = SetUserWorkMomentsLevelResp{} }
func (m *SetUserWorkMomentsLevelResp) String() string            { return proto.CompactTextString(m) }
func (*SetUserWorkMomentsLevelResp) ProtoMessage()               {}
func (*SetUserWorkMomentsLevelResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{44} }

func (m *SetUserWorkMomentsLevelResp) GetCommonResp() *CommonResp {
	if m != nil {
		return m.CommonResp
	}
	return nil
}

func init() {
	proto.RegisterType((*CommonResp)(nil), "office.CommonResp")
	proto.RegisterType((*TagUser)(nil), "office.TagUser")
	proto.RegisterType((*Tag)(nil), "office.Tag")
	proto.RegisterType((*GetUserTagsReq)(nil), "office.GetUserTagsReq")
	proto.RegisterType((*GetUserTagsResp)(nil), "office.GetUserTagsResp")
	proto.RegisterType((*CreateTagReq)(nil), "office.CreateTagReq")
	proto.RegisterType((*CreateTagResp)(nil), "office.CreateTagResp")
	proto.RegisterType((*DeleteTagReq)(nil), "office.DeleteTagReq")
	proto.RegisterType((*DeleteTagResp)(nil), "office.DeleteTagResp")
	proto.RegisterType((*SetTagReq)(nil), "office.SetTagReq")
	proto.RegisterType((*SetTagResp)(nil), "office.SetTagResp")
	proto.RegisterType((*SendMsg2TagReq)(nil), "office.SendMsg2TagReq")
	proto.RegisterType((*SendMsg2TagResp)(nil), "office.SendMsg2TagResp")
	proto.RegisterType((*GetTagSendLogsReq)(nil), "office.GetTagSendLogsReq")
	proto.RegisterType((*TagSendLog)(nil), "office.TagSendLog")
	proto.RegisterType((*GetTagSendLogsResp)(nil), "office.GetTagSendLogsResp")
	proto.RegisterType((*GetUserTagByIDReq)(nil), "office.GetUserTagByIDReq")
	proto.RegisterType((*GetUserTagByIDResp)(nil), "office.GetUserTagByIDResp")
	proto.RegisterType((*LikeUser)(nil), "office.LikeUser")
	proto.RegisterType((*NotificationUser)(nil), "office.NotificationUser")
	proto.RegisterType((*Comment)(nil), "office.Comment")
	proto.RegisterType((*PermissionGroup)(nil), "office.PermissionGroup")
	proto.RegisterType((*WorkMomentUser)(nil), "office.WorkMomentUser")
	proto.RegisterType((*WorkMoment)(nil), "office.WorkMoment")
	proto.RegisterType((*CreateOneWorkMomentReq)(nil), "office.CreateOneWorkMomentReq")
	proto.RegisterType((*CreateOneWorkMomentResp)(nil), "office.CreateOneWorkMomentResp")
	proto.RegisterType((*DeleteOneWorkMomentReq)(nil), "office.DeleteOneWorkMomentReq")
	proto.RegisterType((*DeleteOneWorkMomentResp)(nil), "office.DeleteOneWorkMomentResp")
	proto.RegisterType((*LikeOneWorkMomentReq)(nil), "office.LikeOneWorkMomentReq")
	proto.RegisterType((*LikeOneWorkMomentResp)(nil), "office.LikeOneWorkMomentResp")
	proto.RegisterType((*CommentOneWorkMomentReq)(nil), "office.CommentOneWorkMomentReq")
	proto.RegisterType((*CommentOneWorkMomentResp)(nil), "office.CommentOneWorkMomentResp")
	proto.RegisterType((*DeleteCommentReq)(nil), "office.DeleteCommentReq")
	proto.RegisterType((*DeleteCommentResp)(nil), "office.DeleteCommentResp")
	proto.RegisterType((*GetWorkMomentByIDReq)(nil), "office.GetWorkMomentByIDReq")
	proto.RegisterType((*GetWorkMomentByIDResp)(nil), "office.GetWorkMomentByIDResp")
	proto.RegisterType((*ChangeWorkMomentPermissionReq)(nil), "office.ChangeWorkMomentPermissionReq")
	proto.RegisterType((*ChangeWorkMomentPermissionResp)(nil), "office.ChangeWorkMomentPermissionResp")
	proto.RegisterType((*GetUserWorkMomentsReq)(nil), "office.GetUserWorkMomentsReq")
	proto.RegisterType((*GetUserWorkMomentsResp)(nil), "office.GetUserWorkMomentsResp")
	proto.RegisterType((*GetUserFriendWorkMomentsReq)(nil), "office.GetUserFriendWorkMomentsReq")
	proto.RegisterType((*GetUserFriendWorkMomentsResp)(nil), "office.GetUserFriendWorkMomentsResp")
	proto.RegisterType((*WorkMomentNotificationMsg)(nil), "office.WorkMomentNotificationMsg")
	proto.RegisterType((*SetUserWorkMomentsLevelReq)(nil), "office.SetUserWorkMomentsLevelReq")
	proto.RegisterType((*SetUserWorkMomentsLevelResp)(nil), "office.SetUserWorkMomentsLevelResp")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for OfficeService service

type OfficeServiceClient interface {
	GetUserTags(ctx context.Context, in *GetUserTagsReq, opts ...grpc.CallOption) (*GetUserTagsResp, error)
	CreateTag(ctx context.Context, in *CreateTagReq, opts ...grpc.CallOption) (*CreateTagResp, error)
	DeleteTag(ctx context.Context, in *DeleteTagReq, opts ...grpc.CallOption) (*DeleteTagResp, error)
	SetTag(ctx context.Context, in *SetTagReq, opts ...grpc.CallOption) (*SetTagResp, error)
	SendMsg2Tag(ctx context.Context, in *SendMsg2TagReq, opts ...grpc.CallOption) (*SendMsg2TagResp, error)
	GetTagSendLogs(ctx context.Context, in *GetTagSendLogsReq, opts ...grpc.CallOption) (*GetTagSendLogsResp, error)
	GetUserTagByID(ctx context.Context, in *GetUserTagByIDReq, opts ...grpc.CallOption) (*GetUserTagByIDResp, error)
	CreateOneWorkMoment(ctx context.Context, in *CreateOneWorkMomentReq, opts ...grpc.CallOption) (*CreateOneWorkMomentResp, error)
	DeleteOneWorkMoment(ctx context.Context, in *DeleteOneWorkMomentReq, opts ...grpc.CallOption) (*DeleteOneWorkMomentResp, error)
	LikeOneWorkMoment(ctx context.Context, in *LikeOneWorkMomentReq, opts ...grpc.CallOption) (*LikeOneWorkMomentResp, error)
	CommentOneWorkMoment(ctx context.Context, in *CommentOneWorkMomentReq, opts ...grpc.CallOption) (*CommentOneWorkMomentResp, error)
	DeleteComment(ctx context.Context, in *DeleteCommentReq, opts ...grpc.CallOption) (*DeleteCommentResp, error)
	GetWorkMomentByID(ctx context.Context, in *GetWorkMomentByIDReq, opts ...grpc.CallOption) (*GetWorkMomentByIDResp, error)
	ChangeWorkMomentPermission(ctx context.Context, in *ChangeWorkMomentPermissionReq, opts ...grpc.CallOption) (*ChangeWorkMomentPermissionResp, error)
	// / user self
	GetUserWorkMoments(ctx context.Context, in *GetUserWorkMomentsReq, opts ...grpc.CallOption) (*GetUserWorkMomentsResp, error)
	// / users friend
	GetUserFriendWorkMoments(ctx context.Context, in *GetUserFriendWorkMomentsReq, opts ...grpc.CallOption) (*GetUserFriendWorkMomentsResp, error)
	SetUserWorkMomentsLevel(ctx context.Context, in *SetUserWorkMomentsLevelReq, opts ...grpc.CallOption) (*SetUserWorkMomentsLevelResp, error)
}

type officeServiceClient struct {
	cc *grpc.ClientConn
}

func NewOfficeServiceClient(cc *grpc.ClientConn) OfficeServiceClient {
	return &officeServiceClient{cc}
}

func (c *officeServiceClient) GetUserTags(ctx context.Context, in *GetUserTagsReq, opts ...grpc.CallOption) (*GetUserTagsResp, error) {
	out := new(GetUserTagsResp)
	err := grpc.Invoke(ctx, "/office.OfficeService/GetUserTags", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *officeServiceClient) CreateTag(ctx context.Context, in *CreateTagReq, opts ...grpc.CallOption) (*CreateTagResp, error) {
	out := new(CreateTagResp)
	err := grpc.Invoke(ctx, "/office.OfficeService/CreateTag", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *officeServiceClient) DeleteTag(ctx context.Context, in *DeleteTagReq, opts ...grpc.CallOption) (*DeleteTagResp, error) {
	out := new(DeleteTagResp)
	err := grpc.Invoke(ctx, "/office.OfficeService/DeleteTag", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *officeServiceClient) SetTag(ctx context.Context, in *SetTagReq, opts ...grpc.CallOption) (*SetTagResp, error) {
	out := new(SetTagResp)
	err := grpc.Invoke(ctx, "/office.OfficeService/SetTag", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *officeServiceClient) SendMsg2Tag(ctx context.Context, in *SendMsg2TagReq, opts ...grpc.CallOption) (*SendMsg2TagResp, error) {
	out := new(SendMsg2TagResp)
	err := grpc.Invoke(ctx, "/office.OfficeService/SendMsg2Tag", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *officeServiceClient) GetTagSendLogs(ctx context.Context, in *GetTagSendLogsReq, opts ...grpc.CallOption) (*GetTagSendLogsResp, error) {
	out := new(GetTagSendLogsResp)
	err := grpc.Invoke(ctx, "/office.OfficeService/GetTagSendLogs", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *officeServiceClient) GetUserTagByID(ctx context.Context, in *GetUserTagByIDReq, opts ...grpc.CallOption) (*GetUserTagByIDResp, error) {
	out := new(GetUserTagByIDResp)
	err := grpc.Invoke(ctx, "/office.OfficeService/GetUserTagByID", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *officeServiceClient) CreateOneWorkMoment(ctx context.Context, in *CreateOneWorkMomentReq, opts ...grpc.CallOption) (*CreateOneWorkMomentResp, error) {
	out := new(CreateOneWorkMomentResp)
	err := grpc.Invoke(ctx, "/office.OfficeService/CreateOneWorkMoment", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *officeServiceClient) DeleteOneWorkMoment(ctx context.Context, in *DeleteOneWorkMomentReq, opts ...grpc.CallOption) (*DeleteOneWorkMomentResp, error) {
	out := new(DeleteOneWorkMomentResp)
	err := grpc.Invoke(ctx, "/office.OfficeService/DeleteOneWorkMoment", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *officeServiceClient) LikeOneWorkMoment(ctx context.Context, in *LikeOneWorkMomentReq, opts ...grpc.CallOption) (*LikeOneWorkMomentResp, error) {
	out := new(LikeOneWorkMomentResp)
	err := grpc.Invoke(ctx, "/office.OfficeService/LikeOneWorkMoment", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *officeServiceClient) CommentOneWorkMoment(ctx context.Context, in *CommentOneWorkMomentReq, opts ...grpc.CallOption) (*CommentOneWorkMomentResp, error) {
	out := new(CommentOneWorkMomentResp)
	err := grpc.Invoke(ctx, "/office.OfficeService/CommentOneWorkMoment", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *officeServiceClient) DeleteComment(ctx context.Context, in *DeleteCommentReq, opts ...grpc.CallOption) (*DeleteCommentResp, error) {
	out := new(DeleteCommentResp)
	err := grpc.Invoke(ctx, "/office.OfficeService/DeleteComment", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *officeServiceClient) GetWorkMomentByID(ctx context.Context, in *GetWorkMomentByIDReq, opts ...grpc.CallOption) (*GetWorkMomentByIDResp, error) {
	out := new(GetWorkMomentByIDResp)
	err := grpc.Invoke(ctx, "/office.OfficeService/GetWorkMomentByID", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *officeServiceClient) ChangeWorkMomentPermission(ctx context.Context, in *ChangeWorkMomentPermissionReq, opts ...grpc.CallOption) (*ChangeWorkMomentPermissionResp, error) {
	out := new(ChangeWorkMomentPermissionResp)
	err := grpc.Invoke(ctx, "/office.OfficeService/ChangeWorkMomentPermission", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *officeServiceClient) GetUserWorkMoments(ctx context.Context, in *GetUserWorkMomentsReq, opts ...grpc.CallOption) (*GetUserWorkMomentsResp, error) {
	out := new(GetUserWorkMomentsResp)
	err := grpc.Invoke(ctx, "/office.OfficeService/GetUserWorkMoments", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *officeServiceClient) GetUserFriendWorkMoments(ctx context.Context, in *GetUserFriendWorkMomentsReq, opts ...grpc.CallOption) (*GetUserFriendWorkMomentsResp, error) {
	out := new(GetUserFriendWorkMomentsResp)
	err := grpc.Invoke(ctx, "/office.OfficeService/GetUserFriendWorkMoments", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *officeServiceClient) SetUserWorkMomentsLevel(ctx context.Context, in *SetUserWorkMomentsLevelReq, opts ...grpc.CallOption) (*SetUserWorkMomentsLevelResp, error) {
	out := new(SetUserWorkMomentsLevelResp)
	err := grpc.Invoke(ctx, "/office.OfficeService/SetUserWorkMomentsLevel", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for OfficeService service

type OfficeServiceServer interface {
	GetUserTags(context.Context, *GetUserTagsReq) (*GetUserTagsResp, error)
	CreateTag(context.Context, *CreateTagReq) (*CreateTagResp, error)
	DeleteTag(context.Context, *DeleteTagReq) (*DeleteTagResp, error)
	SetTag(context.Context, *SetTagReq) (*SetTagResp, error)
	SendMsg2Tag(context.Context, *SendMsg2TagReq) (*SendMsg2TagResp, error)
	GetTagSendLogs(context.Context, *GetTagSendLogsReq) (*GetTagSendLogsResp, error)
	GetUserTagByID(context.Context, *GetUserTagByIDReq) (*GetUserTagByIDResp, error)
	CreateOneWorkMoment(context.Context, *CreateOneWorkMomentReq) (*CreateOneWorkMomentResp, error)
	DeleteOneWorkMoment(context.Context, *DeleteOneWorkMomentReq) (*DeleteOneWorkMomentResp, error)
	LikeOneWorkMoment(context.Context, *LikeOneWorkMomentReq) (*LikeOneWorkMomentResp, error)
	CommentOneWorkMoment(context.Context, *CommentOneWorkMomentReq) (*CommentOneWorkMomentResp, error)
	DeleteComment(context.Context, *DeleteCommentReq) (*DeleteCommentResp, error)
	GetWorkMomentByID(context.Context, *GetWorkMomentByIDReq) (*GetWorkMomentByIDResp, error)
	ChangeWorkMomentPermission(context.Context, *ChangeWorkMomentPermissionReq) (*ChangeWorkMomentPermissionResp, error)
	// / user self
	GetUserWorkMoments(context.Context, *GetUserWorkMomentsReq) (*GetUserWorkMomentsResp, error)
	// / users friend
	GetUserFriendWorkMoments(context.Context, *GetUserFriendWorkMomentsReq) (*GetUserFriendWorkMomentsResp, error)
	SetUserWorkMomentsLevel(context.Context, *SetUserWorkMomentsLevelReq) (*SetUserWorkMomentsLevelResp, error)
}

func RegisterOfficeServiceServer(s *grpc.Server, srv OfficeServiceServer) {
	s.RegisterService(&_OfficeService_serviceDesc, srv)
}

func _OfficeService_GetUserTags_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserTagsReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OfficeServiceServer).GetUserTags(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/office.OfficeService/GetUserTags",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OfficeServiceServer).GetUserTags(ctx, req.(*GetUserTagsReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _OfficeService_CreateTag_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateTagReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OfficeServiceServer).CreateTag(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/office.OfficeService/CreateTag",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OfficeServiceServer).CreateTag(ctx, req.(*CreateTagReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _OfficeService_DeleteTag_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteTagReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OfficeServiceServer).DeleteTag(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/office.OfficeService/DeleteTag",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OfficeServiceServer).DeleteTag(ctx, req.(*DeleteTagReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _OfficeService_SetTag_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetTagReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OfficeServiceServer).SetTag(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/office.OfficeService/SetTag",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OfficeServiceServer).SetTag(ctx, req.(*SetTagReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _OfficeService_SendMsg2Tag_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendMsg2TagReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OfficeServiceServer).SendMsg2Tag(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/office.OfficeService/SendMsg2Tag",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OfficeServiceServer).SendMsg2Tag(ctx, req.(*SendMsg2TagReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _OfficeService_GetTagSendLogs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTagSendLogsReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OfficeServiceServer).GetTagSendLogs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/office.OfficeService/GetTagSendLogs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OfficeServiceServer).GetTagSendLogs(ctx, req.(*GetTagSendLogsReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _OfficeService_GetUserTagByID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserTagByIDReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OfficeServiceServer).GetUserTagByID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/office.OfficeService/GetUserTagByID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OfficeServiceServer).GetUserTagByID(ctx, req.(*GetUserTagByIDReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _OfficeService_CreateOneWorkMoment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateOneWorkMomentReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OfficeServiceServer).CreateOneWorkMoment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/office.OfficeService/CreateOneWorkMoment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OfficeServiceServer).CreateOneWorkMoment(ctx, req.(*CreateOneWorkMomentReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _OfficeService_DeleteOneWorkMoment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteOneWorkMomentReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OfficeServiceServer).DeleteOneWorkMoment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/office.OfficeService/DeleteOneWorkMoment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OfficeServiceServer).DeleteOneWorkMoment(ctx, req.(*DeleteOneWorkMomentReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _OfficeService_LikeOneWorkMoment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LikeOneWorkMomentReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OfficeServiceServer).LikeOneWorkMoment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/office.OfficeService/LikeOneWorkMoment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OfficeServiceServer).LikeOneWorkMoment(ctx, req.(*LikeOneWorkMomentReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _OfficeService_CommentOneWorkMoment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CommentOneWorkMomentReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OfficeServiceServer).CommentOneWorkMoment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/office.OfficeService/CommentOneWorkMoment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OfficeServiceServer).CommentOneWorkMoment(ctx, req.(*CommentOneWorkMomentReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _OfficeService_DeleteComment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteCommentReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OfficeServiceServer).DeleteComment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/office.OfficeService/DeleteComment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OfficeServiceServer).DeleteComment(ctx, req.(*DeleteCommentReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _OfficeService_GetWorkMomentByID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetWorkMomentByIDReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OfficeServiceServer).GetWorkMomentByID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/office.OfficeService/GetWorkMomentByID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OfficeServiceServer).GetWorkMomentByID(ctx, req.(*GetWorkMomentByIDReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _OfficeService_ChangeWorkMomentPermission_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChangeWorkMomentPermissionReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OfficeServiceServer).ChangeWorkMomentPermission(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/office.OfficeService/ChangeWorkMomentPermission",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OfficeServiceServer).ChangeWorkMomentPermission(ctx, req.(*ChangeWorkMomentPermissionReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _OfficeService_GetUserWorkMoments_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserWorkMomentsReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OfficeServiceServer).GetUserWorkMoments(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/office.OfficeService/GetUserWorkMoments",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OfficeServiceServer).GetUserWorkMoments(ctx, req.(*GetUserWorkMomentsReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _OfficeService_GetUserFriendWorkMoments_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserFriendWorkMomentsReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OfficeServiceServer).GetUserFriendWorkMoments(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/office.OfficeService/GetUserFriendWorkMoments",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OfficeServiceServer).GetUserFriendWorkMoments(ctx, req.(*GetUserFriendWorkMomentsReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _OfficeService_SetUserWorkMomentsLevel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetUserWorkMomentsLevelReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OfficeServiceServer).SetUserWorkMomentsLevel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/office.OfficeService/SetUserWorkMomentsLevel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OfficeServiceServer).SetUserWorkMomentsLevel(ctx, req.(*SetUserWorkMomentsLevelReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _OfficeService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "office.OfficeService",
	HandlerType: (*OfficeServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetUserTags",
			Handler:    _OfficeService_GetUserTags_Handler,
		},
		{
			MethodName: "CreateTag",
			Handler:    _OfficeService_CreateTag_Handler,
		},
		{
			MethodName: "DeleteTag",
			Handler:    _OfficeService_DeleteTag_Handler,
		},
		{
			MethodName: "SetTag",
			Handler:    _OfficeService_SetTag_Handler,
		},
		{
			MethodName: "SendMsg2Tag",
			Handler:    _OfficeService_SendMsg2Tag_Handler,
		},
		{
			MethodName: "GetTagSendLogs",
			Handler:    _OfficeService_GetTagSendLogs_Handler,
		},
		{
			MethodName: "GetUserTagByID",
			Handler:    _OfficeService_GetUserTagByID_Handler,
		},
		{
			MethodName: "CreateOneWorkMoment",
			Handler:    _OfficeService_CreateOneWorkMoment_Handler,
		},
		{
			MethodName: "DeleteOneWorkMoment",
			Handler:    _OfficeService_DeleteOneWorkMoment_Handler,
		},
		{
			MethodName: "LikeOneWorkMoment",
			Handler:    _OfficeService_LikeOneWorkMoment_Handler,
		},
		{
			MethodName: "CommentOneWorkMoment",
			Handler:    _OfficeService_CommentOneWorkMoment_Handler,
		},
		{
			MethodName: "DeleteComment",
			Handler:    _OfficeService_DeleteComment_Handler,
		},
		{
			MethodName: "GetWorkMomentByID",
			Handler:    _OfficeService_GetWorkMomentByID_Handler,
		},
		{
			MethodName: "ChangeWorkMomentPermission",
			Handler:    _OfficeService_ChangeWorkMomentPermission_Handler,
		},
		{
			MethodName: "GetUserWorkMoments",
			Handler:    _OfficeService_GetUserWorkMoments_Handler,
		},
		{
			MethodName: "GetUserFriendWorkMoments",
			Handler:    _OfficeService_GetUserFriendWorkMoments_Handler,
		},
		{
			MethodName: "SetUserWorkMomentsLevel",
			Handler:    _OfficeService_SetUserWorkMomentsLevel_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "office/office.proto",
}

func init() { proto.RegisterFile("office/office.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 1683 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x59, 0xcd, 0x6e, 0x1c, 0xc5,
	0x13, 0xd7, 0xec, 0x7a, 0xbd, 0xde, 0x5a, 0x27, 0x8e, 0xdb, 0x5f, 0x9b, 0x49, 0xfc, 0xf1, 0x9f,
	0x24, 0x7f, 0x59, 0x40, 0x6c, 0x64, 0x22, 0x84, 0x40, 0x44, 0x28, 0xde, 0xc4, 0x5a, 0xf0, 0xc6,
	0x66, 0x6c, 0x13, 0xc1, 0x01, 0x6b, 0xb2, 0x6e, 0x0f, 0x2b, 0xaf, 0x67, 0x26, 0xd3, 0x63, 0x9b,
	0x9c, 0x90, 0x38, 0xc3, 0x05, 0xce, 0x3c, 0x05, 0xcf, 0x80, 0x04, 0x27, 0xc4, 0x81, 0x37, 0xe0,
	0x1d, 0xb8, 0xa2, 0xee, 0x99, 0xe9, 0x8f, 0x99, 0x9e, 0xdd, 0x65, 0x02, 0x07, 0x4e, 0xde, 0xaa,
	0xa9, 0xae, 0xae, 0xfa, 0x75, 0x75, 0x75, 0x55, 0x19, 0xe6, 0xfc, 0xd3, 0xd3, 0x7e, 0x0f, 0x6f,
	0xc6, 0x7f, 0x36, 0x82, 0xd0, 0x8f, 0x7c, 0x34, 0x19, 0x53, 0xe6, 0xfa, 0x5e, 0x80, 0xbd, 0xfb,
	0x9d, 0xee, 0xfd, 0x03, 0x1c, 0x5e, 0xe2, 0x70, 0x33, 0x38, 0x73, 0x37, 0x99, 0xc4, 0x26, 0x39,
	0x39, 0x3b, 0xbe, 0x22, 0x9b, 0x57, 0x24, 0x5e, 0x61, 0x3d, 0x04, 0xd8, 0xf6, 0xcf, 0xcf, 0x7d,
	0xcf, 0xc6, 0x24, 0x40, 0x2d, 0xa8, 0xe3, 0x30, 0xdc, 0xf6, 0x4f, 0x70, 0xcb, 0x58, 0x33, 0xd6,
	0x6b, 0x76, 0x4a, 0xa2, 0x45, 0x98, 0xc4, 0x61, 0xd8, 0x25, 0x6e, 0xab, 0xb2, 0x66, 0xac, 0x37,
	0xec, 0x84, 0xb2, 0xde, 0x87, 0xfa, 0xa1, 0xe3, 0x1e, 0x11, 0x1c, 0x52, 0x91, 0x0b, 0x82, 0xc3,
	0x4e, 0x9b, 0xad, 0x6d, 0xd8, 0x09, 0x85, 0x4c, 0x98, 0xa2, 0xbf, 0x9e, 0x3a, 0xe7, 0x38, 0x59,
	0xcc, 0x69, 0xeb, 0x39, 0x54, 0x0f, 0x1d, 0x17, 0xcd, 0x43, 0x2d, 0x72, 0x5c, 0xbe, 0x32, 0x26,
	0xa8, 0x35, 0x91, 0xe3, 0x4a, 0xeb, 0x52, 0x12, 0xbd, 0x1e, 0xab, 0xdc, 0xed, 0x93, 0xa8, 0x55,
	0x5d, 0xab, 0xae, 0x37, 0xb7, 0x66, 0x36, 0x12, 0x20, 0x12, 0x6b, 0x6c, 0x2e, 0x60, 0x7d, 0x08,
	0xd7, 0x77, 0x70, 0x44, 0x99, 0x87, 0x8e, 0x4b, 0x6c, 0xfc, 0xa2, 0xd0, 0xd2, 0x35, 0x68, 0xfa,
	0x01, 0x0e, 0x9d, 0xa8, 0xef, 0x7b, 0x9d, 0x76, 0xb2, 0xa9, 0xcc, 0xb2, 0x4e, 0x61, 0x46, 0xd1,
	0x45, 0x02, 0xb4, 0x05, 0xd0, 0xe3, 0x08, 0x32, 0x85, 0xcd, 0x2d, 0x94, 0x5a, 0x23, 0xb0, 0xb5,
	0x25, 0x29, 0xb4, 0x0a, 0x13, 0x91, 0xe3, 0x92, 0x56, 0x85, 0xd9, 0xde, 0x94, 0x6c, 0xb7, 0xd9,
	0x07, 0xeb, 0x6b, 0x03, 0xa6, 0xb7, 0x43, 0xec, 0x44, 0x98, 0xf2, 0xf0, 0x0b, 0x19, 0x0b, 0x43,
	0xc5, 0x42, 0x38, 0x53, 0x51, 0x9c, 0x59, 0x01, 0x88, 0x7f, 0x71, 0x94, 0x1a, 0xb6, 0xc4, 0xc9,
	0x3a, 0x3b, 0x91, 0x77, 0x76, 0x1b, 0xae, 0x49, 0x36, 0x94, 0x73, 0xd5, 0xfa, 0x1c, 0xa6, 0xdb,
	0x78, 0x80, 0xb9, 0x23, 0x45, 0xd8, 0xf3, 0x10, 0xa8, 0xc8, 0x21, 0x90, 0x31, 0xb2, 0xaa, 0x35,
	0x52, 0xd2, 0x5f, 0xd2, 0xc8, 0xdf, 0x0c, 0x68, 0x1c, 0xe0, 0xa8, 0x94, 0x89, 0x2d, 0xa8, 0x7b,
	0xf8, 0x8a, 0x9d, 0x4c, 0x6c, 0x5e, 0x4a, 0xa2, 0x0d, 0x40, 0x7d, 0xaf, 0x17, 0x62, 0x87, 0xe0,
	0x23, 0x71, 0x12, 0x13, 0xec, 0x24, 0x34, 0x5f, 0xd0, 0x6b, 0x70, 0x23, 0xc4, 0x27, 0x17, 0x3d,
	0x59, 0xba, 0xc6, 0xa4, 0x73, 0xfc, 0x2c, 0x30, 0x93, 0x79, 0x60, 0x3e, 0x00, 0x48, 0x5d, 0x2a,
	0x89, 0xca, 0x1f, 0x06, 0x5c, 0x3f, 0xc0, 0xde, 0x49, 0x97, 0xb8, 0x5b, 0x4a, 0x18, 0x32, 0xcb,
	0x0c, 0x66, 0x59, 0x4a, 0xd2, 0x5b, 0x7e, 0x94, 0x5e, 0xc9, 0x0a, 0xfb, 0xc4, 0x6f, 0x20, 0xba,
	0x0d, 0x8d, 0x9d, 0xd0, 0xbf, 0x08, 0xa4, 0x48, 0x6c, 0xb8, 0x29, 0x83, 0xc2, 0x4d, 0xb0, 0x77,
	0xc2, 0x63, 0x30, 0xa1, 0x28, 0x1c, 0xf4, 0x17, 0x0e, 0xf7, 0x07, 0x4e, 0x74, 0xea, 0x87, 0xe7,
	0x9d, 0x76, 0xab, 0xc6, 0xb2, 0x52, 0x8e, 0x4f, 0xed, 0xea, 0xf9, 0x5e, 0x84, 0xbd, 0x28, 0x81,
	0x22, 0x25, 0xb3, 0x40, 0xd5, 0xf3, 0x40, 0x3d, 0x86, 0x19, 0xc5, 0xcb, 0x92, 0x68, 0x7d, 0x6f,
	0xc0, 0xec, 0x0e, 0x03, 0x9c, 0x6a, 0xdb, 0xf5, 0xe3, 0x54, 0xd3, 0x06, 0xd8, 0x77, 0xdc, 0xbe,
	0xc7, 0x36, 0x4b, 0x34, 0xdd, 0xdd, 0x20, 0x2c, 0x2d, 0x1f, 0x3b, 0x41, 0xff, 0x38, 0x70, 0x42,
	0xe7, 0x9c, 0x6c, 0xd8, 0xf8, 0xc5, 0x05, 0x26, 0x91, 0x90, 0xb5, 0x21, 0xe0, 0xbf, 0x0b, 0xef,
	0xf8, 0xe8, 0xeb, 0xe1, 0x03, 0x08, 0x8b, 0x94, 0xbc, 0x69, 0x8c, 0xc8, 0x9b, 0x32, 0xa6, 0x15,
	0x15, 0x53, 0x13, 0xa6, 0xe8, 0x09, 0x1c, 0xf6, 0x93, 0x98, 0xaf, 0xda, 0x9c, 0xb6, 0x7e, 0x32,
	0x00, 0x65, 0x61, 0x28, 0x99, 0x25, 0x1f, 0x2b, 0xd8, 0x55, 0xd8, 0x9a, 0x7b, 0x5a, 0xec, 0x48,
	0xe0, 0x7b, 0x04, 0x17, 0x80, 0xf7, 0x00, 0x9a, 0x91, 0xb0, 0x26, 0x79, 0x2f, 0x90, 0xe4, 0x77,
	0xf2, 0xc9, 0x96, 0xc5, 0xac, 0x1e, 0x3b, 0xcd, 0x24, 0xd3, 0x3f, 0x7a, 0xd9, 0x69, 0xff, 0x1b,
	0xc9, 0xcb, 0x65, 0x58, 0x29, 0x9b, 0x94, 0xc4, 0x6a, 0x19, 0xaa, 0x91, 0xe3, 0x26, 0x20, 0x29,
	0x0f, 0x0a, 0xe5, 0x5b, 0x0f, 0x61, 0x6a, 0xb7, 0x7f, 0x86, 0x4b, 0xbf, 0xd3, 0x4f, 0xe0, 0xc6,
	0x53, 0x3f, 0xea, 0x9f, 0xf6, 0x7b, 0xcc, 0xf4, 0xd2, 0x7a, 0xfe, 0x34, 0xa0, 0x4e, 0x3d, 0xa0,
	0x51, 0x54, 0x62, 0x3d, 0x8d, 0xc9, 0x53, 0xa7, 0x87, 0x8f, 0xec, 0xdd, 0x34, 0xd9, 0x26, 0x24,
	0x05, 0x3b, 0xc4, 0xc1, 0xe0, 0x65, 0x9c, 0x23, 0xd3, 0xe7, 0x4c, 0x62, 0xa1, 0xbb, 0x70, 0x8d,
	0x93, 0x4c, 0x79, 0x8d, 0xc9, 0xa8, 0x4c, 0x9a, 0xab, 0x92, 0x30, 0xe7, 0x69, 0x55, 0x30, 0xe4,
	0x3b, 0x51, 0x57, 0xef, 0xc4, 0x0a, 0x40, 0x2f, 0x7e, 0x2c, 0xe9, 0xad, 0x98, 0x62, 0x79, 0x4a,
	0xe2, 0x58, 0x1d, 0x98, 0xd9, 0xc7, 0xe1, 0x79, 0x9f, 0x90, 0xbe, 0xef, 0xb1, 0x6c, 0x48, 0xb7,
	0x62, 0x59, 0x50, 0x7a, 0xd5, 0x05, 0x83, 0x6e, 0xc5, 0x08, 0x1e, 0x55, 0x29, 0x69, 0xb5, 0xe1,
	0xfa, 0x33, 0x3f, 0x3c, 0xeb, 0xfa, 0x14, 0xc6, 0xd2, 0x47, 0xf1, 0xcd, 0x04, 0x80, 0x50, 0x83,
	0x2c, 0x98, 0xbe, 0xe2, 0x14, 0x57, 0xa4, 0xf0, 0x0a, 0xd3, 0x90, 0xbc, 0x4d, 0xb5, 0xf8, 0xc4,
	0x26, 0xd4, 0x13, 0x93, 0xb0, 0xac, 0xa9, 0x58, 0xbe, 0x0b, 0xd3, 0x83, 0x24, 0x5a, 0x59, 0xaa,
	0x9a, 0x64, 0x57, 0x76, 0x31, 0x8d, 0x6a, 0xd5, 0x79, 0x5b, 0x91, 0xa5, 0x29, 0xae, 0x17, 0x07,
	0x18, 0x69, 0xd5, 0xd5, 0x14, 0x97, 0x04, 0x9e, 0xcd, 0x05, 0xe8, 0xa1, 0x05, 0xfc, 0x50, 0xd2,
	0x43, 0x13, 0x1c, 0xf4, 0x04, 0x90, 0xa0, 0xb8, 0x39, 0x8d, 0xa1, 0xe6, 0x68, 0x56, 0xa0, 0x0e,
	0xcc, 0x05, 0xea, 0xe1, 0x33, 0x45, 0xc0, 0x14, 0x2d, 0xa5, 0x8a, 0x32, 0xf1, 0x61, 0xeb, 0xd6,
	0xa0, 0xb7, 0x01, 0x9c, 0x88, 0x9b, 0xd2, 0x1c, 0x6a, 0x8a, 0x24, 0x99, 0x89, 0xcf, 0xe9, 0x5c,
	0x7c, 0x7a, 0xb0, 0x18, 0x17, 0x7b, 0x7b, 0x1e, 0x16, 0x6a, 0x68, 0xd2, 0xdb, 0x02, 0x10, 0x51,
	0x90, 0x4d, 0x47, 0x92, 0xa8, 0x24, 0x35, 0x46, 0x25, 0xdd, 0x85, 0x25, 0xed, 0x7e, 0x25, 0x5f,
	0xdf, 0x4b, 0x58, 0x8c, 0xcb, 0xc0, 0x9c, 0xf9, 0xaf, 0x12, 0xd8, 0xa3, 0x33, 0x78, 0x17, 0x96,
	0xb4, 0xfb, 0x96, 0x74, 0x23, 0x82, 0x79, 0x9a, 0xa7, 0x73, 0x4e, 0x14, 0x5d, 0x70, 0x0b, 0xa6,
	0x9f, 0xc9, 0xce, 0x55, 0x34, 0xce, 0x8d, 0x76, 0xe2, 0x23, 0x58, 0xd0, 0xec, 0x5a, 0xd2, 0x85,
	0x1f, 0x0d, 0x58, 0x4a, 0x6e, 0xda, 0xdf, 0x71, 0xe3, 0x6a, 0x0c, 0x37, 0xe4, 0x04, 0x5f, 0xcd,
	0x27, 0x78, 0x29, 0xa1, 0x4c, 0x0c, 0x2d, 0x02, 0x6b, 0x79, 0x08, 0x9e, 0x42, 0x4b, 0x6f, 0x74,
	0x49, 0x14, 0xbe, 0x33, 0xe0, 0x46, 0x1c, 0x18, 0x69, 0xd6, 0x19, 0x33, 0x14, 0x95, 0xf7, 0xa7,
	0x92, 0x7d, 0x7f, 0x4c, 0x98, 0xf2, 0x03, 0x05, 0x01, 0x4e, 0x8f, 0xd1, 0xd0, 0xed, 0xc0, 0x6c,
	0xc6, 0xa6, 0x92, 0xde, 0x7d, 0x09, 0xf3, 0x3b, 0x38, 0x12, 0x30, 0xa5, 0xf5, 0xd1, 0x38, 0x0e,
	0xca, 0x2e, 0x54, 0x86, 0xbb, 0xa0, 0x09, 0xd5, 0xaf, 0x60, 0x41, 0xb3, 0x73, 0xc9, 0xa2, 0x49,
	0xcd, 0x6c, 0x95, 0x71, 0x32, 0x9b, 0xf5, 0xbb, 0x01, 0xcb, 0xdb, 0x5f, 0x38, 0x9e, 0x2b, 0x45,
	0x89, 0x48, 0xdc, 0xff, 0x04, 0x08, 0xea, 0xa3, 0x54, 0xcd, 0x3d, 0x4a, 0x5b, 0x30, 0xaf, 0x3e,
	0x31, 0x4a, 0x63, 0xa9, 0xfd, 0x36, 0xc6, 0x05, 0x38, 0x84, 0x95, 0x61, 0x6e, 0x95, 0x4f, 0x06,
	0x0b, 0x49, 0x85, 0x2b, 0xf4, 0x0e, 0x9d, 0xc1, 0x0c, 0x43, 0x46, 0x6d, 0xa6, 0xaa, 0x25, 0x9b,
	0xa9, 0xd1, 0xf7, 0xe4, 0x17, 0x03, 0x16, 0x75, 0x56, 0x97, 0x0c, 0xb3, 0x07, 0xd0, 0x14, 0x87,
	0x9f, 0x0e, 0x7d, 0x74, 0x71, 0x26, 0x8b, 0x65, 0xba, 0x9f, 0x6a, 0xc9, 0xee, 0xc7, 0xfa, 0xc1,
	0x80, 0x5b, 0x89, 0x2f, 0x4f, 0xc2, 0x3e, 0xf6, 0x4e, 0xc6, 0x3c, 0x87, 0xb6, 0xa6, 0xf9, 0x7a,
	0x65, 0xac, 0x35, 0x17, 0xfa, 0x57, 0x03, 0x6e, 0x17, 0xdb, 0xf7, 0x5f, 0x44, 0xfc, 0xdb, 0x2a,
	0xdc, 0x14, 0x5b, 0xc8, 0x6d, 0x53, 0x97, 0xb8, 0xe8, 0x4d, 0x98, 0xf3, 0x54, 0xd6, 0xe1, 0xcb,
	0x20, 0x1d, 0xb7, 0xea, 0x3e, 0xe5, 0xfb, 0x96, 0x8a, 0xae, 0x6f, 0x79, 0x95, 0xe7, 0x51, 0x79,
	0x73, 0x6a, 0xd9, 0x37, 0x27, 0x9b, 0xcf, 0x26, 0x87, 0x16, 0x50, 0xf5, 0xc2, 0xce, 0x60, 0xaa,
	0xb8, 0x33, 0x68, 0xa8, 0x9d, 0xc1, 0x1b, 0x30, 0x2b, 0xb4, 0x6f, 0x27, 0x36, 0x03, 0x93, 0xc9,
	0x7f, 0xc8, 0x54, 0xb6, 0xcd, 0x5c, 0x65, 0x3b, 0x00, 0xf3, 0x20, 0x77, 0x99, 0x77, 0xf1, 0x25,
	0x1e, 0x8c, 0x68, 0xe9, 0x07, 0x54, 0x86, 0xa1, 0x5d, 0xb3, 0x63, 0x62, 0x8c, 0x78, 0xfe, 0x18,
	0x6e, 0x15, 0xee, 0x56, 0x2e, 0x9a, 0xb7, 0x7e, 0x06, 0xb8, 0xb6, 0xc7, 0x24, 0x0e, 0x70, 0x78,
	0xd9, 0xef, 0x61, 0xf4, 0x10, 0x9a, 0xd2, 0x18, 0x1a, 0xf1, 0xfa, 0x5f, 0x9d, 0x73, 0x9b, 0x4b,
	0x5a, 0x3e, 0x09, 0xd0, 0x3b, 0xd0, 0xe0, 0x93, 0x5d, 0x34, 0xcf, 0xb7, 0x97, 0x06, 0xce, 0xe6,
	0x82, 0x86, 0x1b, 0xaf, 0xe4, 0xe3, 0x56, 0xb1, 0x52, 0x9e, 0xf0, 0x8a, 0x95, 0xea, 0x5c, 0x76,
	0x13, 0x26, 0xe3, 0x79, 0x24, 0x9a, 0x4d, 0x05, 0xf8, 0xc8, 0xd5, 0x44, 0x59, 0x16, 0x09, 0xa8,
	0x93, 0xd2, 0x5c, 0x4e, 0x38, 0xa9, 0x8e, 0x24, 0x85, 0x93, 0xd9, 0x21, 0xde, 0x0e, 0x9b, 0xfb,
	0x4b, 0x83, 0x28, 0x74, 0x53, 0xc2, 0x43, 0x9d, 0xd3, 0x99, 0x66, 0xd1, 0x27, 0xae, 0x48, 0x9a,
	0xd2, 0x28, 0x8a, 0xd4, 0x11, 0x91, 0xa2, 0x28, 0x3b, 0xd8, 0xf9, 0x04, 0xe6, 0x34, 0x3d, 0x0f,
	0x5a, 0x51, 0xa1, 0xce, 0x56, 0xcd, 0xe6, 0xea, 0xd0, 0xef, 0xb1, 0x5e, 0x4d, 0x13, 0x22, 0xf4,
	0xea, 0x3b, 0x23, 0xa1, 0xb7, 0xa8, 0x83, 0xd9, 0x87, 0xd9, 0x5c, 0x5f, 0x80, 0x6e, 0xa7, 0xab,
	0x74, 0x8d, 0x8a, 0xb9, 0x3c, 0xe4, 0x2b, 0x09, 0xd0, 0xa7, 0x30, 0xaf, 0x2b, 0xb3, 0xd1, 0x6a,
	0xa6, 0x47, 0xcf, 0xe9, 0x5d, 0x1b, 0x2e, 0x40, 0x02, 0xd4, 0x4e, 0xff, 0x11, 0x90, 0xce, 0x97,
	0x5a, 0xaa, 0x7b, 0xa2, 0x0e, 0x37, 0x6f, 0x16, 0x7c, 0x89, 0x5d, 0xce, 0xd5, 0x97, 0xc2, 0x65,
	0x5d, 0xd1, 0x2b, 0x5c, 0xd6, 0x17, 0xa6, 0x67, 0x60, 0x16, 0x17, 0x56, 0xe8, 0x1e, 0xf7, 0x6b,
	0x58, 0x4d, 0x69, 0xfe, 0x7f, 0x1c, 0x31, 0x12, 0xa0, 0x03, 0x3e, 0x50, 0x94, 0xb2, 0x0f, 0x5a,
	0xce, 0xc4, 0xa4, 0x5a, 0x02, 0x98, 0x2b, 0xc3, 0x3e, 0x93, 0x00, 0x61, 0x68, 0x15, 0xbd, 0xd0,
	0xe8, 0x4e, 0x66, 0xad, 0xae, 0xc6, 0x30, 0xef, 0x8e, 0x16, 0x22, 0x01, 0x7a, 0x0e, 0x4b, 0x05,
	0x99, 0x13, 0x59, 0x52, 0x7a, 0x28, 0x48, 0xe4, 0xe6, 0x9d, 0x91, 0x32, 0x24, 0x78, 0xf4, 0xbf,
	0xcf, 0x56, 0xf7, 0x02, 0xec, 0x1d, 0x77, 0xba, 0xd2, 0xff, 0x44, 0xe3, 0x75, 0xef, 0xc5, 0x7f,
	0x9e, 0x4f, 0x32, 0xe6, 0x5b, 0x7f, 0x05, 0x00, 0x00, 0xff, 0xff, 0x82, 0xf0, 0x80, 0xc6, 0x61,
	0x1d, 0x00, 0x00,
}
