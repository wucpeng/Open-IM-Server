// Code generated by protoc-gen-go. DO NOT EDIT.
// source: organization/organization.proto

/*
Package organization is a generated protocol buffer package.

It is generated from these files:
	organization/organization.proto

It has these top-level messages:
	CreateDepartmentReq
	CreateDepartmentResp
	UpdateDepartmentReq
	UpdateDepartmentResp
	GetSubDepartmentReq
	GetSubDepartmentResp
	DeleteDepartmentReq
	DeleteDepartmentResp
	GetDepartmentParentIDListReq
	GetDepartmentParentIDListResp
	CreateOrganizationUserReq
	CreateOrganizationUserResp
	UpdateOrganizationUserReq
	UpdateOrganizationUserResp
	CreateDepartmentMemberReq
	CreateDepartmentMemberResp
	GetUserInDepartmentReq
	GetUserInDepartmentResp
	UpdateUserInDepartmentReq
	UpdateUserInDepartmentResp
	DeleteUserInDepartmentReq
	DeleteUserInDepartmentResp
	DeleteOrganizationUserReq
	DeleteOrganizationUserResp
	GetDepartmentMemberReq
	GetDepartmentMemberResp
	GetDepartmentRelatedGroupIDListReq
	GetDepartmentRelatedGroupIDListResp
	GetUserInOrganizationReq
	GetUserInOrganizationResp
*/
package organization

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import server_api_params "Open_IM/pkg/proto/sdk_ws"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type CreateDepartmentReq struct {
	DepartmentInfo *server_api_params.Department `protobuf:"bytes,1,opt,name=departmentInfo" json:"departmentInfo,omitempty"`
	OperationID    string                        `protobuf:"bytes,2,opt,name=operationID" json:"operationID,omitempty"`
	OpUserID       string                        `protobuf:"bytes,3,opt,name=opUserID" json:"opUserID,omitempty"`
}

func (m *CreateDepartmentReq) Reset()                    { *m = CreateDepartmentReq{} }
func (m *CreateDepartmentReq) String() string            { return proto.CompactTextString(m) }
func (*CreateDepartmentReq) ProtoMessage()               {}
func (*CreateDepartmentReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *CreateDepartmentReq) GetDepartmentInfo() *server_api_params.Department {
	if m != nil {
		return m.DepartmentInfo
	}
	return nil
}

func (m *CreateDepartmentReq) GetOperationID() string {
	if m != nil {
		return m.OperationID
	}
	return ""
}

func (m *CreateDepartmentReq) GetOpUserID() string {
	if m != nil {
		return m.OpUserID
	}
	return ""
}

type CreateDepartmentResp struct {
	ErrCode        int32                         `protobuf:"varint,1,opt,name=errCode" json:"errCode,omitempty"`
	ErrMsg         string                        `protobuf:"bytes,2,opt,name=errMsg" json:"errMsg,omitempty"`
	DepartmentInfo *server_api_params.Department `protobuf:"bytes,3,opt,name=departmentInfo" json:"departmentInfo,omitempty"`
}

func (m *CreateDepartmentResp) Reset()                    { *m = CreateDepartmentResp{} }
func (m *CreateDepartmentResp) String() string            { return proto.CompactTextString(m) }
func (*CreateDepartmentResp) ProtoMessage()               {}
func (*CreateDepartmentResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *CreateDepartmentResp) GetErrCode() int32 {
	if m != nil {
		return m.ErrCode
	}
	return 0
}

func (m *CreateDepartmentResp) GetErrMsg() string {
	if m != nil {
		return m.ErrMsg
	}
	return ""
}

func (m *CreateDepartmentResp) GetDepartmentInfo() *server_api_params.Department {
	if m != nil {
		return m.DepartmentInfo
	}
	return nil
}

type UpdateDepartmentReq struct {
	DepartmentInfo *server_api_params.Department `protobuf:"bytes,1,opt,name=departmentInfo" json:"departmentInfo,omitempty"`
	OperationID    string                        `protobuf:"bytes,2,opt,name=operationID" json:"operationID,omitempty"`
	OpUserID       string                        `protobuf:"bytes,3,opt,name=opUserID" json:"opUserID,omitempty"`
}

func (m *UpdateDepartmentReq) Reset()                    { *m = UpdateDepartmentReq{} }
func (m *UpdateDepartmentReq) String() string            { return proto.CompactTextString(m) }
func (*UpdateDepartmentReq) ProtoMessage()               {}
func (*UpdateDepartmentReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *UpdateDepartmentReq) GetDepartmentInfo() *server_api_params.Department {
	if m != nil {
		return m.DepartmentInfo
	}
	return nil
}

func (m *UpdateDepartmentReq) GetOperationID() string {
	if m != nil {
		return m.OperationID
	}
	return ""
}

func (m *UpdateDepartmentReq) GetOpUserID() string {
	if m != nil {
		return m.OpUserID
	}
	return ""
}

type UpdateDepartmentResp struct {
	ErrCode int32  `protobuf:"varint,1,opt,name=errCode" json:"errCode,omitempty"`
	ErrMsg  string `protobuf:"bytes,2,opt,name=errMsg" json:"errMsg,omitempty"`
}

func (m *UpdateDepartmentResp) Reset()                    { *m = UpdateDepartmentResp{} }
func (m *UpdateDepartmentResp) String() string            { return proto.CompactTextString(m) }
func (*UpdateDepartmentResp) ProtoMessage()               {}
func (*UpdateDepartmentResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *UpdateDepartmentResp) GetErrCode() int32 {
	if m != nil {
		return m.ErrCode
	}
	return 0
}

func (m *UpdateDepartmentResp) GetErrMsg() string {
	if m != nil {
		return m.ErrMsg
	}
	return ""
}

type GetSubDepartmentReq struct {
	DepartmentID string `protobuf:"bytes,1,opt,name=departmentID" json:"departmentID,omitempty"`
	OperationID  string `protobuf:"bytes,2,opt,name=operationID" json:"operationID,omitempty"`
	OpUserID     string `protobuf:"bytes,3,opt,name=opUserID" json:"opUserID,omitempty"`
}

func (m *GetSubDepartmentReq) Reset()                    { *m = GetSubDepartmentReq{} }
func (m *GetSubDepartmentReq) String() string            { return proto.CompactTextString(m) }
func (*GetSubDepartmentReq) ProtoMessage()               {}
func (*GetSubDepartmentReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *GetSubDepartmentReq) GetDepartmentID() string {
	if m != nil {
		return m.DepartmentID
	}
	return ""
}

func (m *GetSubDepartmentReq) GetOperationID() string {
	if m != nil {
		return m.OperationID
	}
	return ""
}

func (m *GetSubDepartmentReq) GetOpUserID() string {
	if m != nil {
		return m.OpUserID
	}
	return ""
}

type GetSubDepartmentResp struct {
	ErrCode        int32                           `protobuf:"varint,1,opt,name=errCode" json:"errCode,omitempty"`
	ErrMsg         string                          `protobuf:"bytes,2,opt,name=errMsg" json:"errMsg,omitempty"`
	DepartmentList []*server_api_params.Department `protobuf:"bytes,3,rep,name=departmentList" json:"departmentList,omitempty"`
}

func (m *GetSubDepartmentResp) Reset()                    { *m = GetSubDepartmentResp{} }
func (m *GetSubDepartmentResp) String() string            { return proto.CompactTextString(m) }
func (*GetSubDepartmentResp) ProtoMessage()               {}
func (*GetSubDepartmentResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *GetSubDepartmentResp) GetErrCode() int32 {
	if m != nil {
		return m.ErrCode
	}
	return 0
}

func (m *GetSubDepartmentResp) GetErrMsg() string {
	if m != nil {
		return m.ErrMsg
	}
	return ""
}

func (m *GetSubDepartmentResp) GetDepartmentList() []*server_api_params.Department {
	if m != nil {
		return m.DepartmentList
	}
	return nil
}

type DeleteDepartmentReq struct {
	DepartmentID string `protobuf:"bytes,1,opt,name=departmentID" json:"departmentID,omitempty"`
	OperationID  string `protobuf:"bytes,2,opt,name=operationID" json:"operationID,omitempty"`
	OpUserID     string `protobuf:"bytes,3,opt,name=opUserID" json:"opUserID,omitempty"`
}

func (m *DeleteDepartmentReq) Reset()                    { *m = DeleteDepartmentReq{} }
func (m *DeleteDepartmentReq) String() string            { return proto.CompactTextString(m) }
func (*DeleteDepartmentReq) ProtoMessage()               {}
func (*DeleteDepartmentReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *DeleteDepartmentReq) GetDepartmentID() string {
	if m != nil {
		return m.DepartmentID
	}
	return ""
}

func (m *DeleteDepartmentReq) GetOperationID() string {
	if m != nil {
		return m.OperationID
	}
	return ""
}

func (m *DeleteDepartmentReq) GetOpUserID() string {
	if m != nil {
		return m.OpUserID
	}
	return ""
}

type DeleteDepartmentResp struct {
	ErrCode int32  `protobuf:"varint,1,opt,name=errCode" json:"errCode,omitempty"`
	ErrMsg  string `protobuf:"bytes,2,opt,name=errMsg" json:"errMsg,omitempty"`
}

func (m *DeleteDepartmentResp) Reset()                    { *m = DeleteDepartmentResp{} }
func (m *DeleteDepartmentResp) String() string            { return proto.CompactTextString(m) }
func (*DeleteDepartmentResp) ProtoMessage()               {}
func (*DeleteDepartmentResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *DeleteDepartmentResp) GetErrCode() int32 {
	if m != nil {
		return m.ErrCode
	}
	return 0
}

func (m *DeleteDepartmentResp) GetErrMsg() string {
	if m != nil {
		return m.ErrMsg
	}
	return ""
}

type GetDepartmentParentIDListReq struct {
	DepartmentID string `protobuf:"bytes,1,opt,name=departmentID" json:"departmentID,omitempty"`
	OperationID  string `protobuf:"bytes,2,opt,name=operationID" json:"operationID,omitempty"`
}

func (m *GetDepartmentParentIDListReq) Reset()                    { *m = GetDepartmentParentIDListReq{} }
func (m *GetDepartmentParentIDListReq) String() string            { return proto.CompactTextString(m) }
func (*GetDepartmentParentIDListReq) ProtoMessage()               {}
func (*GetDepartmentParentIDListReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *GetDepartmentParentIDListReq) GetDepartmentID() string {
	if m != nil {
		return m.DepartmentID
	}
	return ""
}

func (m *GetDepartmentParentIDListReq) GetOperationID() string {
	if m != nil {
		return m.OperationID
	}
	return ""
}

type GetDepartmentParentIDListResp struct {
	ErrCode      int32    `protobuf:"varint,1,opt,name=errCode" json:"errCode,omitempty"`
	ErrMsg       string   `protobuf:"bytes,2,opt,name=errMsg" json:"errMsg,omitempty"`
	ParentIDList []string `protobuf:"bytes,3,rep,name=parentIDList" json:"parentIDList,omitempty"`
}

func (m *GetDepartmentParentIDListResp) Reset()                    { *m = GetDepartmentParentIDListResp{} }
func (m *GetDepartmentParentIDListResp) String() string            { return proto.CompactTextString(m) }
func (*GetDepartmentParentIDListResp) ProtoMessage()               {}
func (*GetDepartmentParentIDListResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *GetDepartmentParentIDListResp) GetErrCode() int32 {
	if m != nil {
		return m.ErrCode
	}
	return 0
}

func (m *GetDepartmentParentIDListResp) GetErrMsg() string {
	if m != nil {
		return m.ErrMsg
	}
	return ""
}

func (m *GetDepartmentParentIDListResp) GetParentIDList() []string {
	if m != nil {
		return m.ParentIDList
	}
	return nil
}

type CreateOrganizationUserReq struct {
	OrganizationUser *server_api_params.OrganizationUser `protobuf:"bytes,1,opt,name=organizationUser" json:"organizationUser,omitempty"`
	OperationID      string                              `protobuf:"bytes,2,opt,name=operationID" json:"operationID,omitempty"`
	OpUserID         string                              `protobuf:"bytes,3,opt,name=opUserID" json:"opUserID,omitempty"`
	IsRegister       bool                                `protobuf:"varint,4,opt,name=IsRegister,json=isRegister" json:"IsRegister,omitempty"`
}

func (m *CreateOrganizationUserReq) Reset()                    { *m = CreateOrganizationUserReq{} }
func (m *CreateOrganizationUserReq) String() string            { return proto.CompactTextString(m) }
func (*CreateOrganizationUserReq) ProtoMessage()               {}
func (*CreateOrganizationUserReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *CreateOrganizationUserReq) GetOrganizationUser() *server_api_params.OrganizationUser {
	if m != nil {
		return m.OrganizationUser
	}
	return nil
}

func (m *CreateOrganizationUserReq) GetOperationID() string {
	if m != nil {
		return m.OperationID
	}
	return ""
}

func (m *CreateOrganizationUserReq) GetOpUserID() string {
	if m != nil {
		return m.OpUserID
	}
	return ""
}

func (m *CreateOrganizationUserReq) GetIsRegister() bool {
	if m != nil {
		return m.IsRegister
	}
	return false
}

type CreateOrganizationUserResp struct {
	ErrCode int32  `protobuf:"varint,1,opt,name=errCode" json:"errCode,omitempty"`
	ErrMsg  string `protobuf:"bytes,2,opt,name=errMsg" json:"errMsg,omitempty"`
}

func (m *CreateOrganizationUserResp) Reset()                    { *m = CreateOrganizationUserResp{} }
func (m *CreateOrganizationUserResp) String() string            { return proto.CompactTextString(m) }
func (*CreateOrganizationUserResp) ProtoMessage()               {}
func (*CreateOrganizationUserResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *CreateOrganizationUserResp) GetErrCode() int32 {
	if m != nil {
		return m.ErrCode
	}
	return 0
}

func (m *CreateOrganizationUserResp) GetErrMsg() string {
	if m != nil {
		return m.ErrMsg
	}
	return ""
}

type UpdateOrganizationUserReq struct {
	OrganizationUser *server_api_params.OrganizationUser `protobuf:"bytes,1,opt,name=organizationUser" json:"organizationUser,omitempty"`
	OperationID      string                              `protobuf:"bytes,2,opt,name=operationID" json:"operationID,omitempty"`
	OpUserID         string                              `protobuf:"bytes,3,opt,name=opUserID" json:"opUserID,omitempty"`
}

func (m *UpdateOrganizationUserReq) Reset()                    { *m = UpdateOrganizationUserReq{} }
func (m *UpdateOrganizationUserReq) String() string            { return proto.CompactTextString(m) }
func (*UpdateOrganizationUserReq) ProtoMessage()               {}
func (*UpdateOrganizationUserReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *UpdateOrganizationUserReq) GetOrganizationUser() *server_api_params.OrganizationUser {
	if m != nil {
		return m.OrganizationUser
	}
	return nil
}

func (m *UpdateOrganizationUserReq) GetOperationID() string {
	if m != nil {
		return m.OperationID
	}
	return ""
}

func (m *UpdateOrganizationUserReq) GetOpUserID() string {
	if m != nil {
		return m.OpUserID
	}
	return ""
}

type UpdateOrganizationUserResp struct {
	ErrCode int32  `protobuf:"varint,1,opt,name=errCode" json:"errCode,omitempty"`
	ErrMsg  string `protobuf:"bytes,2,opt,name=errMsg" json:"errMsg,omitempty"`
}

func (m *UpdateOrganizationUserResp) Reset()                    { *m = UpdateOrganizationUserResp{} }
func (m *UpdateOrganizationUserResp) String() string            { return proto.CompactTextString(m) }
func (*UpdateOrganizationUserResp) ProtoMessage()               {}
func (*UpdateOrganizationUserResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *UpdateOrganizationUserResp) GetErrCode() int32 {
	if m != nil {
		return m.ErrCode
	}
	return 0
}

func (m *UpdateOrganizationUserResp) GetErrMsg() string {
	if m != nil {
		return m.ErrMsg
	}
	return ""
}

type CreateDepartmentMemberReq struct {
	DepartmentMember *server_api_params.DepartmentMember `protobuf:"bytes,1,opt,name=departmentMember" json:"departmentMember,omitempty"`
	OperationID      string                              `protobuf:"bytes,2,opt,name=operationID" json:"operationID,omitempty"`
	OpUserID         string                              `protobuf:"bytes,3,opt,name=opUserID" json:"opUserID,omitempty"`
}

func (m *CreateDepartmentMemberReq) Reset()                    { *m = CreateDepartmentMemberReq{} }
func (m *CreateDepartmentMemberReq) String() string            { return proto.CompactTextString(m) }
func (*CreateDepartmentMemberReq) ProtoMessage()               {}
func (*CreateDepartmentMemberReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *CreateDepartmentMemberReq) GetDepartmentMember() *server_api_params.DepartmentMember {
	if m != nil {
		return m.DepartmentMember
	}
	return nil
}

func (m *CreateDepartmentMemberReq) GetOperationID() string {
	if m != nil {
		return m.OperationID
	}
	return ""
}

func (m *CreateDepartmentMemberReq) GetOpUserID() string {
	if m != nil {
		return m.OpUserID
	}
	return ""
}

type CreateDepartmentMemberResp struct {
	ErrCode int32  `protobuf:"varint,1,opt,name=errCode" json:"errCode,omitempty"`
	ErrMsg  string `protobuf:"bytes,2,opt,name=errMsg" json:"errMsg,omitempty"`
}

func (m *CreateDepartmentMemberResp) Reset()                    { *m = CreateDepartmentMemberResp{} }
func (m *CreateDepartmentMemberResp) String() string            { return proto.CompactTextString(m) }
func (*CreateDepartmentMemberResp) ProtoMessage()               {}
func (*CreateDepartmentMemberResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *CreateDepartmentMemberResp) GetErrCode() int32 {
	if m != nil {
		return m.ErrCode
	}
	return 0
}

func (m *CreateDepartmentMemberResp) GetErrMsg() string {
	if m != nil {
		return m.ErrMsg
	}
	return ""
}

type GetUserInDepartmentReq struct {
	UserID      string `protobuf:"bytes,1,opt,name=userID" json:"userID,omitempty"`
	OperationID string `protobuf:"bytes,2,opt,name=operationID" json:"operationID,omitempty"`
	OpUserID    string `protobuf:"bytes,3,opt,name=opUserID" json:"opUserID,omitempty"`
}

func (m *GetUserInDepartmentReq) Reset()                    { *m = GetUserInDepartmentReq{} }
func (m *GetUserInDepartmentReq) String() string            { return proto.CompactTextString(m) }
func (*GetUserInDepartmentReq) ProtoMessage()               {}
func (*GetUserInDepartmentReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

func (m *GetUserInDepartmentReq) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *GetUserInDepartmentReq) GetOperationID() string {
	if m != nil {
		return m.OperationID
	}
	return ""
}

func (m *GetUserInDepartmentReq) GetOpUserID() string {
	if m != nil {
		return m.OpUserID
	}
	return ""
}

type GetUserInDepartmentResp struct {
	ErrCode          int32                               `protobuf:"varint,1,opt,name=errCode" json:"errCode,omitempty"`
	ErrMsg           string                              `protobuf:"bytes,2,opt,name=errMsg" json:"errMsg,omitempty"`
	UserInDepartment *server_api_params.UserInDepartment `protobuf:"bytes,3,opt,name=userInDepartment" json:"userInDepartment,omitempty"`
}

func (m *GetUserInDepartmentResp) Reset()                    { *m = GetUserInDepartmentResp{} }
func (m *GetUserInDepartmentResp) String() string            { return proto.CompactTextString(m) }
func (*GetUserInDepartmentResp) ProtoMessage()               {}
func (*GetUserInDepartmentResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

func (m *GetUserInDepartmentResp) GetErrCode() int32 {
	if m != nil {
		return m.ErrCode
	}
	return 0
}

func (m *GetUserInDepartmentResp) GetErrMsg() string {
	if m != nil {
		return m.ErrMsg
	}
	return ""
}

func (m *GetUserInDepartmentResp) GetUserInDepartment() *server_api_params.UserInDepartment {
	if m != nil {
		return m.UserInDepartment
	}
	return nil
}

type UpdateUserInDepartmentReq struct {
	DepartmentMember *server_api_params.DepartmentMember `protobuf:"bytes,1,opt,name=departmentMember" json:"departmentMember,omitempty"`
	OperationID      string                              `protobuf:"bytes,2,opt,name=operationID" json:"operationID,omitempty"`
	OpUserID         string                              `protobuf:"bytes,3,opt,name=opUserID" json:"opUserID,omitempty"`
}

func (m *UpdateUserInDepartmentReq) Reset()                    { *m = UpdateUserInDepartmentReq{} }
func (m *UpdateUserInDepartmentReq) String() string            { return proto.CompactTextString(m) }
func (*UpdateUserInDepartmentReq) ProtoMessage()               {}
func (*UpdateUserInDepartmentReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{18} }

func (m *UpdateUserInDepartmentReq) GetDepartmentMember() *server_api_params.DepartmentMember {
	if m != nil {
		return m.DepartmentMember
	}
	return nil
}

func (m *UpdateUserInDepartmentReq) GetOperationID() string {
	if m != nil {
		return m.OperationID
	}
	return ""
}

func (m *UpdateUserInDepartmentReq) GetOpUserID() string {
	if m != nil {
		return m.OpUserID
	}
	return ""
}

type UpdateUserInDepartmentResp struct {
	ErrCode int32  `protobuf:"varint,1,opt,name=errCode" json:"errCode,omitempty"`
	ErrMsg  string `protobuf:"bytes,2,opt,name=errMsg" json:"errMsg,omitempty"`
}

func (m *UpdateUserInDepartmentResp) Reset()                    { *m = UpdateUserInDepartmentResp{} }
func (m *UpdateUserInDepartmentResp) String() string            { return proto.CompactTextString(m) }
func (*UpdateUserInDepartmentResp) ProtoMessage()               {}
func (*UpdateUserInDepartmentResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{19} }

func (m *UpdateUserInDepartmentResp) GetErrCode() int32 {
	if m != nil {
		return m.ErrCode
	}
	return 0
}

func (m *UpdateUserInDepartmentResp) GetErrMsg() string {
	if m != nil {
		return m.ErrMsg
	}
	return ""
}

type DeleteUserInDepartmentReq struct {
	UserID       string `protobuf:"bytes,1,opt,name=userID" json:"userID,omitempty"`
	OperationID  string `protobuf:"bytes,2,opt,name=operationID" json:"operationID,omitempty"`
	OpUserID     string `protobuf:"bytes,3,opt,name=opUserID" json:"opUserID,omitempty"`
	DepartmentID string `protobuf:"bytes,4,opt,name=departmentID" json:"departmentID,omitempty"`
}

func (m *DeleteUserInDepartmentReq) Reset()                    { *m = DeleteUserInDepartmentReq{} }
func (m *DeleteUserInDepartmentReq) String() string            { return proto.CompactTextString(m) }
func (*DeleteUserInDepartmentReq) ProtoMessage()               {}
func (*DeleteUserInDepartmentReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{20} }

func (m *DeleteUserInDepartmentReq) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *DeleteUserInDepartmentReq) GetOperationID() string {
	if m != nil {
		return m.OperationID
	}
	return ""
}

func (m *DeleteUserInDepartmentReq) GetOpUserID() string {
	if m != nil {
		return m.OpUserID
	}
	return ""
}

func (m *DeleteUserInDepartmentReq) GetDepartmentID() string {
	if m != nil {
		return m.DepartmentID
	}
	return ""
}

type DeleteUserInDepartmentResp struct {
	ErrCode int32  `protobuf:"varint,1,opt,name=errCode" json:"errCode,omitempty"`
	ErrMsg  string `protobuf:"bytes,2,opt,name=errMsg" json:"errMsg,omitempty"`
}

func (m *DeleteUserInDepartmentResp) Reset()                    { *m = DeleteUserInDepartmentResp{} }
func (m *DeleteUserInDepartmentResp) String() string            { return proto.CompactTextString(m) }
func (*DeleteUserInDepartmentResp) ProtoMessage()               {}
func (*DeleteUserInDepartmentResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{21} }

func (m *DeleteUserInDepartmentResp) GetErrCode() int32 {
	if m != nil {
		return m.ErrCode
	}
	return 0
}

func (m *DeleteUserInDepartmentResp) GetErrMsg() string {
	if m != nil {
		return m.ErrMsg
	}
	return ""
}

type DeleteOrganizationUserReq struct {
	UserID      string `protobuf:"bytes,1,opt,name=userID" json:"userID,omitempty"`
	OperationID string `protobuf:"bytes,2,opt,name=operationID" json:"operationID,omitempty"`
	OpUserID    string `protobuf:"bytes,3,opt,name=opUserID" json:"opUserID,omitempty"`
}

func (m *DeleteOrganizationUserReq) Reset()                    { *m = DeleteOrganizationUserReq{} }
func (m *DeleteOrganizationUserReq) String() string            { return proto.CompactTextString(m) }
func (*DeleteOrganizationUserReq) ProtoMessage()               {}
func (*DeleteOrganizationUserReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{22} }

func (m *DeleteOrganizationUserReq) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *DeleteOrganizationUserReq) GetOperationID() string {
	if m != nil {
		return m.OperationID
	}
	return ""
}

func (m *DeleteOrganizationUserReq) GetOpUserID() string {
	if m != nil {
		return m.OpUserID
	}
	return ""
}

type DeleteOrganizationUserResp struct {
	ErrCode int32  `protobuf:"varint,1,opt,name=errCode" json:"errCode,omitempty"`
	ErrMsg  string `protobuf:"bytes,2,opt,name=errMsg" json:"errMsg,omitempty"`
}

func (m *DeleteOrganizationUserResp) Reset()                    { *m = DeleteOrganizationUserResp{} }
func (m *DeleteOrganizationUserResp) String() string            { return proto.CompactTextString(m) }
func (*DeleteOrganizationUserResp) ProtoMessage()               {}
func (*DeleteOrganizationUserResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{23} }

func (m *DeleteOrganizationUserResp) GetErrCode() int32 {
	if m != nil {
		return m.ErrCode
	}
	return 0
}

func (m *DeleteOrganizationUserResp) GetErrMsg() string {
	if m != nil {
		return m.ErrMsg
	}
	return ""
}

type GetDepartmentMemberReq struct {
	DepartmentID string `protobuf:"bytes,1,opt,name=departmentID" json:"departmentID,omitempty"`
	OperationID  string `protobuf:"bytes,2,opt,name=operationID" json:"operationID,omitempty"`
	OpUserID     string `protobuf:"bytes,3,opt,name=opUserID" json:"opUserID,omitempty"`
}

func (m *GetDepartmentMemberReq) Reset()                    { *m = GetDepartmentMemberReq{} }
func (m *GetDepartmentMemberReq) String() string            { return proto.CompactTextString(m) }
func (*GetDepartmentMemberReq) ProtoMessage()               {}
func (*GetDepartmentMemberReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{24} }

func (m *GetDepartmentMemberReq) GetDepartmentID() string {
	if m != nil {
		return m.DepartmentID
	}
	return ""
}

func (m *GetDepartmentMemberReq) GetOperationID() string {
	if m != nil {
		return m.OperationID
	}
	return ""
}

func (m *GetDepartmentMemberReq) GetOpUserID() string {
	if m != nil {
		return m.OpUserID
	}
	return ""
}

type GetDepartmentMemberResp struct {
	ErrCode                  int32                                     `protobuf:"varint,1,opt,name=errCode" json:"errCode,omitempty"`
	ErrMsg                   string                                    `protobuf:"bytes,2,opt,name=errMsg" json:"errMsg,omitempty"`
	UserDepartmentMemberList []*server_api_params.UserDepartmentMember `protobuf:"bytes,3,rep,name=userDepartmentMemberList" json:"userDepartmentMemberList,omitempty"`
}

func (m *GetDepartmentMemberResp) Reset()                    { *m = GetDepartmentMemberResp{} }
func (m *GetDepartmentMemberResp) String() string            { return proto.CompactTextString(m) }
func (*GetDepartmentMemberResp) ProtoMessage()               {}
func (*GetDepartmentMemberResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{25} }

func (m *GetDepartmentMemberResp) GetErrCode() int32 {
	if m != nil {
		return m.ErrCode
	}
	return 0
}

func (m *GetDepartmentMemberResp) GetErrMsg() string {
	if m != nil {
		return m.ErrMsg
	}
	return ""
}

func (m *GetDepartmentMemberResp) GetUserDepartmentMemberList() []*server_api_params.UserDepartmentMember {
	if m != nil {
		return m.UserDepartmentMemberList
	}
	return nil
}

type GetDepartmentRelatedGroupIDListReq struct {
	OperationID      string   `protobuf:"bytes,1,opt,name=operationID" json:"operationID,omitempty"`
	DepartmentIDList []string `protobuf:"bytes,2,rep,name=departmentIDList" json:"departmentIDList,omitempty"`
}

func (m *GetDepartmentRelatedGroupIDListReq) Reset()         { *m = GetDepartmentRelatedGroupIDListReq{} }
func (m *GetDepartmentRelatedGroupIDListReq) String() string { return proto.CompactTextString(m) }
func (*GetDepartmentRelatedGroupIDListReq) ProtoMessage()    {}
func (*GetDepartmentRelatedGroupIDListReq) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{26}
}

func (m *GetDepartmentRelatedGroupIDListReq) GetOperationID() string {
	if m != nil {
		return m.OperationID
	}
	return ""
}

func (m *GetDepartmentRelatedGroupIDListReq) GetDepartmentIDList() []string {
	if m != nil {
		return m.DepartmentIDList
	}
	return nil
}

type GetDepartmentRelatedGroupIDListResp struct {
	ErrCode     int32    `protobuf:"varint,1,opt,name=errCode" json:"errCode,omitempty"`
	ErrMsg      string   `protobuf:"bytes,2,opt,name=errMsg" json:"errMsg,omitempty"`
	GroupIDList []string `protobuf:"bytes,3,rep,name=groupIDList" json:"groupIDList,omitempty"`
}

func (m *GetDepartmentRelatedGroupIDListResp) Reset()         { *m = GetDepartmentRelatedGroupIDListResp{} }
func (m *GetDepartmentRelatedGroupIDListResp) String() string { return proto.CompactTextString(m) }
func (*GetDepartmentRelatedGroupIDListResp) ProtoMessage()    {}
func (*GetDepartmentRelatedGroupIDListResp) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{27}
}

func (m *GetDepartmentRelatedGroupIDListResp) GetErrCode() int32 {
	if m != nil {
		return m.ErrCode
	}
	return 0
}

func (m *GetDepartmentRelatedGroupIDListResp) GetErrMsg() string {
	if m != nil {
		return m.ErrMsg
	}
	return ""
}

func (m *GetDepartmentRelatedGroupIDListResp) GetGroupIDList() []string {
	if m != nil {
		return m.GroupIDList
	}
	return nil
}

type GetUserInOrganizationReq struct {
	UserIDList  []string `protobuf:"bytes,1,rep,name=userIDList" json:"userIDList,omitempty"`
	OperationID string   `protobuf:"bytes,2,opt,name=operationID" json:"operationID,omitempty"`
}

func (m *GetUserInOrganizationReq) Reset()                    { *m = GetUserInOrganizationReq{} }
func (m *GetUserInOrganizationReq) String() string            { return proto.CompactTextString(m) }
func (*GetUserInOrganizationReq) ProtoMessage()               {}
func (*GetUserInOrganizationReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{28} }

func (m *GetUserInOrganizationReq) GetUserIDList() []string {
	if m != nil {
		return m.UserIDList
	}
	return nil
}

func (m *GetUserInOrganizationReq) GetOperationID() string {
	if m != nil {
		return m.OperationID
	}
	return ""
}

type GetUserInOrganizationResp struct {
	ErrCode           int32                                 `protobuf:"varint,1,opt,name=errCode" json:"errCode,omitempty"`
	ErrMsg            string                                `protobuf:"bytes,2,opt,name=errMsg" json:"errMsg,omitempty"`
	OrganizationUsers []*server_api_params.OrganizationUser `protobuf:"bytes,3,rep,name=organizationUsers" json:"organizationUsers,omitempty"`
}

func (m *GetUserInOrganizationResp) Reset()                    { *m = GetUserInOrganizationResp{} }
func (m *GetUserInOrganizationResp) String() string            { return proto.CompactTextString(m) }
func (*GetUserInOrganizationResp) ProtoMessage()               {}
func (*GetUserInOrganizationResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{29} }

func (m *GetUserInOrganizationResp) GetErrCode() int32 {
	if m != nil {
		return m.ErrCode
	}
	return 0
}

func (m *GetUserInOrganizationResp) GetErrMsg() string {
	if m != nil {
		return m.ErrMsg
	}
	return ""
}

func (m *GetUserInOrganizationResp) GetOrganizationUsers() []*server_api_params.OrganizationUser {
	if m != nil {
		return m.OrganizationUsers
	}
	return nil
}

func init() {
	proto.RegisterType((*CreateDepartmentReq)(nil), "organization.CreateDepartmentReq")
	proto.RegisterType((*CreateDepartmentResp)(nil), "organization.CreateDepartmentResp")
	proto.RegisterType((*UpdateDepartmentReq)(nil), "organization.UpdateDepartmentReq")
	proto.RegisterType((*UpdateDepartmentResp)(nil), "organization.UpdateDepartmentResp")
	proto.RegisterType((*GetSubDepartmentReq)(nil), "organization.GetSubDepartmentReq")
	proto.RegisterType((*GetSubDepartmentResp)(nil), "organization.GetSubDepartmentResp")
	proto.RegisterType((*DeleteDepartmentReq)(nil), "organization.DeleteDepartmentReq")
	proto.RegisterType((*DeleteDepartmentResp)(nil), "organization.DeleteDepartmentResp")
	proto.RegisterType((*GetDepartmentParentIDListReq)(nil), "organization.GetDepartmentParentIDListReq")
	proto.RegisterType((*GetDepartmentParentIDListResp)(nil), "organization.GetDepartmentParentIDListResp")
	proto.RegisterType((*CreateOrganizationUserReq)(nil), "organization.CreateOrganizationUserReq")
	proto.RegisterType((*CreateOrganizationUserResp)(nil), "organization.CreateOrganizationUserResp")
	proto.RegisterType((*UpdateOrganizationUserReq)(nil), "organization.UpdateOrganizationUserReq")
	proto.RegisterType((*UpdateOrganizationUserResp)(nil), "organization.UpdateOrganizationUserResp")
	proto.RegisterType((*CreateDepartmentMemberReq)(nil), "organization.CreateDepartmentMemberReq")
	proto.RegisterType((*CreateDepartmentMemberResp)(nil), "organization.CreateDepartmentMemberResp")
	proto.RegisterType((*GetUserInDepartmentReq)(nil), "organization.GetUserInDepartmentReq")
	proto.RegisterType((*GetUserInDepartmentResp)(nil), "organization.GetUserInDepartmentResp")
	proto.RegisterType((*UpdateUserInDepartmentReq)(nil), "organization.UpdateUserInDepartmentReq")
	proto.RegisterType((*UpdateUserInDepartmentResp)(nil), "organization.UpdateUserInDepartmentResp")
	proto.RegisterType((*DeleteUserInDepartmentReq)(nil), "organization.DeleteUserInDepartmentReq")
	proto.RegisterType((*DeleteUserInDepartmentResp)(nil), "organization.DeleteUserInDepartmentResp")
	proto.RegisterType((*DeleteOrganizationUserReq)(nil), "organization.DeleteOrganizationUserReq")
	proto.RegisterType((*DeleteOrganizationUserResp)(nil), "organization.DeleteOrganizationUserResp")
	proto.RegisterType((*GetDepartmentMemberReq)(nil), "organization.GetDepartmentMemberReq")
	proto.RegisterType((*GetDepartmentMemberResp)(nil), "organization.GetDepartmentMemberResp")
	proto.RegisterType((*GetDepartmentRelatedGroupIDListReq)(nil), "organization.GetDepartmentRelatedGroupIDListReq")
	proto.RegisterType((*GetDepartmentRelatedGroupIDListResp)(nil), "organization.GetDepartmentRelatedGroupIDListResp")
	proto.RegisterType((*GetUserInOrganizationReq)(nil), "organization.GetUserInOrganizationReq")
	proto.RegisterType((*GetUserInOrganizationResp)(nil), "organization.GetUserInOrganizationResp")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Organization service

type OrganizationClient interface {
	CreateDepartment(ctx context.Context, in *CreateDepartmentReq, opts ...grpc.CallOption) (*CreateDepartmentResp, error)
	UpdateDepartment(ctx context.Context, in *UpdateDepartmentReq, opts ...grpc.CallOption) (*UpdateDepartmentResp, error)
	GetSubDepartment(ctx context.Context, in *GetSubDepartmentReq, opts ...grpc.CallOption) (*GetSubDepartmentResp, error)
	DeleteDepartment(ctx context.Context, in *DeleteDepartmentReq, opts ...grpc.CallOption) (*DeleteDepartmentResp, error)
	GetDepartmentParentIDList(ctx context.Context, in *GetDepartmentParentIDListReq, opts ...grpc.CallOption) (*GetDepartmentParentIDListResp, error)
	CreateOrganizationUser(ctx context.Context, in *CreateOrganizationUserReq, opts ...grpc.CallOption) (*CreateOrganizationUserResp, error)
	UpdateOrganizationUser(ctx context.Context, in *UpdateOrganizationUserReq, opts ...grpc.CallOption) (*UpdateOrganizationUserResp, error)
	DeleteOrganizationUser(ctx context.Context, in *DeleteOrganizationUserReq, opts ...grpc.CallOption) (*DeleteOrganizationUserResp, error)
	CreateDepartmentMember(ctx context.Context, in *CreateDepartmentMemberReq, opts ...grpc.CallOption) (*CreateDepartmentMemberResp, error)
	GetUserInDepartment(ctx context.Context, in *GetUserInDepartmentReq, opts ...grpc.CallOption) (*GetUserInDepartmentResp, error)
	DeleteUserInDepartment(ctx context.Context, in *DeleteUserInDepartmentReq, opts ...grpc.CallOption) (*DeleteUserInDepartmentResp, error)
	UpdateUserInDepartment(ctx context.Context, in *UpdateUserInDepartmentReq, opts ...grpc.CallOption) (*UpdateUserInDepartmentResp, error)
	GetDepartmentMember(ctx context.Context, in *GetDepartmentMemberReq, opts ...grpc.CallOption) (*GetDepartmentMemberResp, error)
	GetDepartmentRelatedGroupIDList(ctx context.Context, in *GetDepartmentRelatedGroupIDListReq, opts ...grpc.CallOption) (*GetDepartmentRelatedGroupIDListResp, error)
	GetUserInOrganization(ctx context.Context, in *GetUserInOrganizationReq, opts ...grpc.CallOption) (*GetUserInOrganizationResp, error)
}

type organizationClient struct {
	cc *grpc.ClientConn
}

func NewOrganizationClient(cc *grpc.ClientConn) OrganizationClient {
	return &organizationClient{cc}
}

func (c *organizationClient) CreateDepartment(ctx context.Context, in *CreateDepartmentReq, opts ...grpc.CallOption) (*CreateDepartmentResp, error) {
	out := new(CreateDepartmentResp)
	err := grpc.Invoke(ctx, "/organization.organization/CreateDepartment", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *organizationClient) UpdateDepartment(ctx context.Context, in *UpdateDepartmentReq, opts ...grpc.CallOption) (*UpdateDepartmentResp, error) {
	out := new(UpdateDepartmentResp)
	err := grpc.Invoke(ctx, "/organization.organization/UpdateDepartment", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *organizationClient) GetSubDepartment(ctx context.Context, in *GetSubDepartmentReq, opts ...grpc.CallOption) (*GetSubDepartmentResp, error) {
	out := new(GetSubDepartmentResp)
	err := grpc.Invoke(ctx, "/organization.organization/GetSubDepartment", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *organizationClient) DeleteDepartment(ctx context.Context, in *DeleteDepartmentReq, opts ...grpc.CallOption) (*DeleteDepartmentResp, error) {
	out := new(DeleteDepartmentResp)
	err := grpc.Invoke(ctx, "/organization.organization/DeleteDepartment", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *organizationClient) GetDepartmentParentIDList(ctx context.Context, in *GetDepartmentParentIDListReq, opts ...grpc.CallOption) (*GetDepartmentParentIDListResp, error) {
	out := new(GetDepartmentParentIDListResp)
	err := grpc.Invoke(ctx, "/organization.organization/GetDepartmentParentIDList", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *organizationClient) CreateOrganizationUser(ctx context.Context, in *CreateOrganizationUserReq, opts ...grpc.CallOption) (*CreateOrganizationUserResp, error) {
	out := new(CreateOrganizationUserResp)
	err := grpc.Invoke(ctx, "/organization.organization/CreateOrganizationUser", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *organizationClient) UpdateOrganizationUser(ctx context.Context, in *UpdateOrganizationUserReq, opts ...grpc.CallOption) (*UpdateOrganizationUserResp, error) {
	out := new(UpdateOrganizationUserResp)
	err := grpc.Invoke(ctx, "/organization.organization/UpdateOrganizationUser", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *organizationClient) DeleteOrganizationUser(ctx context.Context, in *DeleteOrganizationUserReq, opts ...grpc.CallOption) (*DeleteOrganizationUserResp, error) {
	out := new(DeleteOrganizationUserResp)
	err := grpc.Invoke(ctx, "/organization.organization/DeleteOrganizationUser", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *organizationClient) CreateDepartmentMember(ctx context.Context, in *CreateDepartmentMemberReq, opts ...grpc.CallOption) (*CreateDepartmentMemberResp, error) {
	out := new(CreateDepartmentMemberResp)
	err := grpc.Invoke(ctx, "/organization.organization/CreateDepartmentMember", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *organizationClient) GetUserInDepartment(ctx context.Context, in *GetUserInDepartmentReq, opts ...grpc.CallOption) (*GetUserInDepartmentResp, error) {
	out := new(GetUserInDepartmentResp)
	err := grpc.Invoke(ctx, "/organization.organization/GetUserInDepartment", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *organizationClient) DeleteUserInDepartment(ctx context.Context, in *DeleteUserInDepartmentReq, opts ...grpc.CallOption) (*DeleteUserInDepartmentResp, error) {
	out := new(DeleteUserInDepartmentResp)
	err := grpc.Invoke(ctx, "/organization.organization/DeleteUserInDepartment", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *organizationClient) UpdateUserInDepartment(ctx context.Context, in *UpdateUserInDepartmentReq, opts ...grpc.CallOption) (*UpdateUserInDepartmentResp, error) {
	out := new(UpdateUserInDepartmentResp)
	err := grpc.Invoke(ctx, "/organization.organization/UpdateUserInDepartment", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *organizationClient) GetDepartmentMember(ctx context.Context, in *GetDepartmentMemberReq, opts ...grpc.CallOption) (*GetDepartmentMemberResp, error) {
	out := new(GetDepartmentMemberResp)
	err := grpc.Invoke(ctx, "/organization.organization/GetDepartmentMember", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *organizationClient) GetDepartmentRelatedGroupIDList(ctx context.Context, in *GetDepartmentRelatedGroupIDListReq, opts ...grpc.CallOption) (*GetDepartmentRelatedGroupIDListResp, error) {
	out := new(GetDepartmentRelatedGroupIDListResp)
	err := grpc.Invoke(ctx, "/organization.organization/GetDepartmentRelatedGroupIDList", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *organizationClient) GetUserInOrganization(ctx context.Context, in *GetUserInOrganizationReq, opts ...grpc.CallOption) (*GetUserInOrganizationResp, error) {
	out := new(GetUserInOrganizationResp)
	err := grpc.Invoke(ctx, "/organization.organization/GetUserInOrganization", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Organization service

type OrganizationServer interface {
	CreateDepartment(context.Context, *CreateDepartmentReq) (*CreateDepartmentResp, error)
	UpdateDepartment(context.Context, *UpdateDepartmentReq) (*UpdateDepartmentResp, error)
	GetSubDepartment(context.Context, *GetSubDepartmentReq) (*GetSubDepartmentResp, error)
	DeleteDepartment(context.Context, *DeleteDepartmentReq) (*DeleteDepartmentResp, error)
	GetDepartmentParentIDList(context.Context, *GetDepartmentParentIDListReq) (*GetDepartmentParentIDListResp, error)
	CreateOrganizationUser(context.Context, *CreateOrganizationUserReq) (*CreateOrganizationUserResp, error)
	UpdateOrganizationUser(context.Context, *UpdateOrganizationUserReq) (*UpdateOrganizationUserResp, error)
	DeleteOrganizationUser(context.Context, *DeleteOrganizationUserReq) (*DeleteOrganizationUserResp, error)
	CreateDepartmentMember(context.Context, *CreateDepartmentMemberReq) (*CreateDepartmentMemberResp, error)
	GetUserInDepartment(context.Context, *GetUserInDepartmentReq) (*GetUserInDepartmentResp, error)
	DeleteUserInDepartment(context.Context, *DeleteUserInDepartmentReq) (*DeleteUserInDepartmentResp, error)
	UpdateUserInDepartment(context.Context, *UpdateUserInDepartmentReq) (*UpdateUserInDepartmentResp, error)
	GetDepartmentMember(context.Context, *GetDepartmentMemberReq) (*GetDepartmentMemberResp, error)
	GetDepartmentRelatedGroupIDList(context.Context, *GetDepartmentRelatedGroupIDListReq) (*GetDepartmentRelatedGroupIDListResp, error)
	GetUserInOrganization(context.Context, *GetUserInOrganizationReq) (*GetUserInOrganizationResp, error)
}

func RegisterOrganizationServer(s *grpc.Server, srv OrganizationServer) {
	s.RegisterService(&_Organization_serviceDesc, srv)
}

func _Organization_CreateDepartment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateDepartmentReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrganizationServer).CreateDepartment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/organization.organization/CreateDepartment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrganizationServer).CreateDepartment(ctx, req.(*CreateDepartmentReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Organization_UpdateDepartment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateDepartmentReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrganizationServer).UpdateDepartment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/organization.organization/UpdateDepartment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrganizationServer).UpdateDepartment(ctx, req.(*UpdateDepartmentReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Organization_GetSubDepartment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSubDepartmentReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrganizationServer).GetSubDepartment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/organization.organization/GetSubDepartment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrganizationServer).GetSubDepartment(ctx, req.(*GetSubDepartmentReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Organization_DeleteDepartment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteDepartmentReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrganizationServer).DeleteDepartment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/organization.organization/DeleteDepartment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrganizationServer).DeleteDepartment(ctx, req.(*DeleteDepartmentReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Organization_GetDepartmentParentIDList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDepartmentParentIDListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrganizationServer).GetDepartmentParentIDList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/organization.organization/GetDepartmentParentIDList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrganizationServer).GetDepartmentParentIDList(ctx, req.(*GetDepartmentParentIDListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Organization_CreateOrganizationUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateOrganizationUserReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrganizationServer).CreateOrganizationUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/organization.organization/CreateOrganizationUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrganizationServer).CreateOrganizationUser(ctx, req.(*CreateOrganizationUserReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Organization_UpdateOrganizationUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateOrganizationUserReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrganizationServer).UpdateOrganizationUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/organization.organization/UpdateOrganizationUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrganizationServer).UpdateOrganizationUser(ctx, req.(*UpdateOrganizationUserReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Organization_DeleteOrganizationUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteOrganizationUserReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrganizationServer).DeleteOrganizationUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/organization.organization/DeleteOrganizationUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrganizationServer).DeleteOrganizationUser(ctx, req.(*DeleteOrganizationUserReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Organization_CreateDepartmentMember_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateDepartmentMemberReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrganizationServer).CreateDepartmentMember(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/organization.organization/CreateDepartmentMember",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrganizationServer).CreateDepartmentMember(ctx, req.(*CreateDepartmentMemberReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Organization_GetUserInDepartment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserInDepartmentReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrganizationServer).GetUserInDepartment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/organization.organization/GetUserInDepartment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrganizationServer).GetUserInDepartment(ctx, req.(*GetUserInDepartmentReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Organization_DeleteUserInDepartment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteUserInDepartmentReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrganizationServer).DeleteUserInDepartment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/organization.organization/DeleteUserInDepartment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrganizationServer).DeleteUserInDepartment(ctx, req.(*DeleteUserInDepartmentReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Organization_UpdateUserInDepartment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateUserInDepartmentReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrganizationServer).UpdateUserInDepartment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/organization.organization/UpdateUserInDepartment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrganizationServer).UpdateUserInDepartment(ctx, req.(*UpdateUserInDepartmentReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Organization_GetDepartmentMember_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDepartmentMemberReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrganizationServer).GetDepartmentMember(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/organization.organization/GetDepartmentMember",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrganizationServer).GetDepartmentMember(ctx, req.(*GetDepartmentMemberReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Organization_GetDepartmentRelatedGroupIDList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDepartmentRelatedGroupIDListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrganizationServer).GetDepartmentRelatedGroupIDList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/organization.organization/GetDepartmentRelatedGroupIDList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrganizationServer).GetDepartmentRelatedGroupIDList(ctx, req.(*GetDepartmentRelatedGroupIDListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Organization_GetUserInOrganization_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserInOrganizationReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrganizationServer).GetUserInOrganization(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/organization.organization/GetUserInOrganization",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrganizationServer).GetUserInOrganization(ctx, req.(*GetUserInOrganizationReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Organization_serviceDesc = grpc.ServiceDesc{
	ServiceName: "organization.organization",
	HandlerType: (*OrganizationServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateDepartment",
			Handler:    _Organization_CreateDepartment_Handler,
		},
		{
			MethodName: "UpdateDepartment",
			Handler:    _Organization_UpdateDepartment_Handler,
		},
		{
			MethodName: "GetSubDepartment",
			Handler:    _Organization_GetSubDepartment_Handler,
		},
		{
			MethodName: "DeleteDepartment",
			Handler:    _Organization_DeleteDepartment_Handler,
		},
		{
			MethodName: "GetDepartmentParentIDList",
			Handler:    _Organization_GetDepartmentParentIDList_Handler,
		},
		{
			MethodName: "CreateOrganizationUser",
			Handler:    _Organization_CreateOrganizationUser_Handler,
		},
		{
			MethodName: "UpdateOrganizationUser",
			Handler:    _Organization_UpdateOrganizationUser_Handler,
		},
		{
			MethodName: "DeleteOrganizationUser",
			Handler:    _Organization_DeleteOrganizationUser_Handler,
		},
		{
			MethodName: "CreateDepartmentMember",
			Handler:    _Organization_CreateDepartmentMember_Handler,
		},
		{
			MethodName: "GetUserInDepartment",
			Handler:    _Organization_GetUserInDepartment_Handler,
		},
		{
			MethodName: "DeleteUserInDepartment",
			Handler:    _Organization_DeleteUserInDepartment_Handler,
		},
		{
			MethodName: "UpdateUserInDepartment",
			Handler:    _Organization_UpdateUserInDepartment_Handler,
		},
		{
			MethodName: "GetDepartmentMember",
			Handler:    _Organization_GetDepartmentMember_Handler,
		},
		{
			MethodName: "GetDepartmentRelatedGroupIDList",
			Handler:    _Organization_GetDepartmentRelatedGroupIDList_Handler,
		},
		{
			MethodName: "GetUserInOrganization",
			Handler:    _Organization_GetUserInOrganization_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "organization/organization.proto",
}

func init() { proto.RegisterFile("organization/organization.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 946 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x58, 0x4f, 0x4f, 0xe3, 0x46,
	0x14, 0x97, 0x09, 0xa5, 0xf0, 0x88, 0xaa, 0x74, 0xa0, 0xa9, 0x63, 0x15, 0x48, 0x0d, 0x94, 0x08,
	0x44, 0xd2, 0xd2, 0x63, 0x6f, 0x25, 0x55, 0x88, 0xd4, 0x34, 0xad, 0x11, 0x07, 0xaa, 0x4a, 0x91,
	0xd3, 0x4c, 0xd3, 0x28, 0x60, 0x0f, 0x33, 0x4e, 0x51, 0xf9, 0x00, 0xbd, 0xf6, 0xd4, 0x4b, 0xd5,
	0x43, 0xcf, 0x7b, 0xda, 0xeb, 0x7e, 0x85, 0xfd, 0x54, 0x2b, 0x8f, 0x4d, 0x32, 0x99, 0x19, 0x27,
	0xc6, 0x09, 0x2b, 0x8e, 0x7e, 0x79, 0xef, 0xf7, 0xfe, 0xce, 0xfb, 0x13, 0xd8, 0xf3, 0x69, 0xdf,
	0xf5, 0x06, 0x0f, 0x6e, 0x30, 0xf0, 0xbd, 0x9a, 0xf8, 0x51, 0x25, 0xd4, 0x0f, 0x7c, 0x94, 0x17,
	0x69, 0x56, 0xa5, 0x4d, 0xb0, 0x77, 0xda, 0x6c, 0x9d, 0x5e, 0x62, 0xfa, 0x07, 0xa6, 0x35, 0x32,
	0xec, 0xd7, 0x38, 0x5f, 0x8d, 0xf5, 0x86, 0x9d, 0x7b, 0x56, 0xbb, 0x67, 0x91, 0x9c, 0xfd, 0xaf,
	0x01, 0x5b, 0xe7, 0x14, 0xbb, 0x01, 0xae, 0x63, 0xe2, 0xd2, 0xe0, 0x16, 0x7b, 0x81, 0x83, 0xef,
	0xd0, 0x77, 0xf0, 0x51, 0x6f, 0x4c, 0x68, 0x7a, 0xbf, 0xf9, 0xa6, 0x51, 0x36, 0x2a, 0x9b, 0x67,
	0x3b, 0x55, 0xc6, 0x21, 0x3b, 0x2e, 0x19, 0x74, 0x88, 0x4b, 0xdd, 0x5b, 0x56, 0x15, 0x24, 0x25,
	0x21, 0x54, 0x86, 0x4d, 0x9f, 0x60, 0xca, 0xad, 0x6a, 0xd6, 0xcd, 0x95, 0xb2, 0x51, 0xd9, 0x70,
	0x44, 0x12, 0xb2, 0x60, 0xdd, 0x27, 0x57, 0x0c, 0xd3, 0x66, 0xdd, 0xcc, 0xf1, 0x9f, 0xc7, 0xdf,
	0xf6, 0xdf, 0x06, 0x6c, 0xab, 0xc6, 0x31, 0x82, 0x4c, 0xf8, 0x10, 0x53, 0x7a, 0xee, 0xf7, 0x30,
	0x37, 0xeb, 0x03, 0xe7, 0xf1, 0x13, 0x15, 0x61, 0x0d, 0x53, 0xda, 0x62, 0xfd, 0x58, 0x57, 0xfc,
	0xa5, 0xf1, 0x27, 0x97, 0xc1, 0x1f, 0x1e, 0xae, 0x2b, 0xd2, 0x7b, 0x99, 0xe1, 0xba, 0x80, 0x6d,
	0xd5, 0xb6, 0x2c, 0xd1, 0xb2, 0xef, 0x61, 0xab, 0x81, 0x83, 0xcb, 0x51, 0x77, 0xda, 0x4b, 0x1b,
	0xf2, 0x82, 0xc1, 0x75, 0x8e, 0xb6, 0xe1, 0x4c, 0xd1, 0x96, 0x90, 0x71, 0x55, 0xf3, 0xe2, 0x19,
	0xff, 0x7e, 0xc0, 0x02, 0x33, 0x57, 0xce, 0x3d, 0x29, 0x25, 0xa1, 0x50, 0x18, 0x8a, 0x3a, 0xbe,
	0xc1, 0x72, 0xc2, 0x9f, 0x3f, 0x14, 0x17, 0xb0, 0xad, 0x2a, 0xce, 0x94, 0xcd, 0x1e, 0x7c, 0xd6,
	0xc0, 0xc1, 0x04, 0xe6, 0x47, 0x97, 0x72, 0x03, 0x43, 0xff, 0x96, 0xe6, 0x8b, 0x3d, 0x82, 0x9d,
	0x19, 0x5a, 0x32, 0xa5, 0xd0, 0x86, 0x3c, 0x11, 0x50, 0x78, 0x02, 0x37, 0x9c, 0x29, 0x9a, 0xfd,
	0xd6, 0x80, 0x52, 0xd4, 0x23, 0xda, 0x42, 0x07, 0x0c, 0x63, 0x18, 0xba, 0xd6, 0x86, 0x82, 0x2f,
	0x91, 0xe3, 0x97, 0xb9, 0xaf, 0x29, 0x03, 0x05, 0x41, 0x11, 0x5e, 0x2c, 0xa7, 0x68, 0x17, 0xa0,
	0xc9, 0x1c, 0xdc, 0x1f, 0xb0, 0x00, 0x53, 0x73, 0xb5, 0x6c, 0x54, 0xd6, 0x1d, 0x18, 0x8c, 0x29,
	0xf6, 0x0f, 0x60, 0x25, 0xf9, 0x92, 0x29, 0xf3, 0xaf, 0x0c, 0x28, 0x45, 0x2d, 0xe1, 0xe5, 0x07,
	0x27, 0x74, 0x3e, 0xc9, 0xd6, 0xcc, 0xce, 0xcb, 0xd3, 0xa3, 0x85, 0x6f, 0xbb, 0x63, 0xe7, 0x7b,
	0x12, 0x79, 0x86, 0xf3, 0x0a, 0x82, 0x22, 0xbc, 0xb8, 0xf3, 0x49, 0xb6, 0x66, 0x72, 0xde, 0x83,
	0x62, 0x03, 0x07, 0x1c, 0xdc, 0x9b, 0xee, 0x5c, 0x45, 0x58, 0x1b, 0x45, 0x36, 0x44, 0xef, 0x3c,
	0xfe, 0x5a, 0xd0, 0xfe, 0xff, 0x0c, 0xf8, 0x54, 0xab, 0x30, 0xd3, 0xc3, 0x6f, 0x43, 0x61, 0x24,
	0x21, 0xc5, 0xf3, 0x5a, 0x97, 0x1c, 0x45, 0xa9, 0x22, 0x2c, 0x3c, 0x04, 0x5d, 0x48, 0x5e, 0x5e,
	0x2d, 0x24, 0xd9, 0x9a, 0xa9, 0x16, 0xfe, 0x31, 0xa0, 0x14, 0x8d, 0x92, 0xf7, 0x56, 0x0f, 0xca,
	0x4c, 0x59, 0x55, 0x67, 0x4a, 0xe8, 0x67, 0x92, 0x59, 0x99, 0xfc, 0xbc, 0x7b, 0x74, 0x53, 0xd7,
	0xec, 0x9e, 0xa7, 0xec, 0xc7, 0x2e, 0x2c, 0xa9, 0x67, 0x3d, 0xf0, 0x67, 0xab, 0xeb, 0x57, 0xcf,
	0xbf, 0x70, 0xbc, 0x8e, 0x9e, 0xf0, 0x72, 0x1a, 0x10, 0xfa, 0x15, 0xcc, 0x30, 0xc2, 0x32, 0x9a,
	0xb0, 0x88, 0x1d, 0x25, 0x3c, 0x65, 0xc5, 0x80, 0x44, 0x20, 0x9b, 0x82, 0x3d, 0x65, 0xb1, 0x83,
	0x6f, 0xdc, 0x00, 0xf7, 0x1a, 0xd4, 0x1f, 0x91, 0xc9, 0x7e, 0x23, 0x85, 0xc5, 0x50, 0xc3, 0x72,
	0x2c, 0x36, 0x80, 0x78, 0xd9, 0x58, 0xe1, 0xcb, 0x86, 0x42, 0xb7, 0xff, 0x84, 0xfd, 0xb9, 0x3a,
	0x33, 0x45, 0xac, 0x0c, 0x9b, 0xfd, 0x09, 0x48, 0xbc, 0xec, 0x88, 0x24, 0xfb, 0x17, 0x30, 0xc7,
	0x3d, 0x56, 0x2c, 0xb8, 0xd0, 0xc9, 0x5d, 0x80, 0xa8, 0xa2, 0xb9, 0xb0, 0xc1, 0x85, 0x05, 0x4a,
	0x8a, 0x05, 0xee, 0x7f, 0x03, 0x4a, 0x09, 0xf0, 0x99, 0xfc, 0xf9, 0x09, 0x3e, 0x96, 0x37, 0x04,
	0x16, 0xa7, 0x3e, 0xd5, 0x7e, 0xa1, 0x4a, 0x9f, 0xbd, 0xc9, 0xc3, 0xd4, 0xa1, 0x8b, 0xae, 0xa1,
	0x20, 0x8f, 0x4d, 0xf4, 0x79, 0x75, 0xea, 0x3e, 0xd6, 0x5c, 0xb7, 0x96, 0x3d, 0x8f, 0x85, 0x91,
	0x10, 0x5a, 0xbe, 0xa6, 0x64, 0x68, 0xcd, 0x25, 0x28, 0x43, 0x6b, 0x0f, 0xb2, 0x6b, 0x28, 0xc8,
	0x47, 0x8e, 0x0c, 0xad, 0x39, 0xbf, 0x64, 0x68, 0xed, 0x9d, 0x74, 0x0d, 0x05, 0xf9, 0x6a, 0x90,
	0xa1, 0x35, 0xe7, 0x8c, 0x0c, 0xad, 0x3d, 0x3c, 0x02, 0x5e, 0x1e, 0xfa, 0x05, 0x1f, 0x1d, 0x2b,
	0xb6, 0x25, 0xde, 0x1b, 0xd6, 0x49, 0x6a, 0x5e, 0x46, 0xd0, 0x10, 0x8a, 0xfa, 0x95, 0x18, 0x1d,
	0xe9, 0x92, 0xa8, 0x69, 0xfd, 0x56, 0x25, 0x1d, 0x63, 0xa4, 0x4c, 0xbf, 0x82, 0xca, 0xca, 0x12,
	0x97, 0x6a, 0x59, 0xd9, 0x8c, 0x8d, 0x76, 0x08, 0x45, 0xfd, 0xec, 0x90, 0x95, 0x25, 0x0e, 0x35,
	0x59, 0xd9, 0x8c, 0x51, 0x34, 0x0e, 0xa3, 0xdc, 0x47, 0xf5, 0x61, 0xd4, 0x4c, 0x20, 0x7d, 0x18,
	0xb5, 0xd3, 0xa2, 0xcb, 0xff, 0x3e, 0x90, 0xa7, 0x3a, 0x3a, 0x50, 0xf2, 0xae, 0xd9, 0x47, 0xac,
	0xc3, 0x14, 0x5c, 0x62, 0xf4, 0x14, 0x35, 0xda, 0xe8, 0xe9, 0x34, 0x55, 0xd2, 0x31, 0x8a, 0x75,
	0x31, 0x4f, 0x59, 0xe2, 0x8e, 0xa9, 0xaf, 0x0b, 0xad, 0xb2, 0x28, 0x7a, 0x4a, 0x9e, 0x0e, 0x66,
	0xbc, 0x9a, 0x49, 0x92, 0x0e, 0x53, 0x70, 0x31, 0x82, 0xfe, 0x32, 0x60, 0x6f, 0xce, 0x14, 0x43,
	0x5f, 0xce, 0x80, 0xd2, 0x0e, 0x5a, 0xeb, 0xab, 0x27, 0x4a, 0x30, 0x82, 0x7e, 0x87, 0x4f, 0xb4,
	0x33, 0x07, 0x7d, 0x91, 0x50, 0x06, 0xd2, 0xdc, 0xb3, 0x8e, 0x52, 0xf1, 0x31, 0xf2, 0xed, 0xe9,
	0xcf, 0x27, 0x6d, 0x82, 0xbd, 0x4e, 0xb3, 0x25, 0xfc, 0x1d, 0x2a, 0xca, 0x7e, 0x23, 0x7e, 0x74,
	0xd7, 0x38, 0xc3, 0xd7, 0xef, 0x02, 0x00, 0x00, 0xff, 0xff, 0xa2, 0x39, 0x27, 0x95, 0x7a, 0x15,
	0x00, 0x00,
}
