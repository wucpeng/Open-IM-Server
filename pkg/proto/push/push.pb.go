// Code generated by protoc-gen-go. DO NOT EDIT.
// source: push/push.proto

/*
Package pbPush is a generated protocol buffer package.

It is generated from these files:
	push/push.proto

It has these top-level messages:
	PushMsgReq
	PushMsgResp
*/
package pbPush

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import server_api_params "Open_IM/pkg/proto/sdk_ws"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type PushMsgReq struct {
	OperationID  string                     `protobuf:"bytes,1,opt,name=operationID" json:"operationID,omitempty"`
	MsgData      *server_api_params.MsgData `protobuf:"bytes,2,opt,name=msgData" json:"msgData,omitempty"`
	PushToUserID string                     `protobuf:"bytes,3,opt,name=pushToUserID" json:"pushToUserID,omitempty"`
}

func (m *PushMsgReq) Reset()                    { *m = PushMsgReq{} }
func (m *PushMsgReq) String() string            { return proto.CompactTextString(m) }
func (*PushMsgReq) ProtoMessage()               {}
func (*PushMsgReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *PushMsgReq) GetOperationID() string {
	if m != nil {
		return m.OperationID
	}
	return ""
}

func (m *PushMsgReq) GetMsgData() *server_api_params.MsgData {
	if m != nil {
		return m.MsgData
	}
	return nil
}

func (m *PushMsgReq) GetPushToUserID() string {
	if m != nil {
		return m.PushToUserID
	}
	return ""
}

type PushMsgResp struct {
	ResultCode int32 `protobuf:"varint,1,opt,name=ResultCode,json=resultCode" json:"ResultCode,omitempty"`
}

func (m *PushMsgResp) Reset()                    { *m = PushMsgResp{} }
func (m *PushMsgResp) String() string            { return proto.CompactTextString(m) }
func (*PushMsgResp) ProtoMessage()               {}
func (*PushMsgResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *PushMsgResp) GetResultCode() int32 {
	if m != nil {
		return m.ResultCode
	}
	return 0
}

func init() {
	proto.RegisterType((*PushMsgReq)(nil), "push.PushMsgReq")
	proto.RegisterType((*PushMsgResp)(nil), "push.PushMsgResp")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for PushMsgService service

type PushMsgServiceClient interface {
	PushMsg(ctx context.Context, in *PushMsgReq, opts ...grpc.CallOption) (*PushMsgResp, error)
}

type pushMsgServiceClient struct {
	cc *grpc.ClientConn
}

func NewPushMsgServiceClient(cc *grpc.ClientConn) PushMsgServiceClient {
	return &pushMsgServiceClient{cc}
}

func (c *pushMsgServiceClient) PushMsg(ctx context.Context, in *PushMsgReq, opts ...grpc.CallOption) (*PushMsgResp, error) {
	out := new(PushMsgResp)
	err := grpc.Invoke(ctx, "/push.PushMsgService/PushMsg", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for PushMsgService service

type PushMsgServiceServer interface {
	PushMsg(context.Context, *PushMsgReq) (*PushMsgResp, error)
}

func RegisterPushMsgServiceServer(s *grpc.Server, srv PushMsgServiceServer) {
	s.RegisterService(&_PushMsgService_serviceDesc, srv)
}

func _PushMsgService_PushMsg_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PushMsgReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PushMsgServiceServer).PushMsg(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/push.PushMsgService/PushMsg",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PushMsgServiceServer).PushMsg(ctx, req.(*PushMsgReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _PushMsgService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "push.PushMsgService",
	HandlerType: (*PushMsgServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "PushMsg",
			Handler:    _PushMsgService_PushMsg_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "push/push.proto",
}

func init() { proto.RegisterFile("push/push.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 258 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x90, 0x3d, 0x4f, 0xc3, 0x30,
	0x10, 0x86, 0x15, 0xbe, 0x2a, 0x2e, 0x88, 0x0f, 0x4f, 0x51, 0x24, 0x20, 0xca, 0x94, 0x25, 0xb6,
	0x54, 0xd8, 0x58, 0x10, 0x64, 0xc9, 0x10, 0x81, 0x0c, 0x2c, 0x2c, 0x91, 0x4b, 0xad, 0x34, 0x2a,
	0xad, 0x0f, 0x5f, 0x42, 0xff, 0x02, 0x3f, 0x1b, 0xd9, 0x2d, 0x25, 0xb0, 0x58, 0xd6, 0xe3, 0x47,
	0xbe, 0xf7, 0x5e, 0x38, 0xc1, 0x9e, 0x66, 0xc2, 0x1d, 0x1c, 0xad, 0xe9, 0x0c, 0xdb, 0x73, 0xf7,
	0x38, 0x7b, 0x40, 0xbd, 0xcc, 0xcb, 0x2a, 0x7f, 0xd2, 0xf6, 0x53, 0x5b, 0x81, 0xf3, 0x46, 0xf8,
	0x77, 0x41, 0xd3, 0x79, 0xbd, 0x22, 0xb1, 0xa2, 0xb5, 0x9f, 0x7e, 0x05, 0x00, 0x8f, 0x3d, 0xcd,
	0x2a, 0x6a, 0xa4, 0xfe, 0x60, 0x09, 0x84, 0x06, 0xb5, 0x55, 0x5d, 0x6b, 0x96, 0x65, 0x11, 0x05,
	0x49, 0x90, 0x1d, 0xca, 0x21, 0x62, 0xd7, 0x30, 0x5a, 0x50, 0x53, 0xa8, 0x4e, 0x45, 0x3b, 0x49,
	0x90, 0x85, 0xe3, 0x98, 0x93, 0x1f, 0x52, 0x2b, 0x6c, 0x6b, 0x54, 0x56, 0x2d, 0x88, 0x57, 0x6b,
	0x43, 0xfe, 0xa8, 0x2c, 0x85, 0x23, 0x17, 0xec, 0xd9, 0xbc, 0x90, 0xb6, 0x65, 0x11, 0xed, 0xfa,
	0x8f, 0xff, 0xb0, 0x34, 0x87, 0x70, 0x9b, 0x84, 0x90, 0x5d, 0x00, 0x48, 0x4d, 0xfd, 0x7b, 0x77,
	0x6f, 0xa6, 0xda, 0x27, 0xd9, 0x97, 0x60, 0xb7, 0x64, 0x7c, 0x0b, 0xc7, 0x1b, 0xdd, 0x2d, 0xd9,
	0xbe, 0x69, 0xc6, 0x61, 0xb4, 0x21, 0xec, 0x94, 0xfb, 0x4e, 0x7e, 0x37, 0x8b, 0xcf, 0xfe, 0x11,
	0xc2, 0xbb, 0xcb, 0xd7, 0x73, 0xd7, 0x53, 0x5d, 0x56, 0x83, 0x82, 0x9c, 0x75, 0x83, 0x13, 0xe7,
	0x4d, 0x0e, 0x3c, 0xba, 0xfa, 0x0e, 0x00, 0x00, 0xff, 0xff, 0xf7, 0x9c, 0x33, 0xb3, 0x66, 0x01,
	0x00, 0x00,
}
