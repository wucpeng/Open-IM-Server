// Code generated by protoc-gen-go. DO NOT EDIT.
// source: sdk_ws/ws.proto

/*
Package server_api_params is a generated protocol buffer package.

It is generated from these files:
	sdk_ws/ws.proto

It has these top-level messages:
	GroupInfo
	GroupInfoForSet
	GroupMemberFullInfo
	PublicUserInfo
	UserInfo
	FriendInfo
	BlackInfo
	GroupRequest
	FriendRequest
	Department
	OrganizationUser
	DepartmentMember
	UserDepartmentMember
	UserInDepartment
	PullMessageBySeqListReq
	SeqList
	MsgDataList
	PullMessageBySeqListResp
	GetMaxAndMinSeqReq
	MaxAndMinSeq
	GetMaxAndMinSeqResp
	UserSendMsgResp
	MsgData
	OfflinePushInfo
	TipsComm
	GroupCreatedTips
	GroupInfoSetTips
	JoinGroupApplicationTips
	MemberQuitTips
	GroupApplicationAcceptedTips
	GroupApplicationRejectedTips
	GroupOwnerTransferredTips
	MemberKickedTips
	MemberInvitedTips
	MemberEnterTips
	GroupDismissedTips
	GroupMemberMutedTips
	GroupMemberCancelMutedTips
	GroupMutedTips
	GroupCancelMutedTips
	GroupMemberInfoSetTips
	OrganizationChangedTips
	FriendApplication
	FromToUserID
	FriendApplicationTips
	FriendApplicationApprovedTips
	FriendApplicationRejectedTips
	FriendAddedTips
	FriendDeletedTips
	BlackAddedTips
	BlackDeletedTips
	FriendInfoChangedTips
	UserInfoUpdatedTips
	ConversationUpdateTips
	ConversationSetPrivateTips
	DeleteMessageTips
	RequestPagination
	ResponsePagination
	SignalReq
	SignalResp
	InvitationInfo
	ParticipantMetaData
	SignalInviteReq
	SignalInviteReply
	SignalInviteInGroupReq
	SignalInviteInGroupReply
	SignalCancelReq
	SignalCancelReply
	SignalAcceptReq
	SignalAcceptReply
	SignalHungUpReq
	SignalHungUpReply
	SignalRejectReq
	SignalRejectReply
	SignalGetRoomByGroupIDReq
	SignalGetRoomByGroupIDReply
	SignalOnRoomParticipantConnectedReq
	SignalOnRoomParticipantDisconnectedReq
	SignalGetTokenByRoomIDReq
	SignalGetTokenByRoomIDReply
	DelMsgListReq
	DelMsgListResp
*/
package server_api_params

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "google.golang.org/protobuf/types/known/wrapperspb"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type GroupInfo struct {
	GroupID                string `protobuf:"bytes,1,opt,name=groupID" json:"groupID,omitempty"`
	GroupName              string `protobuf:"bytes,2,opt,name=groupName" json:"groupName,omitempty"`
	Notification           string `protobuf:"bytes,3,opt,name=notification" json:"notification,omitempty"`
	Introduction           string `protobuf:"bytes,4,opt,name=introduction" json:"introduction,omitempty"`
	FaceURL                string `protobuf:"bytes,5,opt,name=faceURL" json:"faceURL,omitempty"`
	OwnerUserID            string `protobuf:"bytes,6,opt,name=ownerUserID" json:"ownerUserID,omitempty"`
	CreateTime             uint32 `protobuf:"varint,7,opt,name=createTime" json:"createTime,omitempty"`
	MemberCount            uint32 `protobuf:"varint,8,opt,name=memberCount" json:"memberCount,omitempty"`
	Ex                     string `protobuf:"bytes,9,opt,name=ex" json:"ex,omitempty"`
	Status                 int32  `protobuf:"varint,10,opt,name=status" json:"status,omitempty"`
	CreatorUserID          string `protobuf:"bytes,11,opt,name=creatorUserID" json:"creatorUserID,omitempty"`
	GroupType              int32  `protobuf:"varint,12,opt,name=groupType" json:"groupType,omitempty"`
	NeedVerification       int32  `protobuf:"varint,13,opt,name=needVerification" json:"needVerification,omitempty"`
	LookMemberInfo         int32  `protobuf:"varint,14,opt,name=lookMemberInfo" json:"lookMemberInfo,omitempty"`
	ApplyMemberFriend      int32  `protobuf:"varint,15,opt,name=applyMemberFriend" json:"applyMemberFriend,omitempty"`
	NotificationUpdateTime uint32 `protobuf:"varint,16,opt,name=notificationUpdateTime" json:"notificationUpdateTime,omitempty"`
	NotificationUserID     string `protobuf:"bytes,17,opt,name=notificationUserID" json:"notificationUserID,omitempty"`
}

func (m *GroupInfo) Reset()                    { *m = GroupInfo{} }
func (m *GroupInfo) String() string            { return proto.CompactTextString(m) }
func (*GroupInfo) ProtoMessage()               {}
func (*GroupInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *GroupInfo) GetGroupID() string {
	if m != nil {
		return m.GroupID
	}
	return ""
}

func (m *GroupInfo) GetGroupName() string {
	if m != nil {
		return m.GroupName
	}
	return ""
}

func (m *GroupInfo) GetNotification() string {
	if m != nil {
		return m.Notification
	}
	return ""
}

func (m *GroupInfo) GetIntroduction() string {
	if m != nil {
		return m.Introduction
	}
	return ""
}

func (m *GroupInfo) GetFaceURL() string {
	if m != nil {
		return m.FaceURL
	}
	return ""
}

func (m *GroupInfo) GetOwnerUserID() string {
	if m != nil {
		return m.OwnerUserID
	}
	return ""
}

func (m *GroupInfo) GetCreateTime() uint32 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

func (m *GroupInfo) GetMemberCount() uint32 {
	if m != nil {
		return m.MemberCount
	}
	return 0
}

func (m *GroupInfo) GetEx() string {
	if m != nil {
		return m.Ex
	}
	return ""
}

func (m *GroupInfo) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *GroupInfo) GetCreatorUserID() string {
	if m != nil {
		return m.CreatorUserID
	}
	return ""
}

func (m *GroupInfo) GetGroupType() int32 {
	if m != nil {
		return m.GroupType
	}
	return 0
}

func (m *GroupInfo) GetNeedVerification() int32 {
	if m != nil {
		return m.NeedVerification
	}
	return 0
}

func (m *GroupInfo) GetLookMemberInfo() int32 {
	if m != nil {
		return m.LookMemberInfo
	}
	return 0
}

func (m *GroupInfo) GetApplyMemberFriend() int32 {
	if m != nil {
		return m.ApplyMemberFriend
	}
	return 0
}

func (m *GroupInfo) GetNotificationUpdateTime() uint32 {
	if m != nil {
		return m.NotificationUpdateTime
	}
	return 0
}

func (m *GroupInfo) GetNotificationUserID() string {
	if m != nil {
		return m.NotificationUserID
	}
	return ""
}

type GroupInfoForSet struct {
	GroupID           string                      `protobuf:"bytes,1,opt,name=groupID" json:"groupID,omitempty"`
	GroupName         string                      `protobuf:"bytes,2,opt,name=groupName" json:"groupName,omitempty"`
	Notification      string                      `protobuf:"bytes,3,opt,name=notification" json:"notification,omitempty"`
	Introduction      string                      `protobuf:"bytes,4,opt,name=introduction" json:"introduction,omitempty"`
	FaceURL           string                      `protobuf:"bytes,5,opt,name=faceURL" json:"faceURL,omitempty"`
	Ex                string                      `protobuf:"bytes,6,opt,name=ex" json:"ex,omitempty"`
	NeedVerification  *google_protobuf.Int32Value `protobuf:"bytes,7,opt,name=needVerification" json:"needVerification,omitempty"`
	LookMemberInfo    *google_protobuf.Int32Value `protobuf:"bytes,8,opt,name=lookMemberInfo" json:"lookMemberInfo,omitempty"`
	ApplyMemberFriend *google_protobuf.Int32Value `protobuf:"bytes,9,opt,name=applyMemberFriend" json:"applyMemberFriend,omitempty"`
}

func (m *GroupInfoForSet) Reset()                    { *m = GroupInfoForSet{} }
func (m *GroupInfoForSet) String() string            { return proto.CompactTextString(m) }
func (*GroupInfoForSet) ProtoMessage()               {}
func (*GroupInfoForSet) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *GroupInfoForSet) GetGroupID() string {
	if m != nil {
		return m.GroupID
	}
	return ""
}

func (m *GroupInfoForSet) GetGroupName() string {
	if m != nil {
		return m.GroupName
	}
	return ""
}

func (m *GroupInfoForSet) GetNotification() string {
	if m != nil {
		return m.Notification
	}
	return ""
}

func (m *GroupInfoForSet) GetIntroduction() string {
	if m != nil {
		return m.Introduction
	}
	return ""
}

func (m *GroupInfoForSet) GetFaceURL() string {
	if m != nil {
		return m.FaceURL
	}
	return ""
}

func (m *GroupInfoForSet) GetEx() string {
	if m != nil {
		return m.Ex
	}
	return ""
}

func (m *GroupInfoForSet) GetNeedVerification() *google_protobuf.Int32Value {
	if m != nil {
		return m.NeedVerification
	}
	return nil
}

func (m *GroupInfoForSet) GetLookMemberInfo() *google_protobuf.Int32Value {
	if m != nil {
		return m.LookMemberInfo
	}
	return nil
}

func (m *GroupInfoForSet) GetApplyMemberFriend() *google_protobuf.Int32Value {
	if m != nil {
		return m.ApplyMemberFriend
	}
	return nil
}

type GroupMemberFullInfo struct {
	GroupID        string `protobuf:"bytes,1,opt,name=groupID" json:"groupID,omitempty"`
	UserID         string `protobuf:"bytes,2,opt,name=userID" json:"userID,omitempty"`
	RoleLevel      int32  `protobuf:"varint,3,opt,name=roleLevel" json:"roleLevel,omitempty"`
	JoinTime       int32  `protobuf:"varint,4,opt,name=joinTime" json:"joinTime,omitempty"`
	Nickname       string `protobuf:"bytes,5,opt,name=nickname" json:"nickname,omitempty"`
	FaceURL        string `protobuf:"bytes,6,opt,name=faceURL" json:"faceURL,omitempty"`
	AppMangerLevel int32  `protobuf:"varint,7,opt,name=appMangerLevel" json:"appMangerLevel,omitempty"`
	JoinSource     int32  `protobuf:"varint,8,opt,name=joinSource" json:"joinSource,omitempty"`
	OperatorUserID string `protobuf:"bytes,9,opt,name=operatorUserID" json:"operatorUserID,omitempty"`
	Ex             string `protobuf:"bytes,10,opt,name=ex" json:"ex,omitempty"`
	MuteEndTime    uint32 `protobuf:"varint,11,opt,name=muteEndTime" json:"muteEndTime,omitempty"`
	InviterUserID  string `protobuf:"bytes,12,opt,name=inviterUserID" json:"inviterUserID,omitempty"`
}

func (m *GroupMemberFullInfo) Reset()                    { *m = GroupMemberFullInfo{} }
func (m *GroupMemberFullInfo) String() string            { return proto.CompactTextString(m) }
func (*GroupMemberFullInfo) ProtoMessage()               {}
func (*GroupMemberFullInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *GroupMemberFullInfo) GetGroupID() string {
	if m != nil {
		return m.GroupID
	}
	return ""
}

func (m *GroupMemberFullInfo) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *GroupMemberFullInfo) GetRoleLevel() int32 {
	if m != nil {
		return m.RoleLevel
	}
	return 0
}

func (m *GroupMemberFullInfo) GetJoinTime() int32 {
	if m != nil {
		return m.JoinTime
	}
	return 0
}

func (m *GroupMemberFullInfo) GetNickname() string {
	if m != nil {
		return m.Nickname
	}
	return ""
}

func (m *GroupMemberFullInfo) GetFaceURL() string {
	if m != nil {
		return m.FaceURL
	}
	return ""
}

func (m *GroupMemberFullInfo) GetAppMangerLevel() int32 {
	if m != nil {
		return m.AppMangerLevel
	}
	return 0
}

func (m *GroupMemberFullInfo) GetJoinSource() int32 {
	if m != nil {
		return m.JoinSource
	}
	return 0
}

func (m *GroupMemberFullInfo) GetOperatorUserID() string {
	if m != nil {
		return m.OperatorUserID
	}
	return ""
}

func (m *GroupMemberFullInfo) GetEx() string {
	if m != nil {
		return m.Ex
	}
	return ""
}

func (m *GroupMemberFullInfo) GetMuteEndTime() uint32 {
	if m != nil {
		return m.MuteEndTime
	}
	return 0
}

func (m *GroupMemberFullInfo) GetInviterUserID() string {
	if m != nil {
		return m.InviterUserID
	}
	return ""
}

type PublicUserInfo struct {
	UserID   string `protobuf:"bytes,1,opt,name=userID" json:"userID,omitempty"`
	Nickname string `protobuf:"bytes,2,opt,name=nickname" json:"nickname,omitempty"`
	FaceURL  string `protobuf:"bytes,3,opt,name=faceURL" json:"faceURL,omitempty"`
	Gender   int32  `protobuf:"varint,4,opt,name=gender" json:"gender,omitempty"`
	Ex       string `protobuf:"bytes,5,opt,name=ex" json:"ex,omitempty"`
}

func (m *PublicUserInfo) Reset()                    { *m = PublicUserInfo{} }
func (m *PublicUserInfo) String() string            { return proto.CompactTextString(m) }
func (*PublicUserInfo) ProtoMessage()               {}
func (*PublicUserInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *PublicUserInfo) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *PublicUserInfo) GetNickname() string {
	if m != nil {
		return m.Nickname
	}
	return ""
}

func (m *PublicUserInfo) GetFaceURL() string {
	if m != nil {
		return m.FaceURL
	}
	return ""
}

func (m *PublicUserInfo) GetGender() int32 {
	if m != nil {
		return m.Gender
	}
	return 0
}

func (m *PublicUserInfo) GetEx() string {
	if m != nil {
		return m.Ex
	}
	return ""
}

type UserInfo struct {
	UserID           string `protobuf:"bytes,1,opt,name=userID" json:"userID,omitempty"`
	Nickname         string `protobuf:"bytes,2,opt,name=nickname" json:"nickname,omitempty"`
	FaceURL          string `protobuf:"bytes,3,opt,name=faceURL" json:"faceURL,omitempty"`
	Gender           int32  `protobuf:"varint,4,opt,name=gender" json:"gender,omitempty"`
	PhoneNumber      string `protobuf:"bytes,5,opt,name=phoneNumber" json:"phoneNumber,omitempty"`
	Birth            uint32 `protobuf:"varint,6,opt,name=birth" json:"birth,omitempty"`
	Email            string `protobuf:"bytes,7,opt,name=email" json:"email,omitempty"`
	Ex               string `protobuf:"bytes,8,opt,name=ex" json:"ex,omitempty"`
	CreateTime       uint32 `protobuf:"varint,9,opt,name=createTime" json:"createTime,omitempty"`
	AppMangerLevel   int32  `protobuf:"varint,10,opt,name=appMangerLevel" json:"appMangerLevel,omitempty"`
	GlobalRecvMsgOpt int32  `protobuf:"varint,11,opt,name=globalRecvMsgOpt" json:"globalRecvMsgOpt,omitempty"`
}

func (m *UserInfo) Reset()                    { *m = UserInfo{} }
func (m *UserInfo) String() string            { return proto.CompactTextString(m) }
func (*UserInfo) ProtoMessage()               {}
func (*UserInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *UserInfo) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *UserInfo) GetNickname() string {
	if m != nil {
		return m.Nickname
	}
	return ""
}

func (m *UserInfo) GetFaceURL() string {
	if m != nil {
		return m.FaceURL
	}
	return ""
}

func (m *UserInfo) GetGender() int32 {
	if m != nil {
		return m.Gender
	}
	return 0
}

func (m *UserInfo) GetPhoneNumber() string {
	if m != nil {
		return m.PhoneNumber
	}
	return ""
}

func (m *UserInfo) GetBirth() uint32 {
	if m != nil {
		return m.Birth
	}
	return 0
}

func (m *UserInfo) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *UserInfo) GetEx() string {
	if m != nil {
		return m.Ex
	}
	return ""
}

func (m *UserInfo) GetCreateTime() uint32 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

func (m *UserInfo) GetAppMangerLevel() int32 {
	if m != nil {
		return m.AppMangerLevel
	}
	return 0
}

func (m *UserInfo) GetGlobalRecvMsgOpt() int32 {
	if m != nil {
		return m.GlobalRecvMsgOpt
	}
	return 0
}

type FriendInfo struct {
	OwnerUserID    string    `protobuf:"bytes,1,opt,name=ownerUserID" json:"ownerUserID,omitempty"`
	Remark         string    `protobuf:"bytes,2,opt,name=remark" json:"remark,omitempty"`
	CreateTime     uint32    `protobuf:"varint,3,opt,name=createTime" json:"createTime,omitempty"`
	FriendUser     *UserInfo `protobuf:"bytes,4,opt,name=friendUser" json:"friendUser,omitempty"`
	AddSource      int32     `protobuf:"varint,5,opt,name=addSource" json:"addSource,omitempty"`
	OperatorUserID string    `protobuf:"bytes,6,opt,name=operatorUserID" json:"operatorUserID,omitempty"`
	Ex             string    `protobuf:"bytes,7,opt,name=ex" json:"ex,omitempty"`
}

func (m *FriendInfo) Reset()                    { *m = FriendInfo{} }
func (m *FriendInfo) String() string            { return proto.CompactTextString(m) }
func (*FriendInfo) ProtoMessage()               {}
func (*FriendInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *FriendInfo) GetOwnerUserID() string {
	if m != nil {
		return m.OwnerUserID
	}
	return ""
}

func (m *FriendInfo) GetRemark() string {
	if m != nil {
		return m.Remark
	}
	return ""
}

func (m *FriendInfo) GetCreateTime() uint32 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

func (m *FriendInfo) GetFriendUser() *UserInfo {
	if m != nil {
		return m.FriendUser
	}
	return nil
}

func (m *FriendInfo) GetAddSource() int32 {
	if m != nil {
		return m.AddSource
	}
	return 0
}

func (m *FriendInfo) GetOperatorUserID() string {
	if m != nil {
		return m.OperatorUserID
	}
	return ""
}

func (m *FriendInfo) GetEx() string {
	if m != nil {
		return m.Ex
	}
	return ""
}

type BlackInfo struct {
	OwnerUserID    string          `protobuf:"bytes,1,opt,name=ownerUserID" json:"ownerUserID,omitempty"`
	CreateTime     uint32          `protobuf:"varint,2,opt,name=createTime" json:"createTime,omitempty"`
	BlackUserInfo  *PublicUserInfo `protobuf:"bytes,3,opt,name=blackUserInfo" json:"blackUserInfo,omitempty"`
	AddSource      int32           `protobuf:"varint,4,opt,name=addSource" json:"addSource,omitempty"`
	OperatorUserID string          `protobuf:"bytes,5,opt,name=operatorUserID" json:"operatorUserID,omitempty"`
	Ex             string          `protobuf:"bytes,6,opt,name=ex" json:"ex,omitempty"`
}

func (m *BlackInfo) Reset()                    { *m = BlackInfo{} }
func (m *BlackInfo) String() string            { return proto.CompactTextString(m) }
func (*BlackInfo) ProtoMessage()               {}
func (*BlackInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *BlackInfo) GetOwnerUserID() string {
	if m != nil {
		return m.OwnerUserID
	}
	return ""
}

func (m *BlackInfo) GetCreateTime() uint32 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

func (m *BlackInfo) GetBlackUserInfo() *PublicUserInfo {
	if m != nil {
		return m.BlackUserInfo
	}
	return nil
}

func (m *BlackInfo) GetAddSource() int32 {
	if m != nil {
		return m.AddSource
	}
	return 0
}

func (m *BlackInfo) GetOperatorUserID() string {
	if m != nil {
		return m.OperatorUserID
	}
	return ""
}

func (m *BlackInfo) GetEx() string {
	if m != nil {
		return m.Ex
	}
	return ""
}

type GroupRequest struct {
	UserInfo      *PublicUserInfo `protobuf:"bytes,1,opt,name=userInfo" json:"userInfo,omitempty"`
	GroupInfo     *GroupInfo      `protobuf:"bytes,2,opt,name=groupInfo" json:"groupInfo,omitempty"`
	HandleResult  int32           `protobuf:"varint,3,opt,name=handleResult" json:"handleResult,omitempty"`
	ReqMsg        string          `protobuf:"bytes,4,opt,name=reqMsg" json:"reqMsg,omitempty"`
	HandleMsg     string          `protobuf:"bytes,5,opt,name=handleMsg" json:"handleMsg,omitempty"`
	ReqTime       uint32          `protobuf:"varint,6,opt,name=reqTime" json:"reqTime,omitempty"`
	HandleUserID  string          `protobuf:"bytes,7,opt,name=handleUserID" json:"handleUserID,omitempty"`
	HandleTime    uint32          `protobuf:"varint,8,opt,name=handleTime" json:"handleTime,omitempty"`
	Ex            string          `protobuf:"bytes,9,opt,name=ex" json:"ex,omitempty"`
	JoinSource    int32           `protobuf:"varint,10,opt,name=joinSource" json:"joinSource,omitempty"`
	InviterUserID string          `protobuf:"bytes,11,opt,name=inviterUserID" json:"inviterUserID,omitempty"`
}

func (m *GroupRequest) Reset()                    { *m = GroupRequest{} }
func (m *GroupRequest) String() string            { return proto.CompactTextString(m) }
func (*GroupRequest) ProtoMessage()               {}
func (*GroupRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *GroupRequest) GetUserInfo() *PublicUserInfo {
	if m != nil {
		return m.UserInfo
	}
	return nil
}

func (m *GroupRequest) GetGroupInfo() *GroupInfo {
	if m != nil {
		return m.GroupInfo
	}
	return nil
}

func (m *GroupRequest) GetHandleResult() int32 {
	if m != nil {
		return m.HandleResult
	}
	return 0
}

func (m *GroupRequest) GetReqMsg() string {
	if m != nil {
		return m.ReqMsg
	}
	return ""
}

func (m *GroupRequest) GetHandleMsg() string {
	if m != nil {
		return m.HandleMsg
	}
	return ""
}

func (m *GroupRequest) GetReqTime() uint32 {
	if m != nil {
		return m.ReqTime
	}
	return 0
}

func (m *GroupRequest) GetHandleUserID() string {
	if m != nil {
		return m.HandleUserID
	}
	return ""
}

func (m *GroupRequest) GetHandleTime() uint32 {
	if m != nil {
		return m.HandleTime
	}
	return 0
}

func (m *GroupRequest) GetEx() string {
	if m != nil {
		return m.Ex
	}
	return ""
}

func (m *GroupRequest) GetJoinSource() int32 {
	if m != nil {
		return m.JoinSource
	}
	return 0
}

func (m *GroupRequest) GetInviterUserID() string {
	if m != nil {
		return m.InviterUserID
	}
	return ""
}

type FriendRequest struct {
	FromUserID    string `protobuf:"bytes,1,opt,name=fromUserID" json:"fromUserID,omitempty"`
	FromNickname  string `protobuf:"bytes,2,opt,name=fromNickname" json:"fromNickname,omitempty"`
	FromFaceURL   string `protobuf:"bytes,3,opt,name=fromFaceURL" json:"fromFaceURL,omitempty"`
	FromGender    int32  `protobuf:"varint,4,opt,name=fromGender" json:"fromGender,omitempty"`
	ToUserID      string `protobuf:"bytes,5,opt,name=toUserID" json:"toUserID,omitempty"`
	ToNickname    string `protobuf:"bytes,6,opt,name=toNickname" json:"toNickname,omitempty"`
	ToFaceURL     string `protobuf:"bytes,7,opt,name=toFaceURL" json:"toFaceURL,omitempty"`
	ToGender      int32  `protobuf:"varint,8,opt,name=toGender" json:"toGender,omitempty"`
	HandleResult  int32  `protobuf:"varint,9,opt,name=handleResult" json:"handleResult,omitempty"`
	ReqMsg        string `protobuf:"bytes,10,opt,name=reqMsg" json:"reqMsg,omitempty"`
	CreateTime    uint32 `protobuf:"varint,11,opt,name=createTime" json:"createTime,omitempty"`
	HandlerUserID string `protobuf:"bytes,12,opt,name=handlerUserID" json:"handlerUserID,omitempty"`
	HandleMsg     string `protobuf:"bytes,13,opt,name=handleMsg" json:"handleMsg,omitempty"`
	HandleTime    uint32 `protobuf:"varint,14,opt,name=handleTime" json:"handleTime,omitempty"`
	Ex            string `protobuf:"bytes,15,opt,name=ex" json:"ex,omitempty"`
}

func (m *FriendRequest) Reset()                    { *m = FriendRequest{} }
func (m *FriendRequest) String() string            { return proto.CompactTextString(m) }
func (*FriendRequest) ProtoMessage()               {}
func (*FriendRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *FriendRequest) GetFromUserID() string {
	if m != nil {
		return m.FromUserID
	}
	return ""
}

func (m *FriendRequest) GetFromNickname() string {
	if m != nil {
		return m.FromNickname
	}
	return ""
}

func (m *FriendRequest) GetFromFaceURL() string {
	if m != nil {
		return m.FromFaceURL
	}
	return ""
}

func (m *FriendRequest) GetFromGender() int32 {
	if m != nil {
		return m.FromGender
	}
	return 0
}

func (m *FriendRequest) GetToUserID() string {
	if m != nil {
		return m.ToUserID
	}
	return ""
}

func (m *FriendRequest) GetToNickname() string {
	if m != nil {
		return m.ToNickname
	}
	return ""
}

func (m *FriendRequest) GetToFaceURL() string {
	if m != nil {
		return m.ToFaceURL
	}
	return ""
}

func (m *FriendRequest) GetToGender() int32 {
	if m != nil {
		return m.ToGender
	}
	return 0
}

func (m *FriendRequest) GetHandleResult() int32 {
	if m != nil {
		return m.HandleResult
	}
	return 0
}

func (m *FriendRequest) GetReqMsg() string {
	if m != nil {
		return m.ReqMsg
	}
	return ""
}

func (m *FriendRequest) GetCreateTime() uint32 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

func (m *FriendRequest) GetHandlerUserID() string {
	if m != nil {
		return m.HandlerUserID
	}
	return ""
}

func (m *FriendRequest) GetHandleMsg() string {
	if m != nil {
		return m.HandleMsg
	}
	return ""
}

func (m *FriendRequest) GetHandleTime() uint32 {
	if m != nil {
		return m.HandleTime
	}
	return 0
}

func (m *FriendRequest) GetEx() string {
	if m != nil {
		return m.Ex
	}
	return ""
}

type Department struct {
	DepartmentID     string `protobuf:"bytes,1,opt,name=departmentID" json:"departmentID,omitempty"`
	FaceURL          string `protobuf:"bytes,2,opt,name=faceURL" json:"faceURL,omitempty"`
	Name             string `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	ParentID         string `protobuf:"bytes,4,opt,name=parentID" json:"parentID,omitempty"`
	Order            int32  `protobuf:"varint,5,opt,name=order" json:"order,omitempty"`
	DepartmentType   int32  `protobuf:"varint,6,opt,name=departmentType" json:"departmentType,omitempty"`
	CreateTime       uint32 `protobuf:"varint,7,opt,name=createTime" json:"createTime,omitempty"`
	SubDepartmentNum uint32 `protobuf:"varint,8,opt,name=subDepartmentNum" json:"subDepartmentNum,omitempty"`
	MemberNum        uint32 `protobuf:"varint,9,opt,name=memberNum" json:"memberNum,omitempty"`
	Ex               string `protobuf:"bytes,10,opt,name=ex" json:"ex,omitempty"`
}

func (m *Department) Reset()                    { *m = Department{} }
func (m *Department) String() string            { return proto.CompactTextString(m) }
func (*Department) ProtoMessage()               {}
func (*Department) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *Department) GetDepartmentID() string {
	if m != nil {
		return m.DepartmentID
	}
	return ""
}

func (m *Department) GetFaceURL() string {
	if m != nil {
		return m.FaceURL
	}
	return ""
}

func (m *Department) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Department) GetParentID() string {
	if m != nil {
		return m.ParentID
	}
	return ""
}

func (m *Department) GetOrder() int32 {
	if m != nil {
		return m.Order
	}
	return 0
}

func (m *Department) GetDepartmentType() int32 {
	if m != nil {
		return m.DepartmentType
	}
	return 0
}

func (m *Department) GetCreateTime() uint32 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

func (m *Department) GetSubDepartmentNum() uint32 {
	if m != nil {
		return m.SubDepartmentNum
	}
	return 0
}

func (m *Department) GetMemberNum() uint32 {
	if m != nil {
		return m.MemberNum
	}
	return 0
}

func (m *Department) GetEx() string {
	if m != nil {
		return m.Ex
	}
	return ""
}

type OrganizationUser struct {
	UserID      string `protobuf:"bytes,1,opt,name=userID" json:"userID,omitempty"`
	Nickname    string `protobuf:"bytes,2,opt,name=nickname" json:"nickname,omitempty"`
	EnglishName string `protobuf:"bytes,3,opt,name=englishName" json:"englishName,omitempty"`
	FaceURL     string `protobuf:"bytes,4,opt,name=faceURL" json:"faceURL,omitempty"`
	Gender      int32  `protobuf:"varint,5,opt,name=gender" json:"gender,omitempty"`
	Mobile      string `protobuf:"bytes,6,opt,name=mobile" json:"mobile,omitempty"`
	Telephone   string `protobuf:"bytes,7,opt,name=telephone" json:"telephone,omitempty"`
	Birth       uint32 `protobuf:"varint,8,opt,name=birth" json:"birth,omitempty"`
	Email       string `protobuf:"bytes,9,opt,name=email" json:"email,omitempty"`
	CreateTime  uint32 `protobuf:"varint,10,opt,name=createTime" json:"createTime,omitempty"`
	Ex          string `protobuf:"bytes,11,opt,name=ex" json:"ex,omitempty"`
}

func (m *OrganizationUser) Reset()                    { *m = OrganizationUser{} }
func (m *OrganizationUser) String() string            { return proto.CompactTextString(m) }
func (*OrganizationUser) ProtoMessage()               {}
func (*OrganizationUser) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *OrganizationUser) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *OrganizationUser) GetNickname() string {
	if m != nil {
		return m.Nickname
	}
	return ""
}

func (m *OrganizationUser) GetEnglishName() string {
	if m != nil {
		return m.EnglishName
	}
	return ""
}

func (m *OrganizationUser) GetFaceURL() string {
	if m != nil {
		return m.FaceURL
	}
	return ""
}

func (m *OrganizationUser) GetGender() int32 {
	if m != nil {
		return m.Gender
	}
	return 0
}

func (m *OrganizationUser) GetMobile() string {
	if m != nil {
		return m.Mobile
	}
	return ""
}

func (m *OrganizationUser) GetTelephone() string {
	if m != nil {
		return m.Telephone
	}
	return ""
}

func (m *OrganizationUser) GetBirth() uint32 {
	if m != nil {
		return m.Birth
	}
	return 0
}

func (m *OrganizationUser) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *OrganizationUser) GetCreateTime() uint32 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

func (m *OrganizationUser) GetEx() string {
	if m != nil {
		return m.Ex
	}
	return ""
}

type DepartmentMember struct {
	UserID       string `protobuf:"bytes,1,opt,name=userID" json:"userID,omitempty"`
	DepartmentID string `protobuf:"bytes,2,opt,name=departmentID" json:"departmentID,omitempty"`
	Order        int32  `protobuf:"varint,3,opt,name=order" json:"order,omitempty"`
	Position     string `protobuf:"bytes,4,opt,name=position" json:"position,omitempty"`
	Leader       int32  `protobuf:"varint,5,opt,name=leader" json:"leader,omitempty"`
	Status       int32  `protobuf:"varint,6,opt,name=status" json:"status,omitempty"`
	Ex           string `protobuf:"bytes,7,opt,name=ex" json:"ex,omitempty"`
}

func (m *DepartmentMember) Reset()                    { *m = DepartmentMember{} }
func (m *DepartmentMember) String() string            { return proto.CompactTextString(m) }
func (*DepartmentMember) ProtoMessage()               {}
func (*DepartmentMember) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *DepartmentMember) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *DepartmentMember) GetDepartmentID() string {
	if m != nil {
		return m.DepartmentID
	}
	return ""
}

func (m *DepartmentMember) GetOrder() int32 {
	if m != nil {
		return m.Order
	}
	return 0
}

func (m *DepartmentMember) GetPosition() string {
	if m != nil {
		return m.Position
	}
	return ""
}

func (m *DepartmentMember) GetLeader() int32 {
	if m != nil {
		return m.Leader
	}
	return 0
}

func (m *DepartmentMember) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *DepartmentMember) GetEx() string {
	if m != nil {
		return m.Ex
	}
	return ""
}

type UserDepartmentMember struct {
	OrganizationUser *OrganizationUser `protobuf:"bytes,1,opt,name=organizationUser" json:"organizationUser,omitempty"`
	DepartmentMember *DepartmentMember `protobuf:"bytes,2,opt,name=departmentMember" json:"departmentMember,omitempty"`
}

func (m *UserDepartmentMember) Reset()                    { *m = UserDepartmentMember{} }
func (m *UserDepartmentMember) String() string            { return proto.CompactTextString(m) }
func (*UserDepartmentMember) ProtoMessage()               {}
func (*UserDepartmentMember) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *UserDepartmentMember) GetOrganizationUser() *OrganizationUser {
	if m != nil {
		return m.OrganizationUser
	}
	return nil
}

func (m *UserDepartmentMember) GetDepartmentMember() *DepartmentMember {
	if m != nil {
		return m.DepartmentMember
	}
	return nil
}

type UserInDepartment struct {
	OrganizationUser     *OrganizationUser   `protobuf:"bytes,1,opt,name=organizationUser" json:"organizationUser,omitempty"`
	DepartmentMemberList []*DepartmentMember `protobuf:"bytes,2,rep,name=departmentMemberList" json:"departmentMemberList,omitempty"`
}

func (m *UserInDepartment) Reset()                    { *m = UserInDepartment{} }
func (m *UserInDepartment) String() string            { return proto.CompactTextString(m) }
func (*UserInDepartment) ProtoMessage()               {}
func (*UserInDepartment) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *UserInDepartment) GetOrganizationUser() *OrganizationUser {
	if m != nil {
		return m.OrganizationUser
	}
	return nil
}

func (m *UserInDepartment) GetDepartmentMemberList() []*DepartmentMember {
	if m != nil {
		return m.DepartmentMemberList
	}
	return nil
}

// /////////////////////////////////base end/////////////////////////////////////
type PullMessageBySeqListReq struct {
	UserID       string              `protobuf:"bytes,1,opt,name=userID" json:"userID,omitempty"`
	OperationID  string              `protobuf:"bytes,2,opt,name=operationID" json:"operationID,omitempty"`
	SeqList      []uint32            `protobuf:"varint,3,rep,packed,name=seqList" json:"seqList,omitempty"`
	GroupSeqList map[string]*SeqList `protobuf:"bytes,4,rep,name=groupSeqList" json:"groupSeqList,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *PullMessageBySeqListReq) Reset()                    { *m = PullMessageBySeqListReq{} }
func (m *PullMessageBySeqListReq) String() string            { return proto.CompactTextString(m) }
func (*PullMessageBySeqListReq) ProtoMessage()               {}
func (*PullMessageBySeqListReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *PullMessageBySeqListReq) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *PullMessageBySeqListReq) GetOperationID() string {
	if m != nil {
		return m.OperationID
	}
	return ""
}

func (m *PullMessageBySeqListReq) GetSeqList() []uint32 {
	if m != nil {
		return m.SeqList
	}
	return nil
}

func (m *PullMessageBySeqListReq) GetGroupSeqList() map[string]*SeqList {
	if m != nil {
		return m.GroupSeqList
	}
	return nil
}

type SeqList struct {
	SeqList []uint32 `protobuf:"varint,1,rep,packed,name=seqList" json:"seqList,omitempty"`
}

func (m *SeqList) Reset()                    { *m = SeqList{} }
func (m *SeqList) String() string            { return proto.CompactTextString(m) }
func (*SeqList) ProtoMessage()               {}
func (*SeqList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *SeqList) GetSeqList() []uint32 {
	if m != nil {
		return m.SeqList
	}
	return nil
}

type MsgDataList struct {
	MsgDataList []*MsgData `protobuf:"bytes,1,rep,name=msgDataList" json:"msgDataList,omitempty"`
}

func (m *MsgDataList) Reset()                    { *m = MsgDataList{} }
func (m *MsgDataList) String() string            { return proto.CompactTextString(m) }
func (*MsgDataList) ProtoMessage()               {}
func (*MsgDataList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

func (m *MsgDataList) GetMsgDataList() []*MsgData {
	if m != nil {
		return m.MsgDataList
	}
	return nil
}

type PullMessageBySeqListResp struct {
	ErrCode          int32                   `protobuf:"varint,1,opt,name=errCode" json:"errCode,omitempty"`
	ErrMsg           string                  `protobuf:"bytes,2,opt,name=errMsg" json:"errMsg,omitempty"`
	List             []*MsgData              `protobuf:"bytes,3,rep,name=list" json:"list,omitempty"`
	GroupMsgDataList map[string]*MsgDataList `protobuf:"bytes,4,rep,name=groupMsgDataList" json:"groupMsgDataList,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *PullMessageBySeqListResp) Reset()                    { *m = PullMessageBySeqListResp{} }
func (m *PullMessageBySeqListResp) String() string            { return proto.CompactTextString(m) }
func (*PullMessageBySeqListResp) ProtoMessage()               {}
func (*PullMessageBySeqListResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

func (m *PullMessageBySeqListResp) GetErrCode() int32 {
	if m != nil {
		return m.ErrCode
	}
	return 0
}

func (m *PullMessageBySeqListResp) GetErrMsg() string {
	if m != nil {
		return m.ErrMsg
	}
	return ""
}

func (m *PullMessageBySeqListResp) GetList() []*MsgData {
	if m != nil {
		return m.List
	}
	return nil
}

func (m *PullMessageBySeqListResp) GetGroupMsgDataList() map[string]*MsgDataList {
	if m != nil {
		return m.GroupMsgDataList
	}
	return nil
}

type GetMaxAndMinSeqReq struct {
	GroupIDList []string `protobuf:"bytes,1,rep,name=groupIDList" json:"groupIDList,omitempty"`
	UserID      string   `protobuf:"bytes,2,opt,name=userID" json:"userID,omitempty"`
	OperationID string   `protobuf:"bytes,3,opt,name=operationID" json:"operationID,omitempty"`
}

func (m *GetMaxAndMinSeqReq) Reset()                    { *m = GetMaxAndMinSeqReq{} }
func (m *GetMaxAndMinSeqReq) String() string            { return proto.CompactTextString(m) }
func (*GetMaxAndMinSeqReq) ProtoMessage()               {}
func (*GetMaxAndMinSeqReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{18} }

func (m *GetMaxAndMinSeqReq) GetGroupIDList() []string {
	if m != nil {
		return m.GroupIDList
	}
	return nil
}

func (m *GetMaxAndMinSeqReq) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *GetMaxAndMinSeqReq) GetOperationID() string {
	if m != nil {
		return m.OperationID
	}
	return ""
}

type MaxAndMinSeq struct {
	MaxSeq uint32 `protobuf:"varint,1,opt,name=maxSeq" json:"maxSeq,omitempty"`
	MinSeq uint32 `protobuf:"varint,2,opt,name=minSeq" json:"minSeq,omitempty"`
}

func (m *MaxAndMinSeq) Reset()                    { *m = MaxAndMinSeq{} }
func (m *MaxAndMinSeq) String() string            { return proto.CompactTextString(m) }
func (*MaxAndMinSeq) ProtoMessage()               {}
func (*MaxAndMinSeq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{19} }

func (m *MaxAndMinSeq) GetMaxSeq() uint32 {
	if m != nil {
		return m.MaxSeq
	}
	return 0
}

func (m *MaxAndMinSeq) GetMinSeq() uint32 {
	if m != nil {
		return m.MinSeq
	}
	return 0
}

type GetMaxAndMinSeqResp struct {
	MaxSeq            uint32                   `protobuf:"varint,1,opt,name=maxSeq" json:"maxSeq,omitempty"`
	MinSeq            uint32                   `protobuf:"varint,2,opt,name=minSeq" json:"minSeq,omitempty"`
	ErrCode           int32                    `protobuf:"varint,3,opt,name=errCode" json:"errCode,omitempty"`
	ErrMsg            string                   `protobuf:"bytes,4,opt,name=errMsg" json:"errMsg,omitempty"`
	GroupMaxAndMinSeq map[string]*MaxAndMinSeq `protobuf:"bytes,5,rep,name=groupMaxAndMinSeq" json:"groupMaxAndMinSeq,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *GetMaxAndMinSeqResp) Reset()                    { *m = GetMaxAndMinSeqResp{} }
func (m *GetMaxAndMinSeqResp) String() string            { return proto.CompactTextString(m) }
func (*GetMaxAndMinSeqResp) ProtoMessage()               {}
func (*GetMaxAndMinSeqResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{20} }

func (m *GetMaxAndMinSeqResp) GetMaxSeq() uint32 {
	if m != nil {
		return m.MaxSeq
	}
	return 0
}

func (m *GetMaxAndMinSeqResp) GetMinSeq() uint32 {
	if m != nil {
		return m.MinSeq
	}
	return 0
}

func (m *GetMaxAndMinSeqResp) GetErrCode() int32 {
	if m != nil {
		return m.ErrCode
	}
	return 0
}

func (m *GetMaxAndMinSeqResp) GetErrMsg() string {
	if m != nil {
		return m.ErrMsg
	}
	return ""
}

func (m *GetMaxAndMinSeqResp) GetGroupMaxAndMinSeq() map[string]*MaxAndMinSeq {
	if m != nil {
		return m.GroupMaxAndMinSeq
	}
	return nil
}

type UserSendMsgResp struct {
	ServerMsgID string `protobuf:"bytes,1,opt,name=serverMsgID" json:"serverMsgID,omitempty"`
	ClientMsgID string `protobuf:"bytes,2,opt,name=clientMsgID" json:"clientMsgID,omitempty"`
	SendTime    int64  `protobuf:"varint,3,opt,name=sendTime" json:"sendTime,omitempty"`
}

func (m *UserSendMsgResp) Reset()                    { *m = UserSendMsgResp{} }
func (m *UserSendMsgResp) String() string            { return proto.CompactTextString(m) }
func (*UserSendMsgResp) ProtoMessage()               {}
func (*UserSendMsgResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{21} }

func (m *UserSendMsgResp) GetServerMsgID() string {
	if m != nil {
		return m.ServerMsgID
	}
	return ""
}

func (m *UserSendMsgResp) GetClientMsgID() string {
	if m != nil {
		return m.ClientMsgID
	}
	return ""
}

func (m *UserSendMsgResp) GetSendTime() int64 {
	if m != nil {
		return m.SendTime
	}
	return 0
}

type MsgData struct {
	SendID           string           `protobuf:"bytes,1,opt,name=sendID" json:"sendID,omitempty"`
	RecvID           string           `protobuf:"bytes,2,opt,name=recvID" json:"recvID,omitempty"`
	GroupID          string           `protobuf:"bytes,3,opt,name=groupID" json:"groupID,omitempty"`
	ClientMsgID      string           `protobuf:"bytes,4,opt,name=clientMsgID" json:"clientMsgID,omitempty"`
	ServerMsgID      string           `protobuf:"bytes,5,opt,name=serverMsgID" json:"serverMsgID,omitempty"`
	SenderPlatformID int32            `protobuf:"varint,6,opt,name=senderPlatformID" json:"senderPlatformID,omitempty"`
	SenderNickname   string           `protobuf:"bytes,7,opt,name=senderNickname" json:"senderNickname,omitempty"`
	SenderFaceURL    string           `protobuf:"bytes,8,opt,name=senderFaceURL" json:"senderFaceURL,omitempty"`
	SessionType      int32            `protobuf:"varint,9,opt,name=sessionType" json:"sessionType,omitempty"`
	MsgFrom          int32            `protobuf:"varint,10,opt,name=msgFrom" json:"msgFrom,omitempty"`
	ContentType      int32            `protobuf:"varint,11,opt,name=contentType" json:"contentType,omitempty"`
	Content          []byte           `protobuf:"bytes,12,opt,name=content,proto3" json:"content,omitempty"`
	Seq              uint32           `protobuf:"varint,14,opt,name=seq" json:"seq,omitempty"`
	SendTime         int64            `protobuf:"varint,15,opt,name=sendTime" json:"sendTime,omitempty"`
	CreateTime       int64            `protobuf:"varint,16,opt,name=createTime" json:"createTime,omitempty"`
	Status           int32            `protobuf:"varint,17,opt,name=status" json:"status,omitempty"`
	Options          map[string]bool  `protobuf:"bytes,18,rep,name=options" json:"options,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	OfflinePushInfo  *OfflinePushInfo `protobuf:"bytes,19,opt,name=offlinePushInfo" json:"offlinePushInfo,omitempty"`
	AtUserIDList     []string         `protobuf:"bytes,20,rep,name=atUserIDList" json:"atUserIDList,omitempty"`
	MsgDataList      []byte           `protobuf:"bytes,21,opt,name=msgDataList,proto3" json:"msgDataList,omitempty"`
	AttachedInfo     string           `protobuf:"bytes,22,opt,name=attachedInfo" json:"attachedInfo,omitempty"`
	Ex               string           `protobuf:"bytes,23,opt,name=ex" json:"ex,omitempty"`
}

func (m *MsgData) Reset()                    { *m = MsgData{} }
func (m *MsgData) String() string            { return proto.CompactTextString(m) }
func (*MsgData) ProtoMessage()               {}
func (*MsgData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{22} }

func (m *MsgData) GetSendID() string {
	if m != nil {
		return m.SendID
	}
	return ""
}

func (m *MsgData) GetRecvID() string {
	if m != nil {
		return m.RecvID
	}
	return ""
}

func (m *MsgData) GetGroupID() string {
	if m != nil {
		return m.GroupID
	}
	return ""
}

func (m *MsgData) GetClientMsgID() string {
	if m != nil {
		return m.ClientMsgID
	}
	return ""
}

func (m *MsgData) GetServerMsgID() string {
	if m != nil {
		return m.ServerMsgID
	}
	return ""
}

func (m *MsgData) GetSenderPlatformID() int32 {
	if m != nil {
		return m.SenderPlatformID
	}
	return 0
}

func (m *MsgData) GetSenderNickname() string {
	if m != nil {
		return m.SenderNickname
	}
	return ""
}

func (m *MsgData) GetSenderFaceURL() string {
	if m != nil {
		return m.SenderFaceURL
	}
	return ""
}

func (m *MsgData) GetSessionType() int32 {
	if m != nil {
		return m.SessionType
	}
	return 0
}

func (m *MsgData) GetMsgFrom() int32 {
	if m != nil {
		return m.MsgFrom
	}
	return 0
}

func (m *MsgData) GetContentType() int32 {
	if m != nil {
		return m.ContentType
	}
	return 0
}

func (m *MsgData) GetContent() []byte {
	if m != nil {
		return m.Content
	}
	return nil
}

func (m *MsgData) GetSeq() uint32 {
	if m != nil {
		return m.Seq
	}
	return 0
}

func (m *MsgData) GetSendTime() int64 {
	if m != nil {
		return m.SendTime
	}
	return 0
}

func (m *MsgData) GetCreateTime() int64 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

func (m *MsgData) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *MsgData) GetOptions() map[string]bool {
	if m != nil {
		return m.Options
	}
	return nil
}

func (m *MsgData) GetOfflinePushInfo() *OfflinePushInfo {
	if m != nil {
		return m.OfflinePushInfo
	}
	return nil
}

func (m *MsgData) GetAtUserIDList() []string {
	if m != nil {
		return m.AtUserIDList
	}
	return nil
}

func (m *MsgData) GetMsgDataList() []byte {
	if m != nil {
		return m.MsgDataList
	}
	return nil
}

func (m *MsgData) GetAttachedInfo() string {
	if m != nil {
		return m.AttachedInfo
	}
	return ""
}

func (m *MsgData) GetEx() string {
	if m != nil {
		return m.Ex
	}
	return ""
}

type OfflinePushInfo struct {
	Title         string `protobuf:"bytes,1,opt,name=title" json:"title,omitempty"`
	Desc          string `protobuf:"bytes,2,opt,name=desc" json:"desc,omitempty"`
	Ex            string `protobuf:"bytes,3,opt,name=ex" json:"ex,omitempty"`
	IOSPushSound  string `protobuf:"bytes,4,opt,name=iOSPushSound" json:"iOSPushSound,omitempty"`
	IOSBadgeCount bool   `protobuf:"varint,5,opt,name=iOSBadgeCount" json:"iOSBadgeCount,omitempty"`
}

func (m *OfflinePushInfo) Reset()                    { *m = OfflinePushInfo{} }
func (m *OfflinePushInfo) String() string            { return proto.CompactTextString(m) }
func (*OfflinePushInfo) ProtoMessage()               {}
func (*OfflinePushInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{23} }

func (m *OfflinePushInfo) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *OfflinePushInfo) GetDesc() string {
	if m != nil {
		return m.Desc
	}
	return ""
}

func (m *OfflinePushInfo) GetEx() string {
	if m != nil {
		return m.Ex
	}
	return ""
}

func (m *OfflinePushInfo) GetIOSPushSound() string {
	if m != nil {
		return m.IOSPushSound
	}
	return ""
}

func (m *OfflinePushInfo) GetIOSBadgeCount() bool {
	if m != nil {
		return m.IOSBadgeCount
	}
	return false
}

type TipsComm struct {
	Detail      []byte `protobuf:"bytes,1,opt,name=detail,proto3" json:"detail,omitempty"`
	DefaultTips string `protobuf:"bytes,2,opt,name=defaultTips" json:"defaultTips,omitempty"`
	JsonDetail  string `protobuf:"bytes,3,opt,name=jsonDetail" json:"jsonDetail,omitempty"`
}

func (m *TipsComm) Reset()                    { *m = TipsComm{} }
func (m *TipsComm) String() string            { return proto.CompactTextString(m) }
func (*TipsComm) ProtoMessage()               {}
func (*TipsComm) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{24} }

func (m *TipsComm) GetDetail() []byte {
	if m != nil {
		return m.Detail
	}
	return nil
}

func (m *TipsComm) GetDefaultTips() string {
	if m != nil {
		return m.DefaultTips
	}
	return ""
}

func (m *TipsComm) GetJsonDetail() string {
	if m != nil {
		return m.JsonDetail
	}
	return ""
}

// 	OnGroupCreated()
type GroupCreatedTips struct {
	Group          *GroupInfo             `protobuf:"bytes,1,opt,name=group" json:"group,omitempty"`
	OpUser         *GroupMemberFullInfo   `protobuf:"bytes,2,opt,name=opUser" json:"opUser,omitempty"`
	MemberList     []*GroupMemberFullInfo `protobuf:"bytes,3,rep,name=memberList" json:"memberList,omitempty"`
	OperationTime  int64                  `protobuf:"varint,4,opt,name=operationTime" json:"operationTime,omitempty"`
	GroupOwnerUser *GroupMemberFullInfo   `protobuf:"bytes,5,opt,name=groupOwnerUser" json:"groupOwnerUser,omitempty"`
}

func (m *GroupCreatedTips) Reset()                    { *m = GroupCreatedTips{} }
func (m *GroupCreatedTips) String() string            { return proto.CompactTextString(m) }
func (*GroupCreatedTips) ProtoMessage()               {}
func (*GroupCreatedTips) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{25} }

func (m *GroupCreatedTips) GetGroup() *GroupInfo {
	if m != nil {
		return m.Group
	}
	return nil
}

func (m *GroupCreatedTips) GetOpUser() *GroupMemberFullInfo {
	if m != nil {
		return m.OpUser
	}
	return nil
}

func (m *GroupCreatedTips) GetMemberList() []*GroupMemberFullInfo {
	if m != nil {
		return m.MemberList
	}
	return nil
}

func (m *GroupCreatedTips) GetOperationTime() int64 {
	if m != nil {
		return m.OperationTime
	}
	return 0
}

func (m *GroupCreatedTips) GetGroupOwnerUser() *GroupMemberFullInfo {
	if m != nil {
		return m.GroupOwnerUser
	}
	return nil
}

// 	OnGroupInfoSet()
type GroupInfoSetTips struct {
	OpUser   *GroupMemberFullInfo `protobuf:"bytes,1,opt,name=opUser" json:"opUser,omitempty"`
	MuteTime int64                `protobuf:"varint,2,opt,name=muteTime" json:"muteTime,omitempty"`
	Group    *GroupInfo           `protobuf:"bytes,3,opt,name=group" json:"group,omitempty"`
}

func (m *GroupInfoSetTips) Reset()                    { *m = GroupInfoSetTips{} }
func (m *GroupInfoSetTips) String() string            { return proto.CompactTextString(m) }
func (*GroupInfoSetTips) ProtoMessage()               {}
func (*GroupInfoSetTips) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{26} }

func (m *GroupInfoSetTips) GetOpUser() *GroupMemberFullInfo {
	if m != nil {
		return m.OpUser
	}
	return nil
}

func (m *GroupInfoSetTips) GetMuteTime() int64 {
	if m != nil {
		return m.MuteTime
	}
	return 0
}

func (m *GroupInfoSetTips) GetGroup() *GroupInfo {
	if m != nil {
		return m.Group
	}
	return nil
}

// 	OnJoinGroupApplication()
type JoinGroupApplicationTips struct {
	Group     *GroupInfo      `protobuf:"bytes,1,opt,name=group" json:"group,omitempty"`
	Applicant *PublicUserInfo `protobuf:"bytes,2,opt,name=applicant" json:"applicant,omitempty"`
	ReqMsg    string          `protobuf:"bytes,3,opt,name=reqMsg" json:"reqMsg,omitempty"`
}

func (m *JoinGroupApplicationTips) Reset()                    { *m = JoinGroupApplicationTips{} }
func (m *JoinGroupApplicationTips) String() string            { return proto.CompactTextString(m) }
func (*JoinGroupApplicationTips) ProtoMessage()               {}
func (*JoinGroupApplicationTips) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{27} }

func (m *JoinGroupApplicationTips) GetGroup() *GroupInfo {
	if m != nil {
		return m.Group
	}
	return nil
}

func (m *JoinGroupApplicationTips) GetApplicant() *PublicUserInfo {
	if m != nil {
		return m.Applicant
	}
	return nil
}

func (m *JoinGroupApplicationTips) GetReqMsg() string {
	if m != nil {
		return m.ReqMsg
	}
	return ""
}

// 	OnQuitGroup()
// Actively leave the group
type MemberQuitTips struct {
	Group         *GroupInfo           `protobuf:"bytes,1,opt,name=group" json:"group,omitempty"`
	QuitUser      *GroupMemberFullInfo `protobuf:"bytes,2,opt,name=quitUser" json:"quitUser,omitempty"`
	OperationTime int64                `protobuf:"varint,3,opt,name=operationTime" json:"operationTime,omitempty"`
}

func (m *MemberQuitTips) Reset()                    { *m = MemberQuitTips{} }
func (m *MemberQuitTips) String() string            { return proto.CompactTextString(m) }
func (*MemberQuitTips) ProtoMessage()               {}
func (*MemberQuitTips) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{28} }

func (m *MemberQuitTips) GetGroup() *GroupInfo {
	if m != nil {
		return m.Group
	}
	return nil
}

func (m *MemberQuitTips) GetQuitUser() *GroupMemberFullInfo {
	if m != nil {
		return m.QuitUser
	}
	return nil
}

func (m *MemberQuitTips) GetOperationTime() int64 {
	if m != nil {
		return m.OperationTime
	}
	return 0
}

// 	OnApplicationGroupAccepted()
type GroupApplicationAcceptedTips struct {
	Group     *GroupInfo           `protobuf:"bytes,1,opt,name=group" json:"group,omitempty"`
	OpUser    *GroupMemberFullInfo `protobuf:"bytes,2,opt,name=opUser" json:"opUser,omitempty"`
	HandleMsg string               `protobuf:"bytes,4,opt,name=handleMsg" json:"handleMsg,omitempty"`
}

func (m *GroupApplicationAcceptedTips) Reset()                    { *m = GroupApplicationAcceptedTips{} }
func (m *GroupApplicationAcceptedTips) String() string            { return proto.CompactTextString(m) }
func (*GroupApplicationAcceptedTips) ProtoMessage()               {}
func (*GroupApplicationAcceptedTips) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{29} }

func (m *GroupApplicationAcceptedTips) GetGroup() *GroupInfo {
	if m != nil {
		return m.Group
	}
	return nil
}

func (m *GroupApplicationAcceptedTips) GetOpUser() *GroupMemberFullInfo {
	if m != nil {
		return m.OpUser
	}
	return nil
}

func (m *GroupApplicationAcceptedTips) GetHandleMsg() string {
	if m != nil {
		return m.HandleMsg
	}
	return ""
}

// 	OnApplicationGroupRejected()
type GroupApplicationRejectedTips struct {
	Group     *GroupInfo           `protobuf:"bytes,1,opt,name=group" json:"group,omitempty"`
	OpUser    *GroupMemberFullInfo `protobuf:"bytes,2,opt,name=opUser" json:"opUser,omitempty"`
	HandleMsg string               `protobuf:"bytes,4,opt,name=handleMsg" json:"handleMsg,omitempty"`
}

func (m *GroupApplicationRejectedTips) Reset()                    { *m = GroupApplicationRejectedTips{} }
func (m *GroupApplicationRejectedTips) String() string            { return proto.CompactTextString(m) }
func (*GroupApplicationRejectedTips) ProtoMessage()               {}
func (*GroupApplicationRejectedTips) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{30} }

func (m *GroupApplicationRejectedTips) GetGroup() *GroupInfo {
	if m != nil {
		return m.Group
	}
	return nil
}

func (m *GroupApplicationRejectedTips) GetOpUser() *GroupMemberFullInfo {
	if m != nil {
		return m.OpUser
	}
	return nil
}

func (m *GroupApplicationRejectedTips) GetHandleMsg() string {
	if m != nil {
		return m.HandleMsg
	}
	return ""
}

// 	OnTransferGroupOwner()
type GroupOwnerTransferredTips struct {
	Group         *GroupInfo           `protobuf:"bytes,1,opt,name=group" json:"group,omitempty"`
	OpUser        *GroupMemberFullInfo `protobuf:"bytes,2,opt,name=opUser" json:"opUser,omitempty"`
	NewGroupOwner *GroupMemberFullInfo `protobuf:"bytes,3,opt,name=newGroupOwner" json:"newGroupOwner,omitempty"`
	OperationTime int64                `protobuf:"varint,4,opt,name=operationTime" json:"operationTime,omitempty"`
}

func (m *GroupOwnerTransferredTips) Reset()                    { *m = GroupOwnerTransferredTips{} }
func (m *GroupOwnerTransferredTips) String() string            { return proto.CompactTextString(m) }
func (*GroupOwnerTransferredTips) ProtoMessage()               {}
func (*GroupOwnerTransferredTips) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{31} }

func (m *GroupOwnerTransferredTips) GetGroup() *GroupInfo {
	if m != nil {
		return m.Group
	}
	return nil
}

func (m *GroupOwnerTransferredTips) GetOpUser() *GroupMemberFullInfo {
	if m != nil {
		return m.OpUser
	}
	return nil
}

func (m *GroupOwnerTransferredTips) GetNewGroupOwner() *GroupMemberFullInfo {
	if m != nil {
		return m.NewGroupOwner
	}
	return nil
}

func (m *GroupOwnerTransferredTips) GetOperationTime() int64 {
	if m != nil {
		return m.OperationTime
	}
	return 0
}

// 	OnMemberKicked()
type MemberKickedTips struct {
	Group          *GroupInfo             `protobuf:"bytes,1,opt,name=group" json:"group,omitempty"`
	OpUser         *GroupMemberFullInfo   `protobuf:"bytes,2,opt,name=opUser" json:"opUser,omitempty"`
	KickedUserList []*GroupMemberFullInfo `protobuf:"bytes,3,rep,name=kickedUserList" json:"kickedUserList,omitempty"`
	OperationTime  int64                  `protobuf:"varint,4,opt,name=operationTime" json:"operationTime,omitempty"`
}

func (m *MemberKickedTips) Reset()                    { *m = MemberKickedTips{} }
func (m *MemberKickedTips) String() string            { return proto.CompactTextString(m) }
func (*MemberKickedTips) ProtoMessage()               {}
func (*MemberKickedTips) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{32} }

func (m *MemberKickedTips) GetGroup() *GroupInfo {
	if m != nil {
		return m.Group
	}
	return nil
}

func (m *MemberKickedTips) GetOpUser() *GroupMemberFullInfo {
	if m != nil {
		return m.OpUser
	}
	return nil
}

func (m *MemberKickedTips) GetKickedUserList() []*GroupMemberFullInfo {
	if m != nil {
		return m.KickedUserList
	}
	return nil
}

func (m *MemberKickedTips) GetOperationTime() int64 {
	if m != nil {
		return m.OperationTime
	}
	return 0
}

// 	OnMemberInvited()
type MemberInvitedTips struct {
	Group           *GroupInfo             `protobuf:"bytes,1,opt,name=group" json:"group,omitempty"`
	OpUser          *GroupMemberFullInfo   `protobuf:"bytes,2,opt,name=opUser" json:"opUser,omitempty"`
	InvitedUserList []*GroupMemberFullInfo `protobuf:"bytes,3,rep,name=invitedUserList" json:"invitedUserList,omitempty"`
	OperationTime   int64                  `protobuf:"varint,4,opt,name=operationTime" json:"operationTime,omitempty"`
}

func (m *MemberInvitedTips) Reset()                    { *m = MemberInvitedTips{} }
func (m *MemberInvitedTips) String() string            { return proto.CompactTextString(m) }
func (*MemberInvitedTips) ProtoMessage()               {}
func (*MemberInvitedTips) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{33} }

func (m *MemberInvitedTips) GetGroup() *GroupInfo {
	if m != nil {
		return m.Group
	}
	return nil
}

func (m *MemberInvitedTips) GetOpUser() *GroupMemberFullInfo {
	if m != nil {
		return m.OpUser
	}
	return nil
}

func (m *MemberInvitedTips) GetInvitedUserList() []*GroupMemberFullInfo {
	if m != nil {
		return m.InvitedUserList
	}
	return nil
}

func (m *MemberInvitedTips) GetOperationTime() int64 {
	if m != nil {
		return m.OperationTime
	}
	return 0
}

// Actively join the group
type MemberEnterTips struct {
	Group         *GroupInfo           `protobuf:"bytes,1,opt,name=group" json:"group,omitempty"`
	EntrantUser   *GroupMemberFullInfo `protobuf:"bytes,2,opt,name=entrantUser" json:"entrantUser,omitempty"`
	OperationTime int64                `protobuf:"varint,3,opt,name=operationTime" json:"operationTime,omitempty"`
}

func (m *MemberEnterTips) Reset()                    { *m = MemberEnterTips{} }
func (m *MemberEnterTips) String() string            { return proto.CompactTextString(m) }
func (*MemberEnterTips) ProtoMessage()               {}
func (*MemberEnterTips) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{34} }

func (m *MemberEnterTips) GetGroup() *GroupInfo {
	if m != nil {
		return m.Group
	}
	return nil
}

func (m *MemberEnterTips) GetEntrantUser() *GroupMemberFullInfo {
	if m != nil {
		return m.EntrantUser
	}
	return nil
}

func (m *MemberEnterTips) GetOperationTime() int64 {
	if m != nil {
		return m.OperationTime
	}
	return 0
}

type GroupDismissedTips struct {
	Group         *GroupInfo           `protobuf:"bytes,1,opt,name=group" json:"group,omitempty"`
	OpUser        *GroupMemberFullInfo `protobuf:"bytes,2,opt,name=opUser" json:"opUser,omitempty"`
	OperationTime int64                `protobuf:"varint,3,opt,name=operationTime" json:"operationTime,omitempty"`
}

func (m *GroupDismissedTips) Reset()                    { *m = GroupDismissedTips{} }
func (m *GroupDismissedTips) String() string            { return proto.CompactTextString(m) }
func (*GroupDismissedTips) ProtoMessage()               {}
func (*GroupDismissedTips) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{35} }

func (m *GroupDismissedTips) GetGroup() *GroupInfo {
	if m != nil {
		return m.Group
	}
	return nil
}

func (m *GroupDismissedTips) GetOpUser() *GroupMemberFullInfo {
	if m != nil {
		return m.OpUser
	}
	return nil
}

func (m *GroupDismissedTips) GetOperationTime() int64 {
	if m != nil {
		return m.OperationTime
	}
	return 0
}

type GroupMemberMutedTips struct {
	Group         *GroupInfo           `protobuf:"bytes,1,opt,name=group" json:"group,omitempty"`
	OpUser        *GroupMemberFullInfo `protobuf:"bytes,2,opt,name=opUser" json:"opUser,omitempty"`
	OperationTime int64                `protobuf:"varint,3,opt,name=operationTime" json:"operationTime,omitempty"`
	MutedUser     *GroupMemberFullInfo `protobuf:"bytes,4,opt,name=mutedUser" json:"mutedUser,omitempty"`
	MutedSeconds  uint32               `protobuf:"varint,5,opt,name=mutedSeconds" json:"mutedSeconds,omitempty"`
}

func (m *GroupMemberMutedTips) Reset()                    { *m = GroupMemberMutedTips{} }
func (m *GroupMemberMutedTips) String() string            { return proto.CompactTextString(m) }
func (*GroupMemberMutedTips) ProtoMessage()               {}
func (*GroupMemberMutedTips) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{36} }

func (m *GroupMemberMutedTips) GetGroup() *GroupInfo {
	if m != nil {
		return m.Group
	}
	return nil
}

func (m *GroupMemberMutedTips) GetOpUser() *GroupMemberFullInfo {
	if m != nil {
		return m.OpUser
	}
	return nil
}

func (m *GroupMemberMutedTips) GetOperationTime() int64 {
	if m != nil {
		return m.OperationTime
	}
	return 0
}

func (m *GroupMemberMutedTips) GetMutedUser() *GroupMemberFullInfo {
	if m != nil {
		return m.MutedUser
	}
	return nil
}

func (m *GroupMemberMutedTips) GetMutedSeconds() uint32 {
	if m != nil {
		return m.MutedSeconds
	}
	return 0
}

type GroupMemberCancelMutedTips struct {
	Group         *GroupInfo           `protobuf:"bytes,1,opt,name=group" json:"group,omitempty"`
	OpUser        *GroupMemberFullInfo `protobuf:"bytes,2,opt,name=opUser" json:"opUser,omitempty"`
	OperationTime int64                `protobuf:"varint,3,opt,name=operationTime" json:"operationTime,omitempty"`
	MutedUser     *GroupMemberFullInfo `protobuf:"bytes,4,opt,name=mutedUser" json:"mutedUser,omitempty"`
}

func (m *GroupMemberCancelMutedTips) Reset()                    { *m = GroupMemberCancelMutedTips{} }
func (m *GroupMemberCancelMutedTips) String() string            { return proto.CompactTextString(m) }
func (*GroupMemberCancelMutedTips) ProtoMessage()               {}
func (*GroupMemberCancelMutedTips) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{37} }

func (m *GroupMemberCancelMutedTips) GetGroup() *GroupInfo {
	if m != nil {
		return m.Group
	}
	return nil
}

func (m *GroupMemberCancelMutedTips) GetOpUser() *GroupMemberFullInfo {
	if m != nil {
		return m.OpUser
	}
	return nil
}

func (m *GroupMemberCancelMutedTips) GetOperationTime() int64 {
	if m != nil {
		return m.OperationTime
	}
	return 0
}

func (m *GroupMemberCancelMutedTips) GetMutedUser() *GroupMemberFullInfo {
	if m != nil {
		return m.MutedUser
	}
	return nil
}

type GroupMutedTips struct {
	Group         *GroupInfo           `protobuf:"bytes,1,opt,name=group" json:"group,omitempty"`
	OpUser        *GroupMemberFullInfo `protobuf:"bytes,2,opt,name=opUser" json:"opUser,omitempty"`
	OperationTime int64                `protobuf:"varint,3,opt,name=operationTime" json:"operationTime,omitempty"`
}

func (m *GroupMutedTips) Reset()                    { *m = GroupMutedTips{} }
func (m *GroupMutedTips) String() string            { return proto.CompactTextString(m) }
func (*GroupMutedTips) ProtoMessage()               {}
func (*GroupMutedTips) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{38} }

func (m *GroupMutedTips) GetGroup() *GroupInfo {
	if m != nil {
		return m.Group
	}
	return nil
}

func (m *GroupMutedTips) GetOpUser() *GroupMemberFullInfo {
	if m != nil {
		return m.OpUser
	}
	return nil
}

func (m *GroupMutedTips) GetOperationTime() int64 {
	if m != nil {
		return m.OperationTime
	}
	return 0
}

type GroupCancelMutedTips struct {
	Group         *GroupInfo           `protobuf:"bytes,1,opt,name=group" json:"group,omitempty"`
	OpUser        *GroupMemberFullInfo `protobuf:"bytes,2,opt,name=opUser" json:"opUser,omitempty"`
	OperationTime int64                `protobuf:"varint,3,opt,name=operationTime" json:"operationTime,omitempty"`
}

func (m *GroupCancelMutedTips) Reset()                    { *m = GroupCancelMutedTips{} }
func (m *GroupCancelMutedTips) String() string            { return proto.CompactTextString(m) }
func (*GroupCancelMutedTips) ProtoMessage()               {}
func (*GroupCancelMutedTips) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{39} }

func (m *GroupCancelMutedTips) GetGroup() *GroupInfo {
	if m != nil {
		return m.Group
	}
	return nil
}

func (m *GroupCancelMutedTips) GetOpUser() *GroupMemberFullInfo {
	if m != nil {
		return m.OpUser
	}
	return nil
}

func (m *GroupCancelMutedTips) GetOperationTime() int64 {
	if m != nil {
		return m.OperationTime
	}
	return 0
}

type GroupMemberInfoSetTips struct {
	Group         *GroupInfo           `protobuf:"bytes,1,opt,name=group" json:"group,omitempty"`
	OpUser        *GroupMemberFullInfo `protobuf:"bytes,2,opt,name=opUser" json:"opUser,omitempty"`
	OperationTime int64                `protobuf:"varint,3,opt,name=operationTime" json:"operationTime,omitempty"`
	ChangedUser   *GroupMemberFullInfo `protobuf:"bytes,4,opt,name=changedUser" json:"changedUser,omitempty"`
}

func (m *GroupMemberInfoSetTips) Reset()                    { *m = GroupMemberInfoSetTips{} }
func (m *GroupMemberInfoSetTips) String() string            { return proto.CompactTextString(m) }
func (*GroupMemberInfoSetTips) ProtoMessage()               {}
func (*GroupMemberInfoSetTips) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{40} }

func (m *GroupMemberInfoSetTips) GetGroup() *GroupInfo {
	if m != nil {
		return m.Group
	}
	return nil
}

func (m *GroupMemberInfoSetTips) GetOpUser() *GroupMemberFullInfo {
	if m != nil {
		return m.OpUser
	}
	return nil
}

func (m *GroupMemberInfoSetTips) GetOperationTime() int64 {
	if m != nil {
		return m.OperationTime
	}
	return 0
}

func (m *GroupMemberInfoSetTips) GetChangedUser() *GroupMemberFullInfo {
	if m != nil {
		return m.ChangedUser
	}
	return nil
}

type OrganizationChangedTips struct {
	OpUser        *UserInfo `protobuf:"bytes,2,opt,name=opUser" json:"opUser,omitempty"`
	OperationTime int64     `protobuf:"varint,3,opt,name=operationTime" json:"operationTime,omitempty"`
}

func (m *OrganizationChangedTips) Reset()                    { *m = OrganizationChangedTips{} }
func (m *OrganizationChangedTips) String() string            { return proto.CompactTextString(m) }
func (*OrganizationChangedTips) ProtoMessage()               {}
func (*OrganizationChangedTips) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{41} }

func (m *OrganizationChangedTips) GetOpUser() *UserInfo {
	if m != nil {
		return m.OpUser
	}
	return nil
}

func (m *OrganizationChangedTips) GetOperationTime() int64 {
	if m != nil {
		return m.OperationTime
	}
	return 0
}

type FriendApplication struct {
	AddTime    int64  `protobuf:"varint,1,opt,name=addTime" json:"addTime,omitempty"`
	AddSource  string `protobuf:"bytes,2,opt,name=addSource" json:"addSource,omitempty"`
	AddWording string `protobuf:"bytes,3,opt,name=addWording" json:"addWording,omitempty"`
}

func (m *FriendApplication) Reset()                    { *m = FriendApplication{} }
func (m *FriendApplication) String() string            { return proto.CompactTextString(m) }
func (*FriendApplication) ProtoMessage()               {}
func (*FriendApplication) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{42} }

func (m *FriendApplication) GetAddTime() int64 {
	if m != nil {
		return m.AddTime
	}
	return 0
}

func (m *FriendApplication) GetAddSource() string {
	if m != nil {
		return m.AddSource
	}
	return ""
}

func (m *FriendApplication) GetAddWording() string {
	if m != nil {
		return m.AddWording
	}
	return ""
}

type FromToUserID struct {
	FromUserID string `protobuf:"bytes,1,opt,name=fromUserID" json:"fromUserID,omitempty"`
	ToUserID   string `protobuf:"bytes,2,opt,name=toUserID" json:"toUserID,omitempty"`
}

func (m *FromToUserID) Reset()                    { *m = FromToUserID{} }
func (m *FromToUserID) String() string            { return proto.CompactTextString(m) }
func (*FromToUserID) ProtoMessage()               {}
func (*FromToUserID) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{43} }

func (m *FromToUserID) GetFromUserID() string {
	if m != nil {
		return m.FromUserID
	}
	return ""
}

func (m *FromToUserID) GetToUserID() string {
	if m != nil {
		return m.ToUserID
	}
	return ""
}

// FromUserID apply to add ToUserID
type FriendApplicationTips struct {
	FromToUserID *FromToUserID `protobuf:"bytes,1,opt,name=fromToUserID" json:"fromToUserID,omitempty"`
}

func (m *FriendApplicationTips) Reset()                    { *m = FriendApplicationTips{} }
func (m *FriendApplicationTips) String() string            { return proto.CompactTextString(m) }
func (*FriendApplicationTips) ProtoMessage()               {}
func (*FriendApplicationTips) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{44} }

func (m *FriendApplicationTips) GetFromToUserID() *FromToUserID {
	if m != nil {
		return m.FromToUserID
	}
	return nil
}

// FromUserID accept or reject ToUserID
type FriendApplicationApprovedTips struct {
	FromToUserID *FromToUserID `protobuf:"bytes,1,opt,name=fromToUserID" json:"fromToUserID,omitempty"`
	HandleMsg    string        `protobuf:"bytes,2,opt,name=handleMsg" json:"handleMsg,omitempty"`
}

func (m *FriendApplicationApprovedTips) Reset()                    { *m = FriendApplicationApprovedTips{} }
func (m *FriendApplicationApprovedTips) String() string            { return proto.CompactTextString(m) }
func (*FriendApplicationApprovedTips) ProtoMessage()               {}
func (*FriendApplicationApprovedTips) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{45} }

func (m *FriendApplicationApprovedTips) GetFromToUserID() *FromToUserID {
	if m != nil {
		return m.FromToUserID
	}
	return nil
}

func (m *FriendApplicationApprovedTips) GetHandleMsg() string {
	if m != nil {
		return m.HandleMsg
	}
	return ""
}

// FromUserID accept or reject ToUserID
type FriendApplicationRejectedTips struct {
	FromToUserID *FromToUserID `protobuf:"bytes,1,opt,name=fromToUserID" json:"fromToUserID,omitempty"`
	HandleMsg    string        `protobuf:"bytes,2,opt,name=handleMsg" json:"handleMsg,omitempty"`
}

func (m *FriendApplicationRejectedTips) Reset()                    { *m = FriendApplicationRejectedTips{} }
func (m *FriendApplicationRejectedTips) String() string            { return proto.CompactTextString(m) }
func (*FriendApplicationRejectedTips) ProtoMessage()               {}
func (*FriendApplicationRejectedTips) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{46} }

func (m *FriendApplicationRejectedTips) GetFromToUserID() *FromToUserID {
	if m != nil {
		return m.FromToUserID
	}
	return nil
}

func (m *FriendApplicationRejectedTips) GetHandleMsg() string {
	if m != nil {
		return m.HandleMsg
	}
	return ""
}

// FromUserID  Added a friend ToUserID
type FriendAddedTips struct {
	Friend        *FriendInfo     `protobuf:"bytes,1,opt,name=friend" json:"friend,omitempty"`
	OperationTime int64           `protobuf:"varint,2,opt,name=operationTime" json:"operationTime,omitempty"`
	OpUser        *PublicUserInfo `protobuf:"bytes,3,opt,name=opUser" json:"opUser,omitempty"`
}

func (m *FriendAddedTips) Reset()                    { *m = FriendAddedTips{} }
func (m *FriendAddedTips) String() string            { return proto.CompactTextString(m) }
func (*FriendAddedTips) ProtoMessage()               {}
func (*FriendAddedTips) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{47} }

func (m *FriendAddedTips) GetFriend() *FriendInfo {
	if m != nil {
		return m.Friend
	}
	return nil
}

func (m *FriendAddedTips) GetOperationTime() int64 {
	if m != nil {
		return m.OperationTime
	}
	return 0
}

func (m *FriendAddedTips) GetOpUser() *PublicUserInfo {
	if m != nil {
		return m.OpUser
	}
	return nil
}

// FromUserID  deleted a friend ToUserID
type FriendDeletedTips struct {
	FromToUserID *FromToUserID `protobuf:"bytes,1,opt,name=fromToUserID" json:"fromToUserID,omitempty"`
}

func (m *FriendDeletedTips) Reset()                    { *m = FriendDeletedTips{} }
func (m *FriendDeletedTips) String() string            { return proto.CompactTextString(m) }
func (*FriendDeletedTips) ProtoMessage()               {}
func (*FriendDeletedTips) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{48} }

func (m *FriendDeletedTips) GetFromToUserID() *FromToUserID {
	if m != nil {
		return m.FromToUserID
	}
	return nil
}

type BlackAddedTips struct {
	FromToUserID *FromToUserID `protobuf:"bytes,1,opt,name=fromToUserID" json:"fromToUserID,omitempty"`
}

func (m *BlackAddedTips) Reset()                    { *m = BlackAddedTips{} }
func (m *BlackAddedTips) String() string            { return proto.CompactTextString(m) }
func (*BlackAddedTips) ProtoMessage()               {}
func (*BlackAddedTips) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{49} }

func (m *BlackAddedTips) GetFromToUserID() *FromToUserID {
	if m != nil {
		return m.FromToUserID
	}
	return nil
}

type BlackDeletedTips struct {
	FromToUserID *FromToUserID `protobuf:"bytes,1,opt,name=fromToUserID" json:"fromToUserID,omitempty"`
}

func (m *BlackDeletedTips) Reset()                    { *m = BlackDeletedTips{} }
func (m *BlackDeletedTips) String() string            { return proto.CompactTextString(m) }
func (*BlackDeletedTips) ProtoMessage()               {}
func (*BlackDeletedTips) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{50} }

func (m *BlackDeletedTips) GetFromToUserID() *FromToUserID {
	if m != nil {
		return m.FromToUserID
	}
	return nil
}

type FriendInfoChangedTips struct {
	FromToUserID *FromToUserID `protobuf:"bytes,1,opt,name=fromToUserID" json:"fromToUserID,omitempty"`
}

func (m *FriendInfoChangedTips) Reset()                    { *m = FriendInfoChangedTips{} }
func (m *FriendInfoChangedTips) String() string            { return proto.CompactTextString(m) }
func (*FriendInfoChangedTips) ProtoMessage()               {}
func (*FriendInfoChangedTips) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{51} }

func (m *FriendInfoChangedTips) GetFromToUserID() *FromToUserID {
	if m != nil {
		return m.FromToUserID
	}
	return nil
}

// ////////////////////user/////////////////////
type UserInfoUpdatedTips struct {
	UserID string `protobuf:"bytes,1,opt,name=userID" json:"userID,omitempty"`
}

func (m *UserInfoUpdatedTips) Reset()                    { *m = UserInfoUpdatedTips{} }
func (m *UserInfoUpdatedTips) String() string            { return proto.CompactTextString(m) }
func (*UserInfoUpdatedTips) ProtoMessage()               {}
func (*UserInfoUpdatedTips) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{52} }

func (m *UserInfoUpdatedTips) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

// ////////////////////conversation/////////////////////
type ConversationUpdateTips struct {
	UserID                string   `protobuf:"bytes,1,opt,name=UserID,json=userID" json:"UserID,omitempty"`
	ConversationIDList    []string `protobuf:"bytes,2,rep,name=conversationIDList" json:"conversationIDList,omitempty"`
	UpdateUnreadCountTime int64    `protobuf:"varint,3,opt,name=updateUnreadCountTime" json:"updateUnreadCountTime,omitempty"`
}

func (m *ConversationUpdateTips) Reset()                    { *m = ConversationUpdateTips{} }
func (m *ConversationUpdateTips) String() string            { return proto.CompactTextString(m) }
func (*ConversationUpdateTips) ProtoMessage()               {}
func (*ConversationUpdateTips) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{53} }

func (m *ConversationUpdateTips) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *ConversationUpdateTips) GetConversationIDList() []string {
	if m != nil {
		return m.ConversationIDList
	}
	return nil
}

func (m *ConversationUpdateTips) GetUpdateUnreadCountTime() int64 {
	if m != nil {
		return m.UpdateUnreadCountTime
	}
	return 0
}

type ConversationSetPrivateTips struct {
	RecvID    string `protobuf:"bytes,1,opt,name=recvID" json:"recvID,omitempty"`
	SendID    string `protobuf:"bytes,2,opt,name=sendID" json:"sendID,omitempty"`
	IsPrivate bool   `protobuf:"varint,3,opt,name=isPrivate" json:"isPrivate,omitempty"`
}

func (m *ConversationSetPrivateTips) Reset()                    { *m = ConversationSetPrivateTips{} }
func (m *ConversationSetPrivateTips) String() string            { return proto.CompactTextString(m) }
func (*ConversationSetPrivateTips) ProtoMessage()               {}
func (*ConversationSetPrivateTips) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{54} }

func (m *ConversationSetPrivateTips) GetRecvID() string {
	if m != nil {
		return m.RecvID
	}
	return ""
}

func (m *ConversationSetPrivateTips) GetSendID() string {
	if m != nil {
		return m.SendID
	}
	return ""
}

func (m *ConversationSetPrivateTips) GetIsPrivate() bool {
	if m != nil {
		return m.IsPrivate
	}
	return false
}

// //////////////////message///////////////////////
type DeleteMessageTips struct {
	OpUserID string   `protobuf:"bytes,1,opt,name=opUserID" json:"opUserID,omitempty"`
	UserID   string   `protobuf:"bytes,2,opt,name=userID" json:"userID,omitempty"`
	SeqList  []uint32 `protobuf:"varint,3,rep,packed,name=seqList" json:"seqList,omitempty"`
}

func (m *DeleteMessageTips) Reset()                    { *m = DeleteMessageTips{} }
func (m *DeleteMessageTips) String() string            { return proto.CompactTextString(m) }
func (*DeleteMessageTips) ProtoMessage()               {}
func (*DeleteMessageTips) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{55} }

func (m *DeleteMessageTips) GetOpUserID() string {
	if m != nil {
		return m.OpUserID
	}
	return ""
}

func (m *DeleteMessageTips) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *DeleteMessageTips) GetSeqList() []uint32 {
	if m != nil {
		return m.SeqList
	}
	return nil
}

// /cms
type RequestPagination struct {
	PageNumber int32 `protobuf:"varint,1,opt,name=pageNumber" json:"pageNumber,omitempty"`
	ShowNumber int32 `protobuf:"varint,2,opt,name=showNumber" json:"showNumber,omitempty"`
}

func (m *RequestPagination) Reset()                    { *m = RequestPagination{} }
func (m *RequestPagination) String() string            { return proto.CompactTextString(m) }
func (*RequestPagination) ProtoMessage()               {}
func (*RequestPagination) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{56} }

func (m *RequestPagination) GetPageNumber() int32 {
	if m != nil {
		return m.PageNumber
	}
	return 0
}

func (m *RequestPagination) GetShowNumber() int32 {
	if m != nil {
		return m.ShowNumber
	}
	return 0
}

type ResponsePagination struct {
	CurrentPage int32 `protobuf:"varint,5,opt,name=CurrentPage,json=currentPage" json:"CurrentPage,omitempty"`
	ShowNumber  int32 `protobuf:"varint,6,opt,name=ShowNumber,json=showNumber" json:"ShowNumber,omitempty"`
}

func (m *ResponsePagination) Reset()                    { *m = ResponsePagination{} }
func (m *ResponsePagination) String() string            { return proto.CompactTextString(m) }
func (*ResponsePagination) ProtoMessage()               {}
func (*ResponsePagination) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{57} }

func (m *ResponsePagination) GetCurrentPage() int32 {
	if m != nil {
		return m.CurrentPage
	}
	return 0
}

func (m *ResponsePagination) GetShowNumber() int32 {
	if m != nil {
		return m.ShowNumber
	}
	return 0
}

// /////////////////signal//////////////
type SignalReq struct {
	// Types that are valid to be assigned to Payload:
	//	*SignalReq_Invite
	//	*SignalReq_InviteInGroup
	//	*SignalReq_Cancel
	//	*SignalReq_Accept
	//	*SignalReq_HungUp
	//	*SignalReq_Reject
	//	*SignalReq_GetRoomByGroupID
	//	*SignalReq_OnRoomParticipantConnectedReq
	//	*SignalReq_OnRoomParticipantDisconnectedReq
	//	*SignalReq_GetTokenByRoomID
	Payload isSignalReq_Payload `protobuf_oneof:"payload"`
}

func (m *SignalReq) Reset()                    { *m = SignalReq{} }
func (m *SignalReq) String() string            { return proto.CompactTextString(m) }
func (*SignalReq) ProtoMessage()               {}
func (*SignalReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{58} }

type isSignalReq_Payload interface{ isSignalReq_Payload() }

type SignalReq_Invite struct {
	Invite *SignalInviteReq `protobuf:"bytes,1,opt,name=invite,oneof"`
}
type SignalReq_InviteInGroup struct {
	InviteInGroup *SignalInviteInGroupReq `protobuf:"bytes,2,opt,name=inviteInGroup,oneof"`
}
type SignalReq_Cancel struct {
	Cancel *SignalCancelReq `protobuf:"bytes,3,opt,name=cancel,oneof"`
}
type SignalReq_Accept struct {
	Accept *SignalAcceptReq `protobuf:"bytes,4,opt,name=accept,oneof"`
}
type SignalReq_HungUp struct {
	HungUp *SignalHungUpReq `protobuf:"bytes,5,opt,name=hungUp,oneof"`
}
type SignalReq_Reject struct {
	Reject *SignalRejectReq `protobuf:"bytes,6,opt,name=reject,oneof"`
}
type SignalReq_GetRoomByGroupID struct {
	GetRoomByGroupID *SignalGetRoomByGroupIDReq `protobuf:"bytes,7,opt,name=getRoomByGroupID,oneof"`
}
type SignalReq_OnRoomParticipantConnectedReq struct {
	OnRoomParticipantConnectedReq *SignalOnRoomParticipantConnectedReq `protobuf:"bytes,8,opt,name=onRoomParticipantConnectedReq,oneof"`
}
type SignalReq_OnRoomParticipantDisconnectedReq struct {
	OnRoomParticipantDisconnectedReq *SignalOnRoomParticipantDisconnectedReq `protobuf:"bytes,9,opt,name=onRoomParticipantDisconnectedReq,oneof"`
}
type SignalReq_GetTokenByRoomID struct {
	GetTokenByRoomID *SignalGetTokenByRoomIDReq `protobuf:"bytes,10,opt,name=getTokenByRoomID,oneof"`
}

func (*SignalReq_Invite) isSignalReq_Payload()                           {}
func (*SignalReq_InviteInGroup) isSignalReq_Payload()                    {}
func (*SignalReq_Cancel) isSignalReq_Payload()                           {}
func (*SignalReq_Accept) isSignalReq_Payload()                           {}
func (*SignalReq_HungUp) isSignalReq_Payload()                           {}
func (*SignalReq_Reject) isSignalReq_Payload()                           {}
func (*SignalReq_GetRoomByGroupID) isSignalReq_Payload()                 {}
func (*SignalReq_OnRoomParticipantConnectedReq) isSignalReq_Payload()    {}
func (*SignalReq_OnRoomParticipantDisconnectedReq) isSignalReq_Payload() {}
func (*SignalReq_GetTokenByRoomID) isSignalReq_Payload()                 {}

func (m *SignalReq) GetPayload() isSignalReq_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *SignalReq) GetInvite() *SignalInviteReq {
	if x, ok := m.GetPayload().(*SignalReq_Invite); ok {
		return x.Invite
	}
	return nil
}

func (m *SignalReq) GetInviteInGroup() *SignalInviteInGroupReq {
	if x, ok := m.GetPayload().(*SignalReq_InviteInGroup); ok {
		return x.InviteInGroup
	}
	return nil
}

func (m *SignalReq) GetCancel() *SignalCancelReq {
	if x, ok := m.GetPayload().(*SignalReq_Cancel); ok {
		return x.Cancel
	}
	return nil
}

func (m *SignalReq) GetAccept() *SignalAcceptReq {
	if x, ok := m.GetPayload().(*SignalReq_Accept); ok {
		return x.Accept
	}
	return nil
}

func (m *SignalReq) GetHungUp() *SignalHungUpReq {
	if x, ok := m.GetPayload().(*SignalReq_HungUp); ok {
		return x.HungUp
	}
	return nil
}

func (m *SignalReq) GetReject() *SignalRejectReq {
	if x, ok := m.GetPayload().(*SignalReq_Reject); ok {
		return x.Reject
	}
	return nil
}

func (m *SignalReq) GetGetRoomByGroupID() *SignalGetRoomByGroupIDReq {
	if x, ok := m.GetPayload().(*SignalReq_GetRoomByGroupID); ok {
		return x.GetRoomByGroupID
	}
	return nil
}

func (m *SignalReq) GetOnRoomParticipantConnectedReq() *SignalOnRoomParticipantConnectedReq {
	if x, ok := m.GetPayload().(*SignalReq_OnRoomParticipantConnectedReq); ok {
		return x.OnRoomParticipantConnectedReq
	}
	return nil
}

func (m *SignalReq) GetOnRoomParticipantDisconnectedReq() *SignalOnRoomParticipantDisconnectedReq {
	if x, ok := m.GetPayload().(*SignalReq_OnRoomParticipantDisconnectedReq); ok {
		return x.OnRoomParticipantDisconnectedReq
	}
	return nil
}

func (m *SignalReq) GetGetTokenByRoomID() *SignalGetTokenByRoomIDReq {
	if x, ok := m.GetPayload().(*SignalReq_GetTokenByRoomID); ok {
		return x.GetTokenByRoomID
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*SignalReq) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _SignalReq_OneofMarshaler, _SignalReq_OneofUnmarshaler, _SignalReq_OneofSizer, []interface{}{
		(*SignalReq_Invite)(nil),
		(*SignalReq_InviteInGroup)(nil),
		(*SignalReq_Cancel)(nil),
		(*SignalReq_Accept)(nil),
		(*SignalReq_HungUp)(nil),
		(*SignalReq_Reject)(nil),
		(*SignalReq_GetRoomByGroupID)(nil),
		(*SignalReq_OnRoomParticipantConnectedReq)(nil),
		(*SignalReq_OnRoomParticipantDisconnectedReq)(nil),
		(*SignalReq_GetTokenByRoomID)(nil),
	}
}

func _SignalReq_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*SignalReq)
	// payload
	switch x := m.Payload.(type) {
	case *SignalReq_Invite:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Invite); err != nil {
			return err
		}
	case *SignalReq_InviteInGroup:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.InviteInGroup); err != nil {
			return err
		}
	case *SignalReq_Cancel:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Cancel); err != nil {
			return err
		}
	case *SignalReq_Accept:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Accept); err != nil {
			return err
		}
	case *SignalReq_HungUp:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.HungUp); err != nil {
			return err
		}
	case *SignalReq_Reject:
		b.EncodeVarint(6<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Reject); err != nil {
			return err
		}
	case *SignalReq_GetRoomByGroupID:
		b.EncodeVarint(7<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.GetRoomByGroupID); err != nil {
			return err
		}
	case *SignalReq_OnRoomParticipantConnectedReq:
		b.EncodeVarint(8<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.OnRoomParticipantConnectedReq); err != nil {
			return err
		}
	case *SignalReq_OnRoomParticipantDisconnectedReq:
		b.EncodeVarint(9<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.OnRoomParticipantDisconnectedReq); err != nil {
			return err
		}
	case *SignalReq_GetTokenByRoomID:
		b.EncodeVarint(10<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.GetTokenByRoomID); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("SignalReq.Payload has unexpected type %T", x)
	}
	return nil
}

func _SignalReq_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*SignalReq)
	switch tag {
	case 1: // payload.invite
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SignalInviteReq)
		err := b.DecodeMessage(msg)
		m.Payload = &SignalReq_Invite{msg}
		return true, err
	case 2: // payload.inviteInGroup
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SignalInviteInGroupReq)
		err := b.DecodeMessage(msg)
		m.Payload = &SignalReq_InviteInGroup{msg}
		return true, err
	case 3: // payload.cancel
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SignalCancelReq)
		err := b.DecodeMessage(msg)
		m.Payload = &SignalReq_Cancel{msg}
		return true, err
	case 4: // payload.accept
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SignalAcceptReq)
		err := b.DecodeMessage(msg)
		m.Payload = &SignalReq_Accept{msg}
		return true, err
	case 5: // payload.hungUp
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SignalHungUpReq)
		err := b.DecodeMessage(msg)
		m.Payload = &SignalReq_HungUp{msg}
		return true, err
	case 6: // payload.reject
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SignalRejectReq)
		err := b.DecodeMessage(msg)
		m.Payload = &SignalReq_Reject{msg}
		return true, err
	case 7: // payload.getRoomByGroupID
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SignalGetRoomByGroupIDReq)
		err := b.DecodeMessage(msg)
		m.Payload = &SignalReq_GetRoomByGroupID{msg}
		return true, err
	case 8: // payload.onRoomParticipantConnectedReq
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SignalOnRoomParticipantConnectedReq)
		err := b.DecodeMessage(msg)
		m.Payload = &SignalReq_OnRoomParticipantConnectedReq{msg}
		return true, err
	case 9: // payload.onRoomParticipantDisconnectedReq
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SignalOnRoomParticipantDisconnectedReq)
		err := b.DecodeMessage(msg)
		m.Payload = &SignalReq_OnRoomParticipantDisconnectedReq{msg}
		return true, err
	case 10: // payload.getTokenByRoomID
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SignalGetTokenByRoomIDReq)
		err := b.DecodeMessage(msg)
		m.Payload = &SignalReq_GetTokenByRoomID{msg}
		return true, err
	default:
		return false, nil
	}
}

func _SignalReq_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*SignalReq)
	// payload
	switch x := m.Payload.(type) {
	case *SignalReq_Invite:
		s := proto.Size(x.Invite)
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *SignalReq_InviteInGroup:
		s := proto.Size(x.InviteInGroup)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *SignalReq_Cancel:
		s := proto.Size(x.Cancel)
		n += proto.SizeVarint(3<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *SignalReq_Accept:
		s := proto.Size(x.Accept)
		n += proto.SizeVarint(4<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *SignalReq_HungUp:
		s := proto.Size(x.HungUp)
		n += proto.SizeVarint(5<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *SignalReq_Reject:
		s := proto.Size(x.Reject)
		n += proto.SizeVarint(6<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *SignalReq_GetRoomByGroupID:
		s := proto.Size(x.GetRoomByGroupID)
		n += proto.SizeVarint(7<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *SignalReq_OnRoomParticipantConnectedReq:
		s := proto.Size(x.OnRoomParticipantConnectedReq)
		n += proto.SizeVarint(8<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *SignalReq_OnRoomParticipantDisconnectedReq:
		s := proto.Size(x.OnRoomParticipantDisconnectedReq)
		n += proto.SizeVarint(9<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *SignalReq_GetTokenByRoomID:
		s := proto.Size(x.GetTokenByRoomID)
		n += proto.SizeVarint(10<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type SignalResp struct {
	// Types that are valid to be assigned to Payload:
	//	*SignalResp_Invite
	//	*SignalResp_InviteInGroup
	//	*SignalResp_Cancel
	//	*SignalResp_Accept
	//	*SignalResp_HungUp
	//	*SignalResp_Reject
	//	*SignalResp_GetRoomByGroupID
	//	*SignalResp_GetTokenByRoomID
	Payload isSignalResp_Payload `protobuf_oneof:"payload"`
}

func (m *SignalResp) Reset()                    { *m = SignalResp{} }
func (m *SignalResp) String() string            { return proto.CompactTextString(m) }
func (*SignalResp) ProtoMessage()               {}
func (*SignalResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{59} }

type isSignalResp_Payload interface{ isSignalResp_Payload() }

type SignalResp_Invite struct {
	Invite *SignalInviteReply `protobuf:"bytes,1,opt,name=invite,oneof"`
}
type SignalResp_InviteInGroup struct {
	InviteInGroup *SignalInviteInGroupReply `protobuf:"bytes,2,opt,name=inviteInGroup,oneof"`
}
type SignalResp_Cancel struct {
	Cancel *SignalCancelReply `protobuf:"bytes,3,opt,name=cancel,oneof"`
}
type SignalResp_Accept struct {
	Accept *SignalAcceptReply `protobuf:"bytes,4,opt,name=accept,oneof"`
}
type SignalResp_HungUp struct {
	HungUp *SignalHungUpReply `protobuf:"bytes,5,opt,name=hungUp,oneof"`
}
type SignalResp_Reject struct {
	Reject *SignalRejectReply `protobuf:"bytes,6,opt,name=reject,oneof"`
}
type SignalResp_GetRoomByGroupID struct {
	GetRoomByGroupID *SignalGetRoomByGroupIDReply `protobuf:"bytes,7,opt,name=getRoomByGroupID,oneof"`
}
type SignalResp_GetTokenByRoomID struct {
	GetTokenByRoomID *SignalGetTokenByRoomIDReply `protobuf:"bytes,8,opt,name=getTokenByRoomID,oneof"`
}

func (*SignalResp_Invite) isSignalResp_Payload()           {}
func (*SignalResp_InviteInGroup) isSignalResp_Payload()    {}
func (*SignalResp_Cancel) isSignalResp_Payload()           {}
func (*SignalResp_Accept) isSignalResp_Payload()           {}
func (*SignalResp_HungUp) isSignalResp_Payload()           {}
func (*SignalResp_Reject) isSignalResp_Payload()           {}
func (*SignalResp_GetRoomByGroupID) isSignalResp_Payload() {}
func (*SignalResp_GetTokenByRoomID) isSignalResp_Payload() {}

func (m *SignalResp) GetPayload() isSignalResp_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *SignalResp) GetInvite() *SignalInviteReply {
	if x, ok := m.GetPayload().(*SignalResp_Invite); ok {
		return x.Invite
	}
	return nil
}

func (m *SignalResp) GetInviteInGroup() *SignalInviteInGroupReply {
	if x, ok := m.GetPayload().(*SignalResp_InviteInGroup); ok {
		return x.InviteInGroup
	}
	return nil
}

func (m *SignalResp) GetCancel() *SignalCancelReply {
	if x, ok := m.GetPayload().(*SignalResp_Cancel); ok {
		return x.Cancel
	}
	return nil
}

func (m *SignalResp) GetAccept() *SignalAcceptReply {
	if x, ok := m.GetPayload().(*SignalResp_Accept); ok {
		return x.Accept
	}
	return nil
}

func (m *SignalResp) GetHungUp() *SignalHungUpReply {
	if x, ok := m.GetPayload().(*SignalResp_HungUp); ok {
		return x.HungUp
	}
	return nil
}

func (m *SignalResp) GetReject() *SignalRejectReply {
	if x, ok := m.GetPayload().(*SignalResp_Reject); ok {
		return x.Reject
	}
	return nil
}

func (m *SignalResp) GetGetRoomByGroupID() *SignalGetRoomByGroupIDReply {
	if x, ok := m.GetPayload().(*SignalResp_GetRoomByGroupID); ok {
		return x.GetRoomByGroupID
	}
	return nil
}

func (m *SignalResp) GetGetTokenByRoomID() *SignalGetTokenByRoomIDReply {
	if x, ok := m.GetPayload().(*SignalResp_GetTokenByRoomID); ok {
		return x.GetTokenByRoomID
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*SignalResp) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _SignalResp_OneofMarshaler, _SignalResp_OneofUnmarshaler, _SignalResp_OneofSizer, []interface{}{
		(*SignalResp_Invite)(nil),
		(*SignalResp_InviteInGroup)(nil),
		(*SignalResp_Cancel)(nil),
		(*SignalResp_Accept)(nil),
		(*SignalResp_HungUp)(nil),
		(*SignalResp_Reject)(nil),
		(*SignalResp_GetRoomByGroupID)(nil),
		(*SignalResp_GetTokenByRoomID)(nil),
	}
}

func _SignalResp_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*SignalResp)
	// payload
	switch x := m.Payload.(type) {
	case *SignalResp_Invite:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Invite); err != nil {
			return err
		}
	case *SignalResp_InviteInGroup:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.InviteInGroup); err != nil {
			return err
		}
	case *SignalResp_Cancel:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Cancel); err != nil {
			return err
		}
	case *SignalResp_Accept:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Accept); err != nil {
			return err
		}
	case *SignalResp_HungUp:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.HungUp); err != nil {
			return err
		}
	case *SignalResp_Reject:
		b.EncodeVarint(6<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Reject); err != nil {
			return err
		}
	case *SignalResp_GetRoomByGroupID:
		b.EncodeVarint(7<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.GetRoomByGroupID); err != nil {
			return err
		}
	case *SignalResp_GetTokenByRoomID:
		b.EncodeVarint(8<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.GetTokenByRoomID); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("SignalResp.Payload has unexpected type %T", x)
	}
	return nil
}

func _SignalResp_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*SignalResp)
	switch tag {
	case 1: // payload.invite
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SignalInviteReply)
		err := b.DecodeMessage(msg)
		m.Payload = &SignalResp_Invite{msg}
		return true, err
	case 2: // payload.inviteInGroup
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SignalInviteInGroupReply)
		err := b.DecodeMessage(msg)
		m.Payload = &SignalResp_InviteInGroup{msg}
		return true, err
	case 3: // payload.cancel
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SignalCancelReply)
		err := b.DecodeMessage(msg)
		m.Payload = &SignalResp_Cancel{msg}
		return true, err
	case 4: // payload.accept
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SignalAcceptReply)
		err := b.DecodeMessage(msg)
		m.Payload = &SignalResp_Accept{msg}
		return true, err
	case 5: // payload.hungUp
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SignalHungUpReply)
		err := b.DecodeMessage(msg)
		m.Payload = &SignalResp_HungUp{msg}
		return true, err
	case 6: // payload.reject
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SignalRejectReply)
		err := b.DecodeMessage(msg)
		m.Payload = &SignalResp_Reject{msg}
		return true, err
	case 7: // payload.getRoomByGroupID
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SignalGetRoomByGroupIDReply)
		err := b.DecodeMessage(msg)
		m.Payload = &SignalResp_GetRoomByGroupID{msg}
		return true, err
	case 8: // payload.getTokenByRoomID
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SignalGetTokenByRoomIDReply)
		err := b.DecodeMessage(msg)
		m.Payload = &SignalResp_GetTokenByRoomID{msg}
		return true, err
	default:
		return false, nil
	}
}

func _SignalResp_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*SignalResp)
	// payload
	switch x := m.Payload.(type) {
	case *SignalResp_Invite:
		s := proto.Size(x.Invite)
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *SignalResp_InviteInGroup:
		s := proto.Size(x.InviteInGroup)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *SignalResp_Cancel:
		s := proto.Size(x.Cancel)
		n += proto.SizeVarint(3<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *SignalResp_Accept:
		s := proto.Size(x.Accept)
		n += proto.SizeVarint(4<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *SignalResp_HungUp:
		s := proto.Size(x.HungUp)
		n += proto.SizeVarint(5<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *SignalResp_Reject:
		s := proto.Size(x.Reject)
		n += proto.SizeVarint(6<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *SignalResp_GetRoomByGroupID:
		s := proto.Size(x.GetRoomByGroupID)
		n += proto.SizeVarint(7<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *SignalResp_GetTokenByRoomID:
		s := proto.Size(x.GetTokenByRoomID)
		n += proto.SizeVarint(8<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type InvitationInfo struct {
	InviterUserID      string   `protobuf:"bytes,1,opt,name=inviterUserID" json:"inviterUserID,omitempty"`
	InviteeUserIDList  []string `protobuf:"bytes,2,rep,name=inviteeUserIDList" json:"inviteeUserIDList,omitempty"`
	CustomData         string   `protobuf:"bytes,3,opt,name=customData" json:"customData,omitempty"`
	GroupID            string   `protobuf:"bytes,4,opt,name=groupID" json:"groupID,omitempty"`
	RoomID             string   `protobuf:"bytes,5,opt,name=roomID" json:"roomID,omitempty"`
	Timeout            int32    `protobuf:"varint,6,opt,name=timeout" json:"timeout,omitempty"`
	MediaType          string   `protobuf:"bytes,7,opt,name=mediaType" json:"mediaType,omitempty"`
	PlatformID         int32    `protobuf:"varint,8,opt,name=platformID" json:"platformID,omitempty"`
	SessionType        int32    `protobuf:"varint,9,opt,name=sessionType" json:"sessionType,omitempty"`
	InitiateTime       int32    `protobuf:"varint,10,opt,name=initiateTime" json:"initiateTime,omitempty"`
	BusyLineUserIDList []string `protobuf:"bytes,11,rep,name=busyLineUserIDList" json:"busyLineUserIDList,omitempty"`
}

func (m *InvitationInfo) Reset()                    { *m = InvitationInfo{} }
func (m *InvitationInfo) String() string            { return proto.CompactTextString(m) }
func (*InvitationInfo) ProtoMessage()               {}
func (*InvitationInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{60} }

func (m *InvitationInfo) GetInviterUserID() string {
	if m != nil {
		return m.InviterUserID
	}
	return ""
}

func (m *InvitationInfo) GetInviteeUserIDList() []string {
	if m != nil {
		return m.InviteeUserIDList
	}
	return nil
}

func (m *InvitationInfo) GetCustomData() string {
	if m != nil {
		return m.CustomData
	}
	return ""
}

func (m *InvitationInfo) GetGroupID() string {
	if m != nil {
		return m.GroupID
	}
	return ""
}

func (m *InvitationInfo) GetRoomID() string {
	if m != nil {
		return m.RoomID
	}
	return ""
}

func (m *InvitationInfo) GetTimeout() int32 {
	if m != nil {
		return m.Timeout
	}
	return 0
}

func (m *InvitationInfo) GetMediaType() string {
	if m != nil {
		return m.MediaType
	}
	return ""
}

func (m *InvitationInfo) GetPlatformID() int32 {
	if m != nil {
		return m.PlatformID
	}
	return 0
}

func (m *InvitationInfo) GetSessionType() int32 {
	if m != nil {
		return m.SessionType
	}
	return 0
}

func (m *InvitationInfo) GetInitiateTime() int32 {
	if m != nil {
		return m.InitiateTime
	}
	return 0
}

func (m *InvitationInfo) GetBusyLineUserIDList() []string {
	if m != nil {
		return m.BusyLineUserIDList
	}
	return nil
}

type ParticipantMetaData struct {
	GroupInfo       *GroupInfo           `protobuf:"bytes,1,opt,name=groupInfo" json:"groupInfo,omitempty"`
	GroupMemberInfo *GroupMemberFullInfo `protobuf:"bytes,2,opt,name=groupMemberInfo" json:"groupMemberInfo,omitempty"`
	UserInfo        *PublicUserInfo      `protobuf:"bytes,3,opt,name=userInfo" json:"userInfo,omitempty"`
}

func (m *ParticipantMetaData) Reset()                    { *m = ParticipantMetaData{} }
func (m *ParticipantMetaData) String() string            { return proto.CompactTextString(m) }
func (*ParticipantMetaData) ProtoMessage()               {}
func (*ParticipantMetaData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{61} }

func (m *ParticipantMetaData) GetGroupInfo() *GroupInfo {
	if m != nil {
		return m.GroupInfo
	}
	return nil
}

func (m *ParticipantMetaData) GetGroupMemberInfo() *GroupMemberFullInfo {
	if m != nil {
		return m.GroupMemberInfo
	}
	return nil
}

func (m *ParticipantMetaData) GetUserInfo() *PublicUserInfo {
	if m != nil {
		return m.UserInfo
	}
	return nil
}

type SignalInviteReq struct {
	OpUserID        string               `protobuf:"bytes,1,opt,name=opUserID" json:"opUserID,omitempty"`
	Invitation      *InvitationInfo      `protobuf:"bytes,2,opt,name=invitation" json:"invitation,omitempty"`
	OfflinePushInfo *OfflinePushInfo     `protobuf:"bytes,3,opt,name=offlinePushInfo" json:"offlinePushInfo,omitempty"`
	Participant     *ParticipantMetaData `protobuf:"bytes,4,opt,name=participant" json:"participant,omitempty"`
}

func (m *SignalInviteReq) Reset()                    { *m = SignalInviteReq{} }
func (m *SignalInviteReq) String() string            { return proto.CompactTextString(m) }
func (*SignalInviteReq) ProtoMessage()               {}
func (*SignalInviteReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{62} }

func (m *SignalInviteReq) GetOpUserID() string {
	if m != nil {
		return m.OpUserID
	}
	return ""
}

func (m *SignalInviteReq) GetInvitation() *InvitationInfo {
	if m != nil {
		return m.Invitation
	}
	return nil
}

func (m *SignalInviteReq) GetOfflinePushInfo() *OfflinePushInfo {
	if m != nil {
		return m.OfflinePushInfo
	}
	return nil
}

func (m *SignalInviteReq) GetParticipant() *ParticipantMetaData {
	if m != nil {
		return m.Participant
	}
	return nil
}

type SignalInviteReply struct {
	Token              string   `protobuf:"bytes,1,opt,name=token" json:"token,omitempty"`
	RoomID             string   `protobuf:"bytes,2,opt,name=roomID" json:"roomID,omitempty"`
	LiveURL            string   `protobuf:"bytes,3,opt,name=liveURL" json:"liveURL,omitempty"`
	BusyLineUserIDList []string `protobuf:"bytes,4,rep,name=busyLineUserIDList" json:"busyLineUserIDList,omitempty"`
}

func (m *SignalInviteReply) Reset()                    { *m = SignalInviteReply{} }
func (m *SignalInviteReply) String() string            { return proto.CompactTextString(m) }
func (*SignalInviteReply) ProtoMessage()               {}
func (*SignalInviteReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{63} }

func (m *SignalInviteReply) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *SignalInviteReply) GetRoomID() string {
	if m != nil {
		return m.RoomID
	}
	return ""
}

func (m *SignalInviteReply) GetLiveURL() string {
	if m != nil {
		return m.LiveURL
	}
	return ""
}

func (m *SignalInviteReply) GetBusyLineUserIDList() []string {
	if m != nil {
		return m.BusyLineUserIDList
	}
	return nil
}

type SignalInviteInGroupReq struct {
	OpUserID        string               `protobuf:"bytes,1,opt,name=opUserID" json:"opUserID,omitempty"`
	Invitation      *InvitationInfo      `protobuf:"bytes,2,opt,name=invitation" json:"invitation,omitempty"`
	OfflinePushInfo *OfflinePushInfo     `protobuf:"bytes,3,opt,name=offlinePushInfo" json:"offlinePushInfo,omitempty"`
	Participant     *ParticipantMetaData `protobuf:"bytes,4,opt,name=participant" json:"participant,omitempty"`
}

func (m *SignalInviteInGroupReq) Reset()                    { *m = SignalInviteInGroupReq{} }
func (m *SignalInviteInGroupReq) String() string            { return proto.CompactTextString(m) }
func (*SignalInviteInGroupReq) ProtoMessage()               {}
func (*SignalInviteInGroupReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{64} }

func (m *SignalInviteInGroupReq) GetOpUserID() string {
	if m != nil {
		return m.OpUserID
	}
	return ""
}

func (m *SignalInviteInGroupReq) GetInvitation() *InvitationInfo {
	if m != nil {
		return m.Invitation
	}
	return nil
}

func (m *SignalInviteInGroupReq) GetOfflinePushInfo() *OfflinePushInfo {
	if m != nil {
		return m.OfflinePushInfo
	}
	return nil
}

func (m *SignalInviteInGroupReq) GetParticipant() *ParticipantMetaData {
	if m != nil {
		return m.Participant
	}
	return nil
}

type SignalInviteInGroupReply struct {
	Token              string   `protobuf:"bytes,1,opt,name=token" json:"token,omitempty"`
	RoomID             string   `protobuf:"bytes,2,opt,name=roomID" json:"roomID,omitempty"`
	LiveURL            string   `protobuf:"bytes,3,opt,name=liveURL" json:"liveURL,omitempty"`
	BusyLineUserIDList []string `protobuf:"bytes,4,rep,name=busyLineUserIDList" json:"busyLineUserIDList,omitempty"`
}

func (m *SignalInviteInGroupReply) Reset()                    { *m = SignalInviteInGroupReply{} }
func (m *SignalInviteInGroupReply) String() string            { return proto.CompactTextString(m) }
func (*SignalInviteInGroupReply) ProtoMessage()               {}
func (*SignalInviteInGroupReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{65} }

func (m *SignalInviteInGroupReply) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *SignalInviteInGroupReply) GetRoomID() string {
	if m != nil {
		return m.RoomID
	}
	return ""
}

func (m *SignalInviteInGroupReply) GetLiveURL() string {
	if m != nil {
		return m.LiveURL
	}
	return ""
}

func (m *SignalInviteInGroupReply) GetBusyLineUserIDList() []string {
	if m != nil {
		return m.BusyLineUserIDList
	}
	return nil
}

type SignalCancelReq struct {
	OpUserID        string               `protobuf:"bytes,1,opt,name=opUserID" json:"opUserID,omitempty"`
	Invitation      *InvitationInfo      `protobuf:"bytes,2,opt,name=invitation" json:"invitation,omitempty"`
	OfflinePushInfo *OfflinePushInfo     `protobuf:"bytes,3,opt,name=offlinePushInfo" json:"offlinePushInfo,omitempty"`
	Participant     *ParticipantMetaData `protobuf:"bytes,4,opt,name=participant" json:"participant,omitempty"`
}

func (m *SignalCancelReq) Reset()                    { *m = SignalCancelReq{} }
func (m *SignalCancelReq) String() string            { return proto.CompactTextString(m) }
func (*SignalCancelReq) ProtoMessage()               {}
func (*SignalCancelReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{66} }

func (m *SignalCancelReq) GetOpUserID() string {
	if m != nil {
		return m.OpUserID
	}
	return ""
}

func (m *SignalCancelReq) GetInvitation() *InvitationInfo {
	if m != nil {
		return m.Invitation
	}
	return nil
}

func (m *SignalCancelReq) GetOfflinePushInfo() *OfflinePushInfo {
	if m != nil {
		return m.OfflinePushInfo
	}
	return nil
}

func (m *SignalCancelReq) GetParticipant() *ParticipantMetaData {
	if m != nil {
		return m.Participant
	}
	return nil
}

type SignalCancelReply struct {
}

func (m *SignalCancelReply) Reset()                    { *m = SignalCancelReply{} }
func (m *SignalCancelReply) String() string            { return proto.CompactTextString(m) }
func (*SignalCancelReply) ProtoMessage()               {}
func (*SignalCancelReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{67} }

type SignalAcceptReq struct {
	OpUserID         string               `protobuf:"bytes,1,opt,name=opUserID" json:"opUserID,omitempty"`
	Invitation       *InvitationInfo      `protobuf:"bytes,2,opt,name=invitation" json:"invitation,omitempty"`
	OfflinePushInfo  *OfflinePushInfo     `protobuf:"bytes,3,opt,name=offlinePushInfo" json:"offlinePushInfo,omitempty"`
	Participant      *ParticipantMetaData `protobuf:"bytes,4,opt,name=participant" json:"participant,omitempty"`
	OpUserPlatformID int32                `protobuf:"varint,5,opt,name=opUserPlatformID" json:"opUserPlatformID,omitempty"`
}

func (m *SignalAcceptReq) Reset()                    { *m = SignalAcceptReq{} }
func (m *SignalAcceptReq) String() string            { return proto.CompactTextString(m) }
func (*SignalAcceptReq) ProtoMessage()               {}
func (*SignalAcceptReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{68} }

func (m *SignalAcceptReq) GetOpUserID() string {
	if m != nil {
		return m.OpUserID
	}
	return ""
}

func (m *SignalAcceptReq) GetInvitation() *InvitationInfo {
	if m != nil {
		return m.Invitation
	}
	return nil
}

func (m *SignalAcceptReq) GetOfflinePushInfo() *OfflinePushInfo {
	if m != nil {
		return m.OfflinePushInfo
	}
	return nil
}

func (m *SignalAcceptReq) GetParticipant() *ParticipantMetaData {
	if m != nil {
		return m.Participant
	}
	return nil
}

func (m *SignalAcceptReq) GetOpUserPlatformID() int32 {
	if m != nil {
		return m.OpUserPlatformID
	}
	return 0
}

type SignalAcceptReply struct {
	Token   string `protobuf:"bytes,1,opt,name=token" json:"token,omitempty"`
	RoomID  string `protobuf:"bytes,2,opt,name=roomID" json:"roomID,omitempty"`
	LiveURL string `protobuf:"bytes,3,opt,name=liveURL" json:"liveURL,omitempty"`
}

func (m *SignalAcceptReply) Reset()                    { *m = SignalAcceptReply{} }
func (m *SignalAcceptReply) String() string            { return proto.CompactTextString(m) }
func (*SignalAcceptReply) ProtoMessage()               {}
func (*SignalAcceptReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{69} }

func (m *SignalAcceptReply) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *SignalAcceptReply) GetRoomID() string {
	if m != nil {
		return m.RoomID
	}
	return ""
}

func (m *SignalAcceptReply) GetLiveURL() string {
	if m != nil {
		return m.LiveURL
	}
	return ""
}

type SignalHungUpReq struct {
	OpUserID        string           `protobuf:"bytes,1,opt,name=opUserID" json:"opUserID,omitempty"`
	Invitation      *InvitationInfo  `protobuf:"bytes,2,opt,name=invitation" json:"invitation,omitempty"`
	OfflinePushInfo *OfflinePushInfo `protobuf:"bytes,3,opt,name=offlinePushInfo" json:"offlinePushInfo,omitempty"`
}

func (m *SignalHungUpReq) Reset()                    { *m = SignalHungUpReq{} }
func (m *SignalHungUpReq) String() string            { return proto.CompactTextString(m) }
func (*SignalHungUpReq) ProtoMessage()               {}
func (*SignalHungUpReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{70} }

func (m *SignalHungUpReq) GetOpUserID() string {
	if m != nil {
		return m.OpUserID
	}
	return ""
}

func (m *SignalHungUpReq) GetInvitation() *InvitationInfo {
	if m != nil {
		return m.Invitation
	}
	return nil
}

func (m *SignalHungUpReq) GetOfflinePushInfo() *OfflinePushInfo {
	if m != nil {
		return m.OfflinePushInfo
	}
	return nil
}

type SignalHungUpReply struct {
}

func (m *SignalHungUpReply) Reset()                    { *m = SignalHungUpReply{} }
func (m *SignalHungUpReply) String() string            { return proto.CompactTextString(m) }
func (*SignalHungUpReply) ProtoMessage()               {}
func (*SignalHungUpReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{71} }

type SignalRejectReq struct {
	OpUserID         string               `protobuf:"bytes,1,opt,name=opUserID" json:"opUserID,omitempty"`
	Invitation       *InvitationInfo      `protobuf:"bytes,2,opt,name=invitation" json:"invitation,omitempty"`
	OfflinePushInfo  *OfflinePushInfo     `protobuf:"bytes,3,opt,name=offlinePushInfo" json:"offlinePushInfo,omitempty"`
	Participant      *ParticipantMetaData `protobuf:"bytes,4,opt,name=participant" json:"participant,omitempty"`
	OpUserPlatformID int32                `protobuf:"varint,5,opt,name=opUserPlatformID" json:"opUserPlatformID,omitempty"`
}

func (m *SignalRejectReq) Reset()                    { *m = SignalRejectReq{} }
func (m *SignalRejectReq) String() string            { return proto.CompactTextString(m) }
func (*SignalRejectReq) ProtoMessage()               {}
func (*SignalRejectReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{72} }

func (m *SignalRejectReq) GetOpUserID() string {
	if m != nil {
		return m.OpUserID
	}
	return ""
}

func (m *SignalRejectReq) GetInvitation() *InvitationInfo {
	if m != nil {
		return m.Invitation
	}
	return nil
}

func (m *SignalRejectReq) GetOfflinePushInfo() *OfflinePushInfo {
	if m != nil {
		return m.OfflinePushInfo
	}
	return nil
}

func (m *SignalRejectReq) GetParticipant() *ParticipantMetaData {
	if m != nil {
		return m.Participant
	}
	return nil
}

func (m *SignalRejectReq) GetOpUserPlatformID() int32 {
	if m != nil {
		return m.OpUserPlatformID
	}
	return 0
}

type SignalRejectReply struct {
}

func (m *SignalRejectReply) Reset()                    { *m = SignalRejectReply{} }
func (m *SignalRejectReply) String() string            { return proto.CompactTextString(m) }
func (*SignalRejectReply) ProtoMessage()               {}
func (*SignalRejectReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{73} }

type SignalGetRoomByGroupIDReq struct {
	OpUserID    string               `protobuf:"bytes,1,opt,name=opUserID" json:"opUserID,omitempty"`
	GroupID     string               `protobuf:"bytes,2,opt,name=groupID" json:"groupID,omitempty"`
	Participant *ParticipantMetaData `protobuf:"bytes,3,opt,name=participant" json:"participant,omitempty"`
}

func (m *SignalGetRoomByGroupIDReq) Reset()                    { *m = SignalGetRoomByGroupIDReq{} }
func (m *SignalGetRoomByGroupIDReq) String() string            { return proto.CompactTextString(m) }
func (*SignalGetRoomByGroupIDReq) ProtoMessage()               {}
func (*SignalGetRoomByGroupIDReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{74} }

func (m *SignalGetRoomByGroupIDReq) GetOpUserID() string {
	if m != nil {
		return m.OpUserID
	}
	return ""
}

func (m *SignalGetRoomByGroupIDReq) GetGroupID() string {
	if m != nil {
		return m.GroupID
	}
	return ""
}

func (m *SignalGetRoomByGroupIDReq) GetParticipant() *ParticipantMetaData {
	if m != nil {
		return m.Participant
	}
	return nil
}

type SignalGetRoomByGroupIDReply struct {
	Invitation  *InvitationInfo        `protobuf:"bytes,1,opt,name=invitation" json:"invitation,omitempty"`
	Participant []*ParticipantMetaData `protobuf:"bytes,2,rep,name=participant" json:"participant,omitempty"`
	RoomID      string                 `protobuf:"bytes,3,opt,name=roomID" json:"roomID,omitempty"`
}

func (m *SignalGetRoomByGroupIDReply) Reset()                    { *m = SignalGetRoomByGroupIDReply{} }
func (m *SignalGetRoomByGroupIDReply) String() string            { return proto.CompactTextString(m) }
func (*SignalGetRoomByGroupIDReply) ProtoMessage()               {}
func (*SignalGetRoomByGroupIDReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{75} }

func (m *SignalGetRoomByGroupIDReply) GetInvitation() *InvitationInfo {
	if m != nil {
		return m.Invitation
	}
	return nil
}

func (m *SignalGetRoomByGroupIDReply) GetParticipant() []*ParticipantMetaData {
	if m != nil {
		return m.Participant
	}
	return nil
}

func (m *SignalGetRoomByGroupIDReply) GetRoomID() string {
	if m != nil {
		return m.RoomID
	}
	return ""
}

type SignalOnRoomParticipantConnectedReq struct {
	Invitation  *InvitationInfo        `protobuf:"bytes,1,opt,name=invitation" json:"invitation,omitempty"`
	Participant []*ParticipantMetaData `protobuf:"bytes,2,rep,name=participant" json:"participant,omitempty"`
	GroupID     string                 `protobuf:"bytes,3,opt,name=groupID" json:"groupID,omitempty"`
}

func (m *SignalOnRoomParticipantConnectedReq) Reset()         { *m = SignalOnRoomParticipantConnectedReq{} }
func (m *SignalOnRoomParticipantConnectedReq) String() string { return proto.CompactTextString(m) }
func (*SignalOnRoomParticipantConnectedReq) ProtoMessage()    {}
func (*SignalOnRoomParticipantConnectedReq) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{76}
}

func (m *SignalOnRoomParticipantConnectedReq) GetInvitation() *InvitationInfo {
	if m != nil {
		return m.Invitation
	}
	return nil
}

func (m *SignalOnRoomParticipantConnectedReq) GetParticipant() []*ParticipantMetaData {
	if m != nil {
		return m.Participant
	}
	return nil
}

func (m *SignalOnRoomParticipantConnectedReq) GetGroupID() string {
	if m != nil {
		return m.GroupID
	}
	return ""
}

type SignalOnRoomParticipantDisconnectedReq struct {
	Invitation  *InvitationInfo        `protobuf:"bytes,1,opt,name=invitation" json:"invitation,omitempty"`
	Participant []*ParticipantMetaData `protobuf:"bytes,2,rep,name=participant" json:"participant,omitempty"`
	GroupID     string                 `protobuf:"bytes,3,opt,name=groupID" json:"groupID,omitempty"`
}

func (m *SignalOnRoomParticipantDisconnectedReq) Reset() {
	*m = SignalOnRoomParticipantDisconnectedReq{}
}
func (m *SignalOnRoomParticipantDisconnectedReq) String() string { return proto.CompactTextString(m) }
func (*SignalOnRoomParticipantDisconnectedReq) ProtoMessage()    {}
func (*SignalOnRoomParticipantDisconnectedReq) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{77}
}

func (m *SignalOnRoomParticipantDisconnectedReq) GetInvitation() *InvitationInfo {
	if m != nil {
		return m.Invitation
	}
	return nil
}

func (m *SignalOnRoomParticipantDisconnectedReq) GetParticipant() []*ParticipantMetaData {
	if m != nil {
		return m.Participant
	}
	return nil
}

func (m *SignalOnRoomParticipantDisconnectedReq) GetGroupID() string {
	if m != nil {
		return m.GroupID
	}
	return ""
}

type SignalGetTokenByRoomIDReq struct {
	RoomID      string               `protobuf:"bytes,1,opt,name=roomID" json:"roomID,omitempty"`
	OpUserID    string               `protobuf:"bytes,2,opt,name=opUserID" json:"opUserID,omitempty"`
	Participant *ParticipantMetaData `protobuf:"bytes,3,opt,name=participant" json:"participant,omitempty"`
	OperationID string               `protobuf:"bytes,4,opt,name=operationID" json:"operationID,omitempty"`
}

func (m *SignalGetTokenByRoomIDReq) Reset()                    { *m = SignalGetTokenByRoomIDReq{} }
func (m *SignalGetTokenByRoomIDReq) String() string            { return proto.CompactTextString(m) }
func (*SignalGetTokenByRoomIDReq) ProtoMessage()               {}
func (*SignalGetTokenByRoomIDReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{78} }

func (m *SignalGetTokenByRoomIDReq) GetRoomID() string {
	if m != nil {
		return m.RoomID
	}
	return ""
}

func (m *SignalGetTokenByRoomIDReq) GetOpUserID() string {
	if m != nil {
		return m.OpUserID
	}
	return ""
}

func (m *SignalGetTokenByRoomIDReq) GetParticipant() *ParticipantMetaData {
	if m != nil {
		return m.Participant
	}
	return nil
}

func (m *SignalGetTokenByRoomIDReq) GetOperationID() string {
	if m != nil {
		return m.OperationID
	}
	return ""
}

type SignalGetTokenByRoomIDReply struct {
	Token   string `protobuf:"bytes,1,opt,name=token" json:"token,omitempty"`
	LiveURL string `protobuf:"bytes,2,opt,name=liveURL" json:"liveURL,omitempty"`
}

func (m *SignalGetTokenByRoomIDReply) Reset()                    { *m = SignalGetTokenByRoomIDReply{} }
func (m *SignalGetTokenByRoomIDReply) String() string            { return proto.CompactTextString(m) }
func (*SignalGetTokenByRoomIDReply) ProtoMessage()               {}
func (*SignalGetTokenByRoomIDReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{79} }

func (m *SignalGetTokenByRoomIDReply) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *SignalGetTokenByRoomIDReply) GetLiveURL() string {
	if m != nil {
		return m.LiveURL
	}
	return ""
}

type DelMsgListReq struct {
	OpUserID    string   `protobuf:"bytes,1,opt,name=opUserID" json:"opUserID,omitempty"`
	UserID      string   `protobuf:"bytes,2,opt,name=userID" json:"userID,omitempty"`
	SeqList     []uint32 `protobuf:"varint,3,rep,packed,name=seqList" json:"seqList,omitempty"`
	OperationID string   `protobuf:"bytes,4,opt,name=operationID" json:"operationID,omitempty"`
}

func (m *DelMsgListReq) Reset()                    { *m = DelMsgListReq{} }
func (m *DelMsgListReq) String() string            { return proto.CompactTextString(m) }
func (*DelMsgListReq) ProtoMessage()               {}
func (*DelMsgListReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{80} }

func (m *DelMsgListReq) GetOpUserID() string {
	if m != nil {
		return m.OpUserID
	}
	return ""
}

func (m *DelMsgListReq) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *DelMsgListReq) GetSeqList() []uint32 {
	if m != nil {
		return m.SeqList
	}
	return nil
}

func (m *DelMsgListReq) GetOperationID() string {
	if m != nil {
		return m.OperationID
	}
	return ""
}

type DelMsgListResp struct {
	ErrCode int32  `protobuf:"varint,1,opt,name=errCode" json:"errCode,omitempty"`
	ErrMsg  string `protobuf:"bytes,2,opt,name=errMsg" json:"errMsg,omitempty"`
}

func (m *DelMsgListResp) Reset()                    { *m = DelMsgListResp{} }
func (m *DelMsgListResp) String() string            { return proto.CompactTextString(m) }
func (*DelMsgListResp) ProtoMessage()               {}
func (*DelMsgListResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{81} }

func (m *DelMsgListResp) GetErrCode() int32 {
	if m != nil {
		return m.ErrCode
	}
	return 0
}

func (m *DelMsgListResp) GetErrMsg() string {
	if m != nil {
		return m.ErrMsg
	}
	return ""
}

func init() {
	proto.RegisterType((*GroupInfo)(nil), "server_api_params.GroupInfo")
	proto.RegisterType((*GroupInfoForSet)(nil), "server_api_params.GroupInfoForSet")
	proto.RegisterType((*GroupMemberFullInfo)(nil), "server_api_params.GroupMemberFullInfo")
	proto.RegisterType((*PublicUserInfo)(nil), "server_api_params.PublicUserInfo")
	proto.RegisterType((*UserInfo)(nil), "server_api_params.UserInfo")
	proto.RegisterType((*FriendInfo)(nil), "server_api_params.FriendInfo")
	proto.RegisterType((*BlackInfo)(nil), "server_api_params.BlackInfo")
	proto.RegisterType((*GroupRequest)(nil), "server_api_params.GroupRequest")
	proto.RegisterType((*FriendRequest)(nil), "server_api_params.FriendRequest")
	proto.RegisterType((*Department)(nil), "server_api_params.Department")
	proto.RegisterType((*OrganizationUser)(nil), "server_api_params.OrganizationUser")
	proto.RegisterType((*DepartmentMember)(nil), "server_api_params.DepartmentMember")
	proto.RegisterType((*UserDepartmentMember)(nil), "server_api_params.UserDepartmentMember")
	proto.RegisterType((*UserInDepartment)(nil), "server_api_params.UserInDepartment")
	proto.RegisterType((*PullMessageBySeqListReq)(nil), "server_api_params.PullMessageBySeqListReq")
	proto.RegisterType((*SeqList)(nil), "server_api_params.seqList")
	proto.RegisterType((*MsgDataList)(nil), "server_api_params.MsgDataList")
	proto.RegisterType((*PullMessageBySeqListResp)(nil), "server_api_params.PullMessageBySeqListResp")
	proto.RegisterType((*GetMaxAndMinSeqReq)(nil), "server_api_params.GetMaxAndMinSeqReq")
	proto.RegisterType((*MaxAndMinSeq)(nil), "server_api_params.MaxAndMinSeq")
	proto.RegisterType((*GetMaxAndMinSeqResp)(nil), "server_api_params.GetMaxAndMinSeqResp")
	proto.RegisterType((*UserSendMsgResp)(nil), "server_api_params.UserSendMsgResp")
	proto.RegisterType((*MsgData)(nil), "server_api_params.MsgData")
	proto.RegisterType((*OfflinePushInfo)(nil), "server_api_params.OfflinePushInfo")
	proto.RegisterType((*TipsComm)(nil), "server_api_params.TipsComm")
	proto.RegisterType((*GroupCreatedTips)(nil), "server_api_params.GroupCreatedTips")
	proto.RegisterType((*GroupInfoSetTips)(nil), "server_api_params.GroupInfoSetTips")
	proto.RegisterType((*JoinGroupApplicationTips)(nil), "server_api_params.JoinGroupApplicationTips")
	proto.RegisterType((*MemberQuitTips)(nil), "server_api_params.MemberQuitTips")
	proto.RegisterType((*GroupApplicationAcceptedTips)(nil), "server_api_params.GroupApplicationAcceptedTips")
	proto.RegisterType((*GroupApplicationRejectedTips)(nil), "server_api_params.GroupApplicationRejectedTips")
	proto.RegisterType((*GroupOwnerTransferredTips)(nil), "server_api_params.GroupOwnerTransferredTips")
	proto.RegisterType((*MemberKickedTips)(nil), "server_api_params.MemberKickedTips")
	proto.RegisterType((*MemberInvitedTips)(nil), "server_api_params.MemberInvitedTips")
	proto.RegisterType((*MemberEnterTips)(nil), "server_api_params.MemberEnterTips")
	proto.RegisterType((*GroupDismissedTips)(nil), "server_api_params.GroupDismissedTips")
	proto.RegisterType((*GroupMemberMutedTips)(nil), "server_api_params.GroupMemberMutedTips")
	proto.RegisterType((*GroupMemberCancelMutedTips)(nil), "server_api_params.GroupMemberCancelMutedTips")
	proto.RegisterType((*GroupMutedTips)(nil), "server_api_params.GroupMutedTips")
	proto.RegisterType((*GroupCancelMutedTips)(nil), "server_api_params.GroupCancelMutedTips")
	proto.RegisterType((*GroupMemberInfoSetTips)(nil), "server_api_params.GroupMemberInfoSetTips")
	proto.RegisterType((*OrganizationChangedTips)(nil), "server_api_params.OrganizationChangedTips")
	proto.RegisterType((*FriendApplication)(nil), "server_api_params.FriendApplication")
	proto.RegisterType((*FromToUserID)(nil), "server_api_params.FromToUserID")
	proto.RegisterType((*FriendApplicationTips)(nil), "server_api_params.FriendApplicationTips")
	proto.RegisterType((*FriendApplicationApprovedTips)(nil), "server_api_params.FriendApplicationApprovedTips")
	proto.RegisterType((*FriendApplicationRejectedTips)(nil), "server_api_params.FriendApplicationRejectedTips")
	proto.RegisterType((*FriendAddedTips)(nil), "server_api_params.FriendAddedTips")
	proto.RegisterType((*FriendDeletedTips)(nil), "server_api_params.FriendDeletedTips")
	proto.RegisterType((*BlackAddedTips)(nil), "server_api_params.BlackAddedTips")
	proto.RegisterType((*BlackDeletedTips)(nil), "server_api_params.BlackDeletedTips")
	proto.RegisterType((*FriendInfoChangedTips)(nil), "server_api_params.FriendInfoChangedTips")
	proto.RegisterType((*UserInfoUpdatedTips)(nil), "server_api_params.UserInfoUpdatedTips")
	proto.RegisterType((*ConversationUpdateTips)(nil), "server_api_params.ConversationUpdateTips")
	proto.RegisterType((*ConversationSetPrivateTips)(nil), "server_api_params.ConversationSetPrivateTips")
	proto.RegisterType((*DeleteMessageTips)(nil), "server_api_params.DeleteMessageTips")
	proto.RegisterType((*RequestPagination)(nil), "server_api_params.RequestPagination")
	proto.RegisterType((*ResponsePagination)(nil), "server_api_params.ResponsePagination")
	proto.RegisterType((*SignalReq)(nil), "server_api_params.SignalReq")
	proto.RegisterType((*SignalResp)(nil), "server_api_params.SignalResp")
	proto.RegisterType((*InvitationInfo)(nil), "server_api_params.InvitationInfo")
	proto.RegisterType((*ParticipantMetaData)(nil), "server_api_params.ParticipantMetaData")
	proto.RegisterType((*SignalInviteReq)(nil), "server_api_params.SignalInviteReq")
	proto.RegisterType((*SignalInviteReply)(nil), "server_api_params.SignalInviteReply")
	proto.RegisterType((*SignalInviteInGroupReq)(nil), "server_api_params.SignalInviteInGroupReq")
	proto.RegisterType((*SignalInviteInGroupReply)(nil), "server_api_params.SignalInviteInGroupReply")
	proto.RegisterType((*SignalCancelReq)(nil), "server_api_params.SignalCancelReq")
	proto.RegisterType((*SignalCancelReply)(nil), "server_api_params.SignalCancelReply")
	proto.RegisterType((*SignalAcceptReq)(nil), "server_api_params.SignalAcceptReq")
	proto.RegisterType((*SignalAcceptReply)(nil), "server_api_params.SignalAcceptReply")
	proto.RegisterType((*SignalHungUpReq)(nil), "server_api_params.SignalHungUpReq")
	proto.RegisterType((*SignalHungUpReply)(nil), "server_api_params.SignalHungUpReply")
	proto.RegisterType((*SignalRejectReq)(nil), "server_api_params.SignalRejectReq")
	proto.RegisterType((*SignalRejectReply)(nil), "server_api_params.SignalRejectReply")
	proto.RegisterType((*SignalGetRoomByGroupIDReq)(nil), "server_api_params.SignalGetRoomByGroupIDReq")
	proto.RegisterType((*SignalGetRoomByGroupIDReply)(nil), "server_api_params.SignalGetRoomByGroupIDReply")
	proto.RegisterType((*SignalOnRoomParticipantConnectedReq)(nil), "server_api_params.SignalOnRoomParticipantConnectedReq")
	proto.RegisterType((*SignalOnRoomParticipantDisconnectedReq)(nil), "server_api_params.SignalOnRoomParticipantDisconnectedReq")
	proto.RegisterType((*SignalGetTokenByRoomIDReq)(nil), "server_api_params.SignalGetTokenByRoomIDReq")
	proto.RegisterType((*SignalGetTokenByRoomIDReply)(nil), "server_api_params.SignalGetTokenByRoomIDReply")
	proto.RegisterType((*DelMsgListReq)(nil), "server_api_params.DelMsgListReq")
	proto.RegisterType((*DelMsgListResp)(nil), "server_api_params.DelMsgListResp")
}

func init() { proto.RegisterFile("sdk_ws/ws.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 3819 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x3c, 0xdd, 0x6f, 0x1c, 0x57,
	0xf5, 0x9d, 0x59, 0xef, 0xda, 0x7b, 0xd6, 0x1f, 0xeb, 0x49, 0xe2, 0x6e, 0xdd, 0x34, 0x3f, 0xff,
	0xa6, 0x51, 0x7e, 0xfd, 0x85, 0xd4, 0x41, 0xe9, 0x87, 0xe8, 0x57, 0x50, 0x6c, 0x37, 0x8e, 0xdb,
	0x6c, 0xec, 0xce, 0x26, 0x2d, 0x6a, 0x2b, 0x85, 0xf1, 0xce, 0xf5, 0x7a, 0xea, 0xd9, 0x99, 0xf1,
	0x7c, 0x38, 0x31, 0x0f, 0x20, 0x01, 0x02, 0x24, 0x1e, 0x90, 0x10, 0x1f, 0x12, 0xbc, 0xf1, 0x82,
	0x40, 0xa8, 0x42, 0x08, 0x10, 0x12, 0x08, 0xa1, 0x8a, 0x37, 0x90, 0xe0, 0x9d, 0x07, 0x04, 0x4f,
	0x3c, 0xf0, 0x0f, 0x20, 0x21, 0x15, 0xdd, 0x7b, 0xee, 0xcc, 0xdc, 0x3b, 0x33, 0xfb, 0x11, 0xcb,
	0x6a, 0x52, 0x85, 0x37, 0x9f, 0x33, 0xf7, 0x9c, 0x7b, 0x3e, 0xef, 0x39, 0xf7, 0x63, 0x0d, 0x73,
	0xa1, 0xb5, 0x77, 0xfb, 0x4e, 0x78, 0xf1, 0x4e, 0xb8, 0xec, 0x07, 0x5e, 0xe4, 0x69, 0xf3, 0x21,
	0x09, 0x0e, 0x48, 0x70, 0xdb, 0xf4, 0xed, 0xdb, 0xbe, 0x19, 0x98, 0xfd, 0x70, 0x71, 0x79, 0xd3,
	0x27, 0xee, 0xd3, 0x1b, 0xed, 0xa7, 0x3b, 0xec, 0xd3, 0x45, 0x7f, 0xaf, 0x77, 0x91, 0x0d, 0xbe,
	0x98, 0x10, 0x07, 0xa6, 0xef, 0x93, 0x80, 0xb3, 0xd0, 0xff, 0x3a, 0x01, 0xf5, 0xf5, 0xc0, 0x8b,
	0xfd, 0x0d, 0x77, 0xc7, 0xd3, 0x5a, 0x30, 0xd9, 0x63, 0xc0, 0x5a, 0x4b, 0x59, 0x52, 0x9e, 0xaa,
	0x1b, 0x09, 0xa8, 0x9d, 0x86, 0x3a, 0xfb, 0xf3, 0x86, 0xd9, 0x27, 0x2d, 0x95, 0x7d, 0xcb, 0x10,
	0x9a, 0x0e, 0xd3, 0xae, 0x17, 0xd9, 0x3b, 0x76, 0xd7, 0x8c, 0x6c, 0xcf, 0x6d, 0x55, 0xd8, 0x00,
	0x09, 0x47, 0xc7, 0xd8, 0x6e, 0x14, 0x78, 0x56, 0xdc, 0x65, 0x63, 0x26, 0x70, 0x8c, 0x88, 0xa3,
	0xf3, 0xef, 0x98, 0x5d, 0x72, 0xcb, 0xb8, 0xde, 0xaa, 0xe2, 0xfc, 0x1c, 0xd4, 0x96, 0xa0, 0xe1,
	0xdd, 0x71, 0x49, 0x70, 0x2b, 0x24, 0xc1, 0xc6, 0x5a, 0xab, 0xc6, 0xbe, 0x8a, 0x28, 0xed, 0x0c,
	0x40, 0x37, 0x20, 0x66, 0x44, 0x6e, 0xda, 0x7d, 0xd2, 0x9a, 0x5c, 0x52, 0x9e, 0x9a, 0x31, 0x04,
	0x0c, 0xe5, 0xd0, 0x27, 0xfd, 0x6d, 0x12, 0xac, 0x7a, 0xb1, 0x1b, 0xb5, 0xa6, 0xd8, 0x00, 0x11,
	0xa5, 0xcd, 0x82, 0x4a, 0xee, 0xb6, 0xea, 0x8c, 0xb5, 0x4a, 0xee, 0x6a, 0x0b, 0x50, 0x0b, 0x23,
	0x33, 0x8a, 0xc3, 0x16, 0x2c, 0x29, 0x4f, 0x55, 0x0d, 0x0e, 0x69, 0x67, 0x61, 0x86, 0xf1, 0xf5,
	0x12, 0x69, 0x1a, 0x8c, 0x44, 0x46, 0xa6, 0x16, 0xbb, 0x79, 0xe8, 0x93, 0xd6, 0x34, 0x63, 0x90,
	0x21, 0xb4, 0xf3, 0xd0, 0x74, 0x09, 0xb1, 0xde, 0x24, 0x41, 0x66, 0xb5, 0x19, 0x36, 0xa8, 0x80,
	0xd7, 0xce, 0xc1, 0xac, 0xe3, 0x79, 0x7b, 0x6d, 0x26, 0x2a, 0xf5, 0x53, 0x6b, 0x96, 0x8d, 0xcc,
	0x61, 0xb5, 0x0b, 0x30, 0x6f, 0xfa, 0xbe, 0x73, 0x88, 0xa8, 0xab, 0x81, 0x4d, 0x5c, 0xab, 0x35,
	0xc7, 0x86, 0x16, 0x3f, 0x68, 0xcf, 0xc3, 0x82, 0xe8, 0x9f, 0x5b, 0xbe, 0x95, 0xd8, 0xae, 0xc9,
	0x4c, 0x33, 0xe0, 0xab, 0xb6, 0x0c, 0x9a, 0xf4, 0x05, 0x4d, 0x30, 0xcf, 0x4c, 0x50, 0xf2, 0x45,
	0xff, 0x56, 0x05, 0xe6, 0xd2, 0x08, 0xbb, 0xea, 0x05, 0x1d, 0x12, 0x3d, 0xc0, 0x71, 0x86, 0x31,
	0x50, 0x4b, 0x63, 0x60, 0xbd, 0xc4, 0x4f, 0x34, 0xb6, 0x1a, 0x97, 0x1e, 0x5f, 0xee, 0x79, 0x5e,
	0xcf, 0x21, 0x98, 0x48, 0xdb, 0xf1, 0xce, 0xf2, 0x86, 0x1b, 0x3d, 0x73, 0xe9, 0x4d, 0xd3, 0x89,
	0x49, 0x89, 0x13, 0x57, 0x0b, 0x4e, 0x9c, 0x1a, 0xcd, 0x26, 0xef, 0xe1, 0x8d, 0x32, 0x0f, 0xd7,
	0x47, 0xf3, 0x29, 0x52, 0xe9, 0x1f, 0xaa, 0x70, 0x82, 0xb9, 0x85, 0x63, 0x63, 0xc7, 0x19, 0xb1,
	0x04, 0x2c, 0x40, 0x2d, 0x46, 0x67, 0xa3, 0x5f, 0x38, 0x44, 0x5d, 0x16, 0x78, 0x0e, 0xb9, 0x4e,
	0x0e, 0x88, 0xc3, 0x3c, 0x52, 0x35, 0x32, 0x84, 0xb6, 0x08, 0x53, 0xef, 0x79, 0xb6, 0xcb, 0x02,
	0x6b, 0x82, 0x7d, 0x4c, 0x61, 0xfa, 0xcd, 0xb5, 0xbb, 0x7b, 0x2e, 0xf5, 0x35, 0xfa, 0x21, 0x85,
	0x45, 0x17, 0xd5, 0x64, 0x17, 0x9d, 0x83, 0x59, 0xd3, 0xf7, 0xdb, 0xa6, 0xdb, 0x23, 0x01, 0x4e,
	0x3a, 0x89, 0xe9, 0x20, 0x63, 0xe9, 0x82, 0x40, 0x67, 0xea, 0x78, 0x71, 0xd0, 0x25, 0xcc, 0xda,
	0x55, 0x43, 0xc0, 0x50, 0x3e, 0x9e, 0x4f, 0x02, 0x21, 0x8f, 0x31, 0xf5, 0x73, 0x58, 0x1e, 0x12,
	0x90, 0x86, 0x04, 0x5d, 0x48, 0xe2, 0x88, 0xbc, 0xea, 0x5a, 0x4c, 0xa9, 0x06, 0x5f, 0x48, 0x32,
	0x14, 0x5d, 0x20, 0x6c, 0xf7, 0xc0, 0x8e, 0xd2, 0xe5, 0x6a, 0x1a, 0x17, 0x08, 0x09, 0xa9, 0x7f,
	0x45, 0x81, 0xd9, 0xad, 0x78, 0xdb, 0xb1, 0xbb, 0x0c, 0x41, 0x8d, 0x9f, 0x99, 0x58, 0x91, 0x4c,
	0x2c, 0x1a, 0x4a, 0x1d, 0x6c, 0xa8, 0x8a, 0x6c, 0xa8, 0x05, 0xa8, 0xf5, 0x88, 0x6b, 0x91, 0x80,
	0x1b, 0x9e, 0x43, 0x5c, 0xa1, 0x6a, 0xa2, 0x90, 0xfe, 0x81, 0x0a, 0x53, 0x1f, 0xb1, 0x08, 0x4b,
	0xd0, 0xf0, 0x77, 0x3d, 0x97, 0xdc, 0x88, 0x69, 0xf0, 0x71, 0x59, 0x44, 0x94, 0x76, 0x12, 0xaa,
	0xdb, 0x76, 0x10, 0xed, 0x32, 0xef, 0xcf, 0x18, 0x08, 0x50, 0x2c, 0xe9, 0x9b, 0x36, 0xba, 0xbc,
	0x6e, 0x20, 0xc0, 0x15, 0x9a, 0x4a, 0x3d, 0x24, 0x97, 0x82, 0x7a, 0xa1, 0x14, 0x14, 0x23, 0x08,
	0x4a, 0x23, 0xe8, 0x3c, 0x34, 0x7b, 0x8e, 0xb7, 0x6d, 0x3a, 0x06, 0xe9, 0x1e, 0xb4, 0xc3, 0xde,
	0xa6, 0x1f, 0x31, 0x77, 0x57, 0x8d, 0x02, 0x5e, 0xff, 0x97, 0x02, 0x80, 0xa9, 0xc5, 0xcc, 0x98,
	0xab, 0x57, 0x4a, 0xb1, 0x5e, 0x2d, 0x40, 0x2d, 0x20, 0x7d, 0x33, 0xd8, 0x4b, 0xd2, 0x09, 0xa1,
	0x9c, 0xf0, 0x95, 0x82, 0xf0, 0x2f, 0x01, 0xec, 0xb0, 0x79, 0x28, 0x1f, 0x66, 0x56, 0x9a, 0xfc,
	0x85, 0x4e, 0x60, 0x39, 0xf1, 0xa8, 0x21, 0x0c, 0xa7, 0xb9, 0x6a, 0x5a, 0x16, 0x4f, 0x89, 0x2a,
	0xe6, 0x6a, 0x8a, 0x28, 0xc9, 0x88, 0xda, 0x90, 0x8c, 0x98, 0x4c, 0x03, 0xe8, 0x9f, 0x0a, 0xd4,
	0x57, 0x1c, 0xb3, 0xbb, 0x37, 0xa6, 0xea, 0xb2, 0x8a, 0x6a, 0x41, 0xc5, 0x75, 0x98, 0xd9, 0xa6,
	0xec, 0x12, 0x15, 0x98, 0x15, 0x1a, 0x97, 0xfe, 0xb7, 0x44, 0x4b, 0x39, 0x81, 0x0c, 0x99, 0x4e,
	0x56, 0x77, 0x62, 0xb4, 0xba, 0xd5, 0x21, 0xea, 0xa6, 0x35, 0x41, 0xff, 0x6e, 0x05, 0xa6, 0xd9,
	0xd2, 0x69, 0x90, 0xfd, 0x98, 0x84, 0x91, 0xf6, 0x0a, 0x4c, 0xc5, 0x89, 0xa8, 0xca, 0xb8, 0xa2,
	0xa6, 0x24, 0xda, 0x8b, 0xbc, 0xe6, 0x31, 0x7a, 0x95, 0xd1, 0x9f, 0x2e, 0xa1, 0x4f, 0x8b, 0xa8,
	0x91, 0x0d, 0xa7, 0xd5, 0x6e, 0xd7, 0x74, 0x2d, 0x87, 0x18, 0x24, 0x8c, 0x9d, 0x88, 0xaf, 0xbf,
	0x12, 0x0e, 0x23, 0x6d, 0xbf, 0x1d, 0xf6, 0x78, 0x2d, 0xe4, 0x10, 0xb5, 0x0e, 0x8e, 0xa3, 0x9f,
	0x50, 0xf5, 0x0c, 0x41, 0x93, 0x3a, 0x20, 0xfb, 0xcc, 0x43, 0x98, 0x82, 0x09, 0x98, 0xcd, 0xc9,
	0xad, 0x86, 0x81, 0x20, 0xe1, 0xa8, 0x8b, 0x11, 0x66, 0x0c, 0xb0, 0xd9, 0x12, 0x30, 0x85, 0x5e,
	0x4b, 0x5e, 0xac, 0xa1, 0xb0, 0x58, 0x17, 0x96, 0xd4, 0x46, 0xd9, 0x92, 0xfa, 0x97, 0x0a, 0xcc,
	0x60, 0x12, 0x26, 0xae, 0x39, 0x43, 0xb3, 0xc5, 0xeb, 0x4b, 0xb1, 0x28, 0x60, 0xa8, 0x2e, 0x14,
	0xba, 0x21, 0x2f, 0x6d, 0x12, 0x8e, 0x06, 0x34, 0x85, 0xaf, 0x4a, 0x4b, 0x9c, 0x88, 0x4a, 0x66,
	0x59, 0x17, 0x97, 0x3a, 0x01, 0x43, 0x17, 0xcf, 0xc8, 0x93, 0x62, 0x2c, 0x85, 0x29, 0x6d, 0xe4,
	0xa5, 0xf3, 0x63, 0x94, 0x09, 0x18, 0xea, 0xa5, 0xc8, 0x4b, 0xe6, 0x46, 0x53, 0x67, 0x08, 0xe4,
	0xcc, 0xe7, 0xc5, 0x12, 0x97, 0xc2, 0x85, 0xd8, 0xa8, 0x0f, 0x8d, 0x0d, 0x90, 0x62, 0x43, 0x4e,
	0xd1, 0x46, 0x21, 0x45, 0xcf, 0xc2, 0x0c, 0xf2, 0xc9, 0x95, 0x38, 0x09, 0x29, 0x47, 0xd8, 0x4c,
	0x3e, 0xc2, 0xe4, 0x18, 0x99, 0x1d, 0x10, 0x23, 0x73, 0x69, 0xde, 0xfd, 0x4c, 0x05, 0x58, 0x23,
	0xbe, 0x19, 0x44, 0x7d, 0xe2, 0x46, 0x54, 0x3d, 0x2b, 0x85, 0x52, 0xe7, 0x4a, 0x38, 0xb1, 0x32,
	0xa9, 0x72, 0x65, 0xd2, 0x60, 0x82, 0x19, 0x1c, 0xbd, 0xc9, 0xfe, 0xa6, 0xc6, 0xf4, 0xcd, 0x00,
	0xb9, 0x61, 0xaa, 0xa4, 0x30, 0xad, 0x3c, 0x5e, 0x60, 0xf1, 0x5a, 0x55, 0x35, 0x10, 0xa0, 0x4b,
	0x48, 0x36, 0x1f, 0xeb, 0xf4, 0x6b, 0x58, 0x49, 0x64, 0xec, 0xc8, 0xcd, 0xc9, 0x79, 0x68, 0x86,
	0xf1, 0x76, 0xa6, 0xdc, 0x8d, 0xb8, 0xcf, 0x93, 0xa6, 0x80, 0xa7, 0x46, 0xc5, 0x5d, 0x0b, 0x1d,
	0x84, 0xc5, 0x2d, 0x43, 0xe4, 0xbb, 0x15, 0xfd, 0x27, 0x2a, 0x34, 0x37, 0x83, 0x9e, 0xe9, 0xda,
	0x9f, 0x4b, 0xbb, 0xf2, 0x23, 0x15, 0xf9, 0x25, 0x68, 0x10, 0xb7, 0xe7, 0xd8, 0xe1, 0xee, 0x8d,
	0xcc, 0x6e, 0x22, 0x4a, 0x34, 0xf6, 0xc4, 0xa0, 0x36, 0xa0, 0x2a, 0xb5, 0x01, 0x0b, 0x50, 0xeb,
	0x7b, 0xdb, 0xb6, 0x93, 0xc4, 0x3d, 0x87, 0x58, 0xcc, 0x13, 0x87, 0xb0, 0x7e, 0x20, 0x8d, 0xf9,
	0x04, 0x91, 0xb5, 0x06, 0x53, 0xa5, 0xad, 0x41, 0x5d, 0x6c, 0x0d, 0x64, 0xc3, 0x43, 0xc1, 0xf0,
	0x68, 0xae, 0x46, 0x6a, 0xae, 0xdf, 0x29, 0xd0, 0xcc, 0xcc, 0x8d, 0xbd, 0xf1, 0x40, 0x73, 0xe5,
	0x23, 0x50, 0x2d, 0x89, 0xc0, 0x34, 0x6e, 0x2a, 0x62, 0xdc, 0xd0, 0x48, 0xf3, 0x42, 0x5b, 0xd8,
	0xa0, 0xa4, 0x30, 0x9d, 0xcd, 0x21, 0xa6, 0x60, 0x2c, 0x84, 0x84, 0xed, 0x68, 0x4d, 0xda, 0x8e,
	0xe6, 0xab, 0xf1, 0xaf, 0x14, 0x38, 0x49, 0xbd, 0x5c, 0x50, 0x63, 0x13, 0x9a, 0x5e, 0x2e, 0x12,
	0x78, 0xb9, 0x7a, 0xb2, 0xa4, 0xdc, 0xe4, 0x83, 0xc6, 0x28, 0x10, 0x53, 0x86, 0x56, 0x6e, 0x12,
	0x5e, 0xbf, 0xca, 0x18, 0xe6, 0xe5, 0x31, 0x0a, 0xc4, 0xfa, 0x6f, 0x14, 0x68, 0x62, 0x81, 0x14,
	0xf2, 0xfc, 0xd8, 0xc5, 0x7e, 0x0b, 0x4e, 0xe6, 0x67, 0xbe, 0x6e, 0x87, 0x51, 0x4b, 0x5d, 0xaa,
	0x8c, 0x2b, 0x7a, 0x29, 0x03, 0x9a, 0x6b, 0x8f, 0x6e, 0xc5, 0x8e, 0xd3, 0x26, 0x61, 0x68, 0xf6,
	0xc8, 0xca, 0x61, 0x87, 0xec, 0xd3, 0x0f, 0x06, 0xd9, 0x1f, 0x18, 0x43, 0xb4, 0x5b, 0x62, 0xed,
	0x86, 0xed, 0xb9, 0x69, 0x08, 0x89, 0x28, 0x9a, 0x56, 0x21, 0xf2, 0x69, 0x55, 0x96, 0x2a, 0xb4,
	0x10, 0x73, 0x50, 0xfb, 0x2c, 0x4c, 0xb3, 0x4e, 0x80, 0x4f, 0xd3, 0x9a, 0x60, 0x0a, 0xbc, 0x5c,
	0xda, 0x7b, 0x94, 0x4a, 0x85, 0x3d, 0x05, 0x87, 0x5f, 0x75, 0xa3, 0xe0, 0xd0, 0x90, 0x38, 0x2e,
	0xbe, 0x03, 0xf3, 0x85, 0x21, 0x5a, 0x13, 0x2a, 0x7b, 0xe4, 0x90, 0xeb, 0x41, 0xff, 0xd4, 0x3e,
	0x09, 0xd5, 0x03, 0xba, 0xd1, 0xe4, 0xde, 0x5f, 0x2c, 0x91, 0x80, 0xcb, 0x6c, 0xe0, 0xc0, 0x17,
	0xd5, 0x4f, 0x29, 0xfa, 0x93, 0xa9, 0x62, 0xa2, 0x8e, 0x8a, 0xa4, 0xa3, 0xfe, 0x3a, 0x34, 0xda,
	0x61, 0x6f, 0xcd, 0x8c, 0x4c, 0x36, 0xf0, 0x65, 0x68, 0xf4, 0x33, 0x90, 0x0d, 0x2e, 0x9f, 0x8f,
	0x13, 0x19, 0xe2, 0x70, 0xfd, 0xcf, 0x2a, 0xb4, 0xca, 0x4d, 0x11, 0xfa, 0x54, 0x06, 0x12, 0x04,
	0xab, 0x9e, 0x45, 0x98, 0x6a, 0x55, 0x23, 0x01, 0xa9, 0xef, 0x48, 0x10, 0xd0, 0x1a, 0xc6, 0x5b,
	0x75, 0x84, 0xb4, 0x65, 0x98, 0x70, 0x12, 0xb7, 0x0c, 0x97, 0x82, 0x8d, 0xd3, 0xfa, 0xd0, 0x64,
	0xd6, 0x15, 0x14, 0xe2, 0x3e, 0xbb, 0x32, 0xb6, 0xcf, 0x42, 0x1f, 0x9d, 0x26, 0xf0, 0x40, 0xc7,
	0x15, 0x58, 0x2f, 0x76, 0xe1, 0x54, 0xe9, 0xd0, 0x12, 0x07, 0x3e, 0x2b, 0x3b, 0xf0, 0xcc, 0x60,
	0x55, 0xf2, 0x4e, 0xf4, 0x41, 0x5b, 0x27, 0x51, 0xdb, 0xbc, 0x7b, 0xc5, 0xb5, 0xda, 0xb6, 0xdb,
	0x21, 0xfb, 0x34, 0xda, 0x97, 0xa0, 0xc1, 0x8f, 0x0d, 0x52, 0x37, 0xd5, 0x0d, 0x11, 0x35, 0xf0,
	0x34, 0x21, 0x97, 0x0f, 0x95, 0x42, 0x3e, 0xe8, 0x97, 0x61, 0x5a, 0x9c, 0x8e, 0x15, 0x11, 0xf3,
	0x6e, 0x87, 0xec, 0x33, 0x85, 0x66, 0x0c, 0x0e, 0x31, 0x3c, 0x1b, 0xc1, 0x77, 0x18, 0x1c, 0xd2,
	0xff, 0xa0, 0xc2, 0x89, 0x82, 0xc8, 0xa1, 0x7f, 0xaf, 0x7c, 0xc4, 0x78, 0xa9, 0x0c, 0x8a, 0x97,
	0x09, 0x29, 0x5e, 0xf6, 0x60, 0x1e, 0x9d, 0x24, 0x4c, 0xdd, 0xaa, 0xb2, 0x00, 0x78, 0xa5, 0xac,
	0xe1, 0x2f, 0x0a, 0xc9, 0x7d, 0x2f, 0x60, 0xd1, 0xf9, 0x45, 0xbe, 0x8b, 0x04, 0x16, 0xca, 0x07,
	0x97, 0xb8, 0xff, 0x39, 0xd9, 0xfd, 0xff, 0x53, 0xe6, 0x7e, 0x51, 0x12, 0xc1, 0xff, 0xfb, 0x30,
	0x47, 0x17, 0xd5, 0x0e, 0x71, 0xad, 0x76, 0xd8, 0x63, 0x86, 0x5c, 0x82, 0x06, 0xd2, 0xb7, 0xc3,
	0x5e, 0xb6, 0x01, 0x14, 0x50, 0x74, 0x44, 0xd7, 0xb1, 0xe9, 0xe2, 0xc9, 0x46, 0xf0, 0x45, 0x4f,
	0x40, 0xd1, 0x02, 0x19, 0x12, 0x7e, 0xc2, 0x42, 0xad, 0x5b, 0x31, 0x52, 0x58, 0xff, 0x65, 0x0d,
	0x26, 0x79, 0x34, 0xb2, 0xa2, 0x48, 0xf7, 0xdc, 0xe9, 0xb2, 0x8a, 0x10, 0xf6, 0xb5, 0xdd, 0x83,
	0x2c, 0xbc, 0x10, 0x12, 0x8f, 0xb7, 0x2a, 0xf2, 0xf1, 0x56, 0x4e, 0xa6, 0x89, 0xa2, 0x4c, 0x39,
	0xbd, 0xaa, 0x45, 0xbd, 0x68, 0x1b, 0xc7, 0x3a, 0x9b, 0x2d, 0xc7, 0x8c, 0x76, 0xbc, 0xa0, 0xcf,
	0xb7, 0xd0, 0x55, 0xa3, 0x80, 0xa7, 0xad, 0x23, 0xe2, 0xd2, 0xde, 0x1f, 0x4b, 0x78, 0x0e, 0x4b,
	0x3b, 0x6d, 0xc4, 0x24, 0x7b, 0x00, 0x3c, 0xe7, 0x90, 0x91, 0x28, 0x5b, 0x18, 0xda, 0x9e, 0xcb,
	0xba, 0x50, 0x6c, 0xf5, 0x45, 0x14, 0xd5, 0xbc, 0x1f, 0xf6, 0xae, 0x06, 0x5e, 0x9f, 0x6f, 0xaf,
	0x12, 0x90, 0x69, 0xee, 0xb9, 0x51, 0xd2, 0xc1, 0xe2, 0x09, 0x87, 0x88, 0xa2, 0xb4, 0x1c, 0x64,
	0x7d, 0xfe, 0xb4, 0x91, 0x80, 0x34, 0x96, 0x42, 0xb2, 0xcf, 0x9b, 0x77, 0xfa, 0xa7, 0xe4, 0xb9,
	0x39, 0xd9, 0x73, 0xb9, 0x6e, 0xac, 0xc9, 0xbe, 0x8a, 0xdd, 0x58, 0xd6, 0xe2, 0xcc, 0x4b, 0x2d,
	0xce, 0x15, 0x98, 0xf4, 0x7c, 0x9a, 0xfe, 0x61, 0x4b, 0x63, 0xe9, 0xf2, 0x7f, 0x83, 0x17, 0xa8,
	0xe5, 0x4d, 0x1c, 0x89, 0x89, 0x91, 0xd0, 0x69, 0xd7, 0x61, 0xce, 0xdb, 0xd9, 0x71, 0x6c, 0x97,
	0x6c, 0xc5, 0xe1, 0x2e, 0xdb, 0x6a, 0x9f, 0x60, 0xc1, 0xae, 0x97, 0x35, 0x11, 0xf2, 0x48, 0x23,
	0x4f, 0x4a, 0x3b, 0x3f, 0x33, 0xc2, 0x4d, 0x0e, 0x5b, 0xe0, 0x4e, 0xb2, 0x05, 0x4e, 0xc2, 0xb1,
	0x73, 0x42, 0x61, 0xa1, 0x3f, 0xc5, 0x0c, 0x27, 0xa2, 0x90, 0x4b, 0x64, 0x76, 0x77, 0x09, 0x3b,
	0x34, 0x6a, 0x2d, 0x60, 0xff, 0x28, 0xe2, 0x78, 0x77, 0xf7, 0x68, 0xd2, 0xdd, 0x2d, 0xbe, 0x08,
	0xd3, 0xa2, 0x82, 0x25, 0xc9, 0x7c, 0x52, 0x4c, 0xe6, 0x29, 0x31, 0x57, 0xbf, 0xad, 0xc0, 0x5c,
	0x4e, 0x35, 0x3a, 0x3a, 0xb2, 0x23, 0x87, 0x70, 0x0e, 0x08, 0xd0, 0xdd, 0x91, 0x45, 0xc2, 0x2e,
	0x4f, 0x1e, 0xf6, 0x37, 0x97, 0xa4, 0x92, 0x6e, 0xd9, 0x75, 0x98, 0xb6, 0x37, 0x3b, 0x94, 0x51,
	0xc7, 0x8b, 0x5d, 0x2b, 0x3d, 0x68, 0x17, 0x70, 0x6c, 0xdb, 0xbe, 0xd9, 0x59, 0x31, 0xad, 0x1e,
	0xc1, 0x6b, 0x97, 0x2a, 0x93, 0x49, 0x46, 0xea, 0x16, 0x4c, 0xdd, 0xb4, 0xfd, 0x70, 0xd5, 0xeb,
	0xf7, 0x69, 0x08, 0x58, 0x24, 0xa2, 0x7d, 0xbc, 0xc2, 0x0c, 0xc6, 0x21, 0x6a, 0x4d, 0x8b, 0xec,
	0x98, 0xb1, 0x13, 0xd1, 0xa1, 0xc9, 0x92, 0x21, 0xa0, 0xd8, 0x11, 0x42, 0xe8, 0xb9, 0x6b, 0x48,
	0x8d, 0x72, 0x0a, 0x18, 0xfd, 0xf7, 0x2a, 0x34, 0xd9, 0x8a, 0xb8, 0xca, 0x02, 0xce, 0x62, 0x44,
	0x97, 0xa0, 0xca, 0x16, 0x00, 0xde, 0x51, 0x0e, 0x3f, 0x77, 0xc1, 0xa1, 0xda, 0x65, 0xa8, 0x79,
	0x3e, 0x6b, 0x43, 0x71, 0xb9, 0x3c, 0x37, 0x88, 0x48, 0x3e, 0x5a, 0x37, 0x38, 0x95, 0x76, 0x15,
	0xa0, 0x9f, 0x75, 0x9d, 0xd8, 0x3c, 0x8c, 0xcb, 0x43, 0xa0, 0xa4, 0xc6, 0x4d, 0xeb, 0x62, 0x7a,
	0xbe, 0x5e, 0x31, 0x64, 0xa4, 0x76, 0x03, 0x66, 0x99, 0xd8, 0x9b, 0xc9, 0x01, 0x1c, 0xf3, 0xc1,
	0xf8, 0x33, 0xe6, 0xa8, 0xf5, 0x1f, 0x28, 0xdc, 0x8c, 0xf4, 0x6b, 0x87, 0xa0, 0xed, 0x33, 0x93,
	0x28, 0x47, 0x32, 0xc9, 0x22, 0x4c, 0xf5, 0x63, 0xe1, 0x3c, 0xb0, 0x62, 0xa4, 0x70, 0xe6, 0xa2,
	0xca, 0xd8, 0x2e, 0xd2, 0x7f, 0xa8, 0x40, 0xeb, 0x35, 0xcf, 0x76, 0xd9, 0x87, 0x2b, 0xbe, 0xef,
	0xf0, 0x6b, 0x98, 0x23, 0xfb, 0xfc, 0xd3, 0x50, 0x37, 0x91, 0x8d, 0x1b, 0x71, 0xb7, 0x8f, 0x71,
	0xc6, 0x97, 0xd1, 0x08, 0x07, 0x2d, 0x15, 0xf1, 0xa0, 0x45, 0x7f, 0x5f, 0x81, 0x59, 0x34, 0xca,
	0x1b, 0xb1, 0x1d, 0x1d, 0x59, 0xbe, 0x15, 0x98, 0xda, 0x8f, 0xed, 0xe8, 0x08, 0x51, 0x99, 0xd2,
	0x15, 0xe3, 0xa9, 0x52, 0x12, 0x4f, 0xfa, 0x4f, 0x15, 0x38, 0x9d, 0x37, 0xeb, 0x95, 0x6e, 0x97,
	0xf8, 0xf7, 0x33, 0xa5, 0xa4, 0x83, 0xa6, 0x89, 0xdc, 0x41, 0x53, 0xa9, 0xc8, 0x06, 0x79, 0x8f,
	0x74, 0x1f, 0x5c, 0x91, 0xbf, 0xa4, 0xc2, 0x63, 0xeb, 0x69, 0xe2, 0xdd, 0x0c, 0x4c, 0x37, 0xdc,
	0x21, 0x41, 0x70, 0x1f, 0xe5, 0xbd, 0x0e, 0x33, 0x2e, 0xb9, 0x93, 0xc9, 0xc4, 0xd3, 0x71, 0x5c,
	0x36, 0x32, 0xf1, 0x78, 0x6b, 0x97, 0xfe, 0x6f, 0x05, 0x9a, 0xc8, 0xe7, 0x75, 0xbb, 0xbb, 0x77,
	0x1f, 0x95, 0xbf, 0x01, 0xb3, 0x7b, 0x4c, 0x02, 0x0a, 0x1d, 0x61, 0xd9, 0xce, 0x51, 0x8f, 0xa9,
	0xfe, 0x87, 0x0a, 0xcc, 0x27, 0xb7, 0xbf, 0x07, 0xf6, 0xfd, 0x0c, 0xd6, 0x2d, 0x98, 0xc3, 0x93,
	0xf6, 0xa3, 0x1a, 0x20, 0x4f, 0x3e, 0xa6, 0x05, 0x7e, 0xa1, 0xc0, 0x1c, 0x72, 0x7a, 0xd5, 0x8d,
	0x48, 0x70, 0x64, 0xfd, 0xaf, 0x41, 0x83, 0xb8, 0x51, 0x60, 0xba, 0x47, 0x59, 0x21, 0x45, 0xd2,
	0x31, 0x17, 0xc9, 0xf7, 0x15, 0xd0, 0x18, 0xab, 0x35, 0x3b, 0xec, 0xdb, 0x61, 0x78, 0x1f, 0x5d,
	0x37, 0x9e, 0xc0, 0xdf, 0x53, 0xe1, 0xa4, 0xc0, 0xa5, 0x1d, 0x47, 0x0f, 0xba, 0xc8, 0xda, 0x1a,
	0xd4, 0x69, 0x8f, 0x20, 0xde, 0x83, 0x8e, 0x3b, 0x51, 0x46, 0x48, 0xbb, 0x58, 0x06, 0x74, 0x48,
	0xd7, 0x73, 0xad, 0x90, 0x35, 0x47, 0x33, 0x86, 0x84, 0xa3, 0xcb, 0xd0, 0xa2, 0xc0, 0x66, 0xd5,
	0x74, 0xbb, 0xc4, 0x79, 0x68, 0x4c, 0xa4, 0xff, 0x58, 0x81, 0x59, 0x1c, 0xf2, 0xe0, 0xab, 0x4c,
	0x6b, 0x3d, 0x06, 0xf2, 0xc7, 0xc6, 0x4b, 0x34, 0xbc, 0x16, 0x04, 0x2e, 0x62, 0x5f, 0xfd, 0xe0,
	0x86, 0xd6, 0x35, 0x68, 0x74, 0x77, 0x4d, 0xb7, 0x77, 0xa4, 0xe0, 0x12, 0x49, 0xf5, 0x08, 0x1e,
	0x15, 0x0f, 0xed, 0x57, 0xf1, 0x13, 0x53, 0xff, 0x99, 0x9c, 0x2a, 0x43, 0xdf, 0x39, 0xdc, 0x9b,
	0xd1, 0xf7, 0x60, 0x1e, 0x6f, 0x8a, 0x85, 0x9e, 0x50, 0x6b, 0xc1, 0xa4, 0x69, 0xe1, 0xd1, 0x85,
	0xc2, 0x88, 0x12, 0x50, 0x7e, 0x49, 0xc0, 0xdf, 0xa5, 0x65, 0x2f, 0x09, 0xce, 0x00, 0x98, 0x96,
	0xf5, 0x96, 0x17, 0x58, 0xb6, 0x9b, 0x34, 0xf8, 0x02, 0x46, 0x7f, 0x0d, 0xa6, 0xaf, 0x06, 0x5e,
	0xff, 0xa6, 0x70, 0xe7, 0x3b, 0xf4, 0x56, 0x5a, 0xbc, 0x2f, 0x56, 0xe5, 0xfb, 0x62, 0xfd, 0x5d,
	0x38, 0x55, 0x10, 0x9c, 0x19, 0x6b, 0x15, 0xaf, 0xb2, 0x93, 0x49, 0x78, 0xc8, 0x94, 0x9d, 0xe5,
	0x89, 0xb2, 0x18, 0x12, 0x91, 0xfe, 0x45, 0x05, 0x9e, 0x28, 0xb0, 0xbf, 0xe2, 0xfb, 0x81, 0x77,
	0xc0, 0x7d, 0x72, 0x1c, 0xd3, 0xc8, 0xcd, 0xaf, 0x9a, 0x6f, 0x7e, 0x4b, 0x85, 0x90, 0x1a, 0xf6,
	0x8f, 0x40, 0x88, 0x1f, 0x29, 0x30, 0xc7, 0x85, 0xb0, 0x2c, 0x3e, 0xed, 0x73, 0x50, 0xc3, 0xc7,
	0x34, 0x7c, 0xc2, 0x27, 0x4a, 0x27, 0x4c, 0x1e, 0x01, 0x19, 0x7c, 0x70, 0x31, 0x22, 0xd5, 0xb2,
	0x8c, 0x7a, 0x21, 0x0d, 0xf6, 0xb1, 0x9f, 0xbb, 0x70, 0x02, 0xfd, 0x33, 0x49, 0x30, 0xaf, 0x11,
	0x87, 0x1c, 0xa7, 0x8d, 0xf4, 0x5b, 0x30, 0xcb, 0x5e, 0xf6, 0x64, 0x36, 0x38, 0x16, 0xb6, 0x6f,
	0x41, 0x93, 0xb1, 0x3d, 0x76, 0x79, 0xd3, 0xec, 0xa0, 0xf6, 0x11, 0x97, 0x92, 0x63, 0xe1, 0xfe,
	0x34, 0x9c, 0x48, 0x6c, 0x8f, 0x2f, 0x62, 0x91, 0xf7, 0x80, 0xbb, 0x3d, 0xfd, 0x3b, 0x0a, 0x2c,
	0xac, 0x7a, 0xee, 0x01, 0x09, 0x42, 0xe9, 0x15, 0x2d, 0x92, 0xdc, 0x2a, 0xbb, 0x0e, 0x5c, 0x06,
	0xad, 0x2b, 0x50, 0xf0, 0xe3, 0x45, 0x95, 0x1d, 0x2f, 0x96, 0x7c, 0xd1, 0x9e, 0x85, 0x53, 0x31,
	0xe3, 0x7a, 0xcb, 0x0d, 0x88, 0x69, 0xb1, 0xf3, 0x34, 0x61, 0xd1, 0x2b, 0xff, 0xa8, 0xbf, 0x07,
	0x8b, 0xa2, 0x5c, 0x1d, 0x12, 0x6d, 0x05, 0xf6, 0x81, 0x20, 0x1b, 0x3f, 0x3b, 0x57, 0xa4, 0xb3,
	0xf3, 0xec, 0xac, 0x5d, 0x95, 0xce, 0xda, 0x4f, 0x43, 0xdd, 0x0e, 0x39, 0x03, 0x36, 0xef, 0x94,
	0x91, 0x21, 0x74, 0x13, 0xe6, 0xd1, 0xcb, 0xfc, 0x2e, 0x8b, 0x4d, 0xb1, 0x08, 0x53, 0x18, 0xba,
	0xe9, 0x24, 0x29, 0x3c, 0xf0, 0x66, 0x68, 0xe0, 0x3d, 0xa8, 0xde, 0x81, 0x79, 0xfe, 0xde, 0x67,
	0xcb, 0xec, 0xd9, 0x2e, 0xae, 0xe5, 0x67, 0x00, 0x7c, 0xb3, 0x97, 0xbc, 0x30, 0xc4, 0x1b, 0x3d,
	0x01, 0x43, 0xbf, 0x87, 0xbb, 0xde, 0x1d, 0xfe, 0x5d, 0xc5, 0xef, 0x19, 0x46, 0x7f, 0x13, 0x34,
	0x83, 0x84, 0xbe, 0xe7, 0x86, 0x44, 0xe0, 0xba, 0x04, 0x8d, 0xd5, 0x38, 0x08, 0x88, 0x4b, 0xa7,
	0x4a, 0x9e, 0xd0, 0x35, 0xba, 0x19, 0x8a, 0xf2, 0xed, 0x64, 0x7c, 0x6b, 0x05, 0xbe, 0x7f, 0xab,
	0x41, 0xbd, 0x63, 0xf7, 0x5c, 0xd3, 0x31, 0xc8, 0xbe, 0xf6, 0x32, 0xd4, 0x70, 0x67, 0xc4, 0x03,
	0xb2, 0xec, 0x34, 0x1a, 0x47, 0xe3, 0x16, 0xd0, 0x20, 0xfb, 0xd7, 0x1e, 0x31, 0x38, 0x8d, 0xf6,
	0x46, 0xf2, 0x2a, 0x6a, 0x03, 0x4f, 0xba, 0x78, 0x99, 0xfc, 0xff, 0x11, 0x4c, 0xf8, 0x68, 0xe4,
	0x25, 0x73, 0xa0, 0x02, 0x75, 0x59, 0xe7, 0xc4, 0x57, 0xa1, 0xc1, 0x02, 0x61, 0x83, 0xc5, 0x05,
	0x42, 0x1a, 0x4a, 0x6d, 0xb2, 0xb3, 0x20, 0xde, 0x10, 0x0c, 0xa6, 0xc6, 0x23, 0x23, 0x4e, 0x8d,
	0x34, 0x94, 0x7a, 0x37, 0x76, 0x7b, 0xb7, 0x7c, 0x7e, 0x44, 0x39, 0x98, 0xfa, 0x1a, 0x1b, 0xc6,
	0xa9, 0x91, 0x86, 0x52, 0x07, 0xac, 0x46, 0x30, 0xa3, 0x0f, 0xa3, 0xc6, 0x52, 0xc2, 0xa9, 0x91,
	0x46, 0x7b, 0x1b, 0x9a, 0x3d, 0x12, 0x19, 0x9e, 0xd7, 0x5f, 0x39, 0x5c, 0xe7, 0x37, 0x44, 0xf8,
	0xd0, 0xfb, 0xc2, 0x40, 0x3e, 0xeb, 0x39, 0x02, 0xe4, 0x58, 0xe0, 0xa3, 0x7d, 0x1e, 0x9e, 0xf0,
	0x5c, 0x8a, 0xda, 0x32, 0x83, 0xc8, 0xee, 0xda, 0xbe, 0xe9, 0x46, 0xab, 0x9e, 0xeb, 0xb2, 0x7a,
	0x66, 0x90, 0x7d, 0xfe, 0x14, 0xfc, 0xf9, 0x81, 0x13, 0x6d, 0x0e, 0xa3, 0xbe, 0xf6, 0x88, 0x31,
	0x9c, 0xbd, 0xf6, 0x55, 0x05, 0x96, 0x0a, 0x23, 0xd6, 0xec, 0xb0, 0x2b, 0xca, 0x80, 0xcf, 0xc8,
	0x5f, 0x18, 0x5f, 0x86, 0x1c, 0x83, 0x6b, 0x8f, 0x18, 0x23, 0x27, 0xe1, 0x56, 0xbe, 0xe9, 0xed,
	0x11, 0x77, 0xe5, 0x90, 0x8e, 0xdd, 0x58, 0x63, 0xb7, 0x51, 0x23, 0xac, 0x2c, 0x11, 0x64, 0x56,
	0x96, 0xd0, 0x2b, 0x75, 0x98, 0xf4, 0xcd, 0x43, 0xc7, 0x33, 0x2d, 0xfd, 0x1f, 0x13, 0x00, 0x89,
	0xab, 0x43, 0xd6, 0x11, 0x4b, 0x49, 0x76, 0x76, 0x64, 0x92, 0xf9, 0xce, 0xa1, 0x90, 0x66, 0x9d,
	0xf2, 0x34, 0xfb, 0xc4, 0xb8, 0x69, 0x86, 0xdc, 0x72, 0x89, 0x76, 0x39, 0x97, 0x68, 0x67, 0x47,
	0x26, 0x1a, 0x17, 0x8a, 0xa7, 0xda, 0xe5, 0x5c, 0xaa, 0x9d, 0x1d, 0x99, 0x6a, 0x9c, 0x9e, 0x27,
	0xdb, 0xe5, 0x5c, 0xb2, 0x9d, 0x1d, 0x99, 0x6c, 0x9c, 0x9e, 0xa7, 0xdb, 0xe5, 0x5c, 0xba, 0x9d,
	0x1d, 0x99, 0x6e, 0x9c, 0x9e, 0x27, 0xdc, 0xbb, 0x03, 0x13, 0x6e, 0xf9, 0x1e, 0x12, 0x0e, 0x79,
	0x16, 0x53, 0xee, 0xdd, 0x92, 0x40, 0x9b, 0x1a, 0xcd, 0x3d, 0x17, 0x68, 0x19, 0xf7, 0x81, 0xa1,
	0xf6, 0xe5, 0x0a, 0xcc, 0x32, 0x77, 0x63, 0x55, 0x76, 0x77, 0xbc, 0xe2, 0x5b, 0x55, 0xa5, 0xe4,
	0xad, 0xaa, 0x76, 0x01, 0xe6, 0x11, 0x41, 0x84, 0x7b, 0x44, 0x2c, 0xf4, 0xc5, 0x0f, 0xec, 0xe6,
	0x34, 0x0e, 0x23, 0xaf, 0xbf, 0x66, 0x46, 0x66, 0xb2, 0xc3, 0xc8, 0x30, 0xe2, 0xbd, 0xf6, 0x44,
	0xe1, 0x67, 0x1b, 0x01, 0xea, 0x5f, 0xe5, 0xd5, 0x9c, 0x41, 0x94, 0x22, 0xb2, 0xfb, 0xc4, 0x8b,
	0x23, 0x5e, 0xa4, 0x12, 0x10, 0x1f, 0x18, 0x5a, 0xb6, 0xc9, 0x6e, 0x83, 0xf9, 0xeb, 0xbb, 0x14,
	0xc1, 0xea, 0x6a, 0x76, 0xbb, 0xcd, 0x7f, 0x56, 0x91, 0x61, 0xc6, 0xb8, 0x89, 0x66, 0xbf, 0xd0,
	0xb1, 0x23, 0x5b, 0x7c, 0x95, 0x57, 0x35, 0x24, 0x1c, 0xed, 0x83, 0xb6, 0xe3, 0xf0, 0xf0, 0xba,
	0xed, 0x8a, 0xe6, 0x69, 0x60, 0x1f, 0x54, 0xfc, 0xa2, 0xff, 0x5d, 0x81, 0x13, 0xc2, 0xba, 0xd3,
	0x26, 0x91, 0xc9, 0xec, 0x22, 0xbd, 0xad, 0x56, 0xee, 0xed, 0x6d, 0xf5, 0x16, 0xcc, 0xf5, 0xe4,
	0x6d, 0xf9, 0x3d, 0xee, 0xa8, 0xf3, 0xe4, 0xd2, 0x43, 0xf1, 0xca, 0x3d, 0x3f, 0x14, 0xd7, 0xbf,
	0xa6, 0xc2, 0x5c, 0xae, 0x19, 0x18, 0xda, 0x49, 0x5d, 0x01, 0xb0, 0xd3, 0xd0, 0x1c, 0x72, 0x6b,
	0x25, 0xc7, 0xaf, 0x21, 0x10, 0x95, 0x5d, 0x9b, 0x57, 0x8e, 0x7e, 0x6d, 0x7e, 0x0d, 0x1a, 0x7e,
	0xe6, 0xa4, 0x21, 0x87, 0x06, 0x25, 0xae, 0x34, 0x44, 0x52, 0xfd, 0xeb, 0x0a, 0xcc, 0x17, 0x96,
	0x6c, 0x76, 0x99, 0x4d, 0x13, 0x35, 0xbd, 0xcc, 0xa6, 0x80, 0x90, 0x01, 0x6a, 0x3e, 0x03, 0x1c,
	0xfb, 0x40, 0xfc, 0xd9, 0x0a, 0x07, 0x07, 0x44, 0xdf, 0xc4, 0xc0, 0xe8, 0xfb, 0x86, 0x0a, 0x0b,
	0xe5, 0x0d, 0xd6, 0xc3, 0xea, 0x9f, 0x6f, 0x2a, 0xd0, 0x1a, 0x54, 0x0b, 0xef, 0x9b, 0x9b, 0xb2,
	0xfc, 0x49, 0x7b, 0xd7, 0x87, 0xd5, 0x3f, 0x27, 0x92, 0xf4, 0x11, 0x9a, 0x0b, 0xfd, 0xe7, 0xa9,
	0x7d, 0xd2, 0xee, 0xfc, 0x21, 0xb5, 0x8f, 0x76, 0x1e, 0x9a, 0xa8, 0xa6, 0xf0, 0x92, 0x0b, 0x37,
	0x7b, 0x05, 0xbc, 0xfe, 0x4e, 0x62, 0x4b, 0xa1, 0xd1, 0x3a, 0xae, 0x18, 0xd7, 0x7f, 0xab, 0x24,
	0x3e, 0x49, 0xf7, 0x3c, 0x1f, 0x2b, 0x9f, 0x64, 0x91, 0x26, 0xb4, 0x91, 0x42, 0xa4, 0xa5, 0x7b,
	0xb1, 0xff, 0x46, 0xda, 0xe8, 0x48, 0x4b, 0x6d, 0x29, 0xb4, 0xd4, 0xfa, 0xf7, 0x15, 0x78, 0x6c,
	0xe0, 0x7e, 0x74, 0xa8, 0x55, 0x85, 0xa6, 0x51, 0x95, 0x9b, 0xc6, 0x9c, 0x7a, 0x95, 0xa3, 0x2f,
	0x34, 0x1f, 0x28, 0xf0, 0xf8, 0x90, 0xe6, 0x3d, 0xe7, 0x59, 0xe5, 0x28, 0x9e, 0xcd, 0x09, 0xab,
	0x0e, 0xbc, 0x98, 0x1e, 0xe9, 0x8b, 0x2c, 0x3d, 0x2b, 0x62, 0x7a, 0xea, 0x7f, 0x54, 0xe0, 0xc9,
	0x31, 0x76, 0xe2, 0x0f, 0x96, 0x32, 0x03, 0x9f, 0xba, 0xea, 0x7f, 0x52, 0xe0, 0xdc, 0x78, 0x9b,
	0xfa, 0x8f, 0x8b, 0x46, 0xbf, 0x16, 0x73, 0x20, 0x7f, 0x5a, 0x20, 0xb8, 0x55, 0x91, 0x56, 0x5d,
	0x31, 0x37, 0xd4, 0x5c, 0x6e, 0x1c, 0x5b, 0x06, 0xe4, 0x5f, 0xb4, 0x4f, 0x14, 0x5f, 0xb4, 0xb7,
	0x85, 0x14, 0x29, 0xee, 0x40, 0x07, 0x94, 0x12, 0xa1, 0x64, 0xa8, 0x72, 0xc9, 0xf8, 0x02, 0xcc,
	0xac, 0x11, 0xa7, 0x1d, 0xf6, 0x92, 0xdf, 0x9e, 0x1c, 0xeb, 0x69, 0xeb, 0x18, 0xfa, 0xac, 0xc0,
	0xac, 0x28, 0xc0, 0x51, 0x7e, 0x5b, 0xb1, 0x72, 0xe1, 0xed, 0xf3, 0x9b, 0x3e, 0x71, 0x6f, 0x6f,
	0xb4, 0x0b, 0xff, 0xc3, 0xe4, 0xa5, 0x82, 0x13, 0xb6, 0x6b, 0xec, 0xfb, 0x33, 0xff, 0x09, 0x00,
	0x00, 0xff, 0xff, 0xbc, 0x23, 0xe8, 0x5d, 0x23, 0x45, 0x00, 0x00,
}
