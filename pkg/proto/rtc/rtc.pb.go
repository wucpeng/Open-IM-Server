// Code generated by protoc-gen-go. DO NOT EDIT.
// source: rtc/rtc.proto

/*
Package rtc is a generated protocol buffer package.

It is generated from these files:
	rtc/rtc.proto

It has these top-level messages:
	CommonResp
	MsgData
	GroupInfo
	GroupMemberFullInfo
	ParticipantMetaData
	PublicUserInfo
	GetJoinTokenReq
	GetJoinTokenResp
	OfflinePushInfo
	SignalReq
	SignalResp
	InvitationInfo
	SignalInviteReq
	SignalInviteReply
	SignalInviteInGroupReq
	SignalInviteInGroupReply
	SignalCancelReq
	SignalCancelReply
	SignalAcceptReq
	SignalAcceptReply
	SignalHungUpReq
	SignalHungUpReply
	SignalRejectReq
	SignalRejectReply
	SignalGetRoomByGroupIDReq
	SignalGetRoomByGroupIDReply
	SignalOnRoomParticipantConnectedReq
	SignalOnRoomParticipantDisconnectedReq
	SignalGetTokenByRoomIDReq
	SignalGetTokenByRoomIDReply
	SignalMessageAssembleReq
	SignalMessageAssembleResp
	SignalGetRoomsReq
	SignalGetRoomsResp
*/
package rtc

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type CommonResp struct {
	ErrCode int32  `protobuf:"varint,1,opt,name=errCode" json:"errCode,omitempty"`
	ErrMsg  string `protobuf:"bytes,2,opt,name=errMsg" json:"errMsg,omitempty"`
}

func (m *CommonResp) Reset()                    { *m = CommonResp{} }
func (m *CommonResp) String() string            { return proto.CompactTextString(m) }
func (*CommonResp) ProtoMessage()               {}
func (*CommonResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *CommonResp) GetErrCode() int32 {
	if m != nil {
		return m.ErrCode
	}
	return 0
}

func (m *CommonResp) GetErrMsg() string {
	if m != nil {
		return m.ErrMsg
	}
	return ""
}

type MsgData struct {
	SendID           string           `protobuf:"bytes,1,opt,name=sendID" json:"sendID,omitempty"`
	RecvID           string           `protobuf:"bytes,2,opt,name=recvID" json:"recvID,omitempty"`
	GroupID          string           `protobuf:"bytes,3,opt,name=groupID" json:"groupID,omitempty"`
	ClientMsgID      string           `protobuf:"bytes,4,opt,name=clientMsgID" json:"clientMsgID,omitempty"`
	ServerMsgID      string           `protobuf:"bytes,5,opt,name=serverMsgID" json:"serverMsgID,omitempty"`
	SenderPlatformID int32            `protobuf:"varint,6,opt,name=senderPlatformID" json:"senderPlatformID,omitempty"`
	SenderNickname   string           `protobuf:"bytes,7,opt,name=senderNickname" json:"senderNickname,omitempty"`
	SenderFaceURL    string           `protobuf:"bytes,8,opt,name=senderFaceURL" json:"senderFaceURL,omitempty"`
	SessionType      int32            `protobuf:"varint,9,opt,name=sessionType" json:"sessionType,omitempty"`
	MsgFrom          int32            `protobuf:"varint,10,opt,name=msgFrom" json:"msgFrom,omitempty"`
	ContentType      int32            `protobuf:"varint,11,opt,name=contentType" json:"contentType,omitempty"`
	Content          []byte           `protobuf:"bytes,12,opt,name=content,proto3" json:"content,omitempty"`
	Seq              uint32           `protobuf:"varint,14,opt,name=seq" json:"seq,omitempty"`
	SendTime         int64            `protobuf:"varint,15,opt,name=sendTime" json:"sendTime,omitempty"`
	CreateTime       int64            `protobuf:"varint,16,opt,name=createTime" json:"createTime,omitempty"`
	Status           int32            `protobuf:"varint,17,opt,name=status" json:"status,omitempty"`
	Options          map[string]bool  `protobuf:"bytes,18,rep,name=options" json:"options,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	OfflinePushInfo  *OfflinePushInfo `protobuf:"bytes,19,opt,name=offlinePushInfo" json:"offlinePushInfo,omitempty"`
}

func (m *MsgData) Reset()                    { *m = MsgData{} }
func (m *MsgData) String() string            { return proto.CompactTextString(m) }
func (*MsgData) ProtoMessage()               {}
func (*MsgData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *MsgData) GetSendID() string {
	if m != nil {
		return m.SendID
	}
	return ""
}

func (m *MsgData) GetRecvID() string {
	if m != nil {
		return m.RecvID
	}
	return ""
}

func (m *MsgData) GetGroupID() string {
	if m != nil {
		return m.GroupID
	}
	return ""
}

func (m *MsgData) GetClientMsgID() string {
	if m != nil {
		return m.ClientMsgID
	}
	return ""
}

func (m *MsgData) GetServerMsgID() string {
	if m != nil {
		return m.ServerMsgID
	}
	return ""
}

func (m *MsgData) GetSenderPlatformID() int32 {
	if m != nil {
		return m.SenderPlatformID
	}
	return 0
}

func (m *MsgData) GetSenderNickname() string {
	if m != nil {
		return m.SenderNickname
	}
	return ""
}

func (m *MsgData) GetSenderFaceURL() string {
	if m != nil {
		return m.SenderFaceURL
	}
	return ""
}

func (m *MsgData) GetSessionType() int32 {
	if m != nil {
		return m.SessionType
	}
	return 0
}

func (m *MsgData) GetMsgFrom() int32 {
	if m != nil {
		return m.MsgFrom
	}
	return 0
}

func (m *MsgData) GetContentType() int32 {
	if m != nil {
		return m.ContentType
	}
	return 0
}

func (m *MsgData) GetContent() []byte {
	if m != nil {
		return m.Content
	}
	return nil
}

func (m *MsgData) GetSeq() uint32 {
	if m != nil {
		return m.Seq
	}
	return 0
}

func (m *MsgData) GetSendTime() int64 {
	if m != nil {
		return m.SendTime
	}
	return 0
}

func (m *MsgData) GetCreateTime() int64 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

func (m *MsgData) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *MsgData) GetOptions() map[string]bool {
	if m != nil {
		return m.Options
	}
	return nil
}

func (m *MsgData) GetOfflinePushInfo() *OfflinePushInfo {
	if m != nil {
		return m.OfflinePushInfo
	}
	return nil
}

type GroupInfo struct {
	GroupID       string `protobuf:"bytes,1,opt,name=groupID" json:"groupID,omitempty"`
	GroupName     string `protobuf:"bytes,2,opt,name=groupName" json:"groupName,omitempty"`
	Notification  string `protobuf:"bytes,3,opt,name=notification" json:"notification,omitempty"`
	Introduction  string `protobuf:"bytes,4,opt,name=introduction" json:"introduction,omitempty"`
	FaceURL       string `protobuf:"bytes,5,opt,name=faceURL" json:"faceURL,omitempty"`
	OwnerUserID   string `protobuf:"bytes,6,opt,name=ownerUserID" json:"ownerUserID,omitempty"`
	CreateTime    uint32 `protobuf:"varint,7,opt,name=createTime" json:"createTime,omitempty"`
	MemberCount   uint32 `protobuf:"varint,8,opt,name=memberCount" json:"memberCount,omitempty"`
	Ex            string `protobuf:"bytes,9,opt,name=ex" json:"ex,omitempty"`
	Status        int32  `protobuf:"varint,10,opt,name=status" json:"status,omitempty"`
	CreatorUserID string `protobuf:"bytes,11,opt,name=creatorUserID" json:"creatorUserID,omitempty"`
	GroupType     int32  `protobuf:"varint,12,opt,name=groupType" json:"groupType,omitempty"`
}

func (m *GroupInfo) Reset()                    { *m = GroupInfo{} }
func (m *GroupInfo) String() string            { return proto.CompactTextString(m) }
func (*GroupInfo) ProtoMessage()               {}
func (*GroupInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *GroupInfo) GetGroupID() string {
	if m != nil {
		return m.GroupID
	}
	return ""
}

func (m *GroupInfo) GetGroupName() string {
	if m != nil {
		return m.GroupName
	}
	return ""
}

func (m *GroupInfo) GetNotification() string {
	if m != nil {
		return m.Notification
	}
	return ""
}

func (m *GroupInfo) GetIntroduction() string {
	if m != nil {
		return m.Introduction
	}
	return ""
}

func (m *GroupInfo) GetFaceURL() string {
	if m != nil {
		return m.FaceURL
	}
	return ""
}

func (m *GroupInfo) GetOwnerUserID() string {
	if m != nil {
		return m.OwnerUserID
	}
	return ""
}

func (m *GroupInfo) GetCreateTime() uint32 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

func (m *GroupInfo) GetMemberCount() uint32 {
	if m != nil {
		return m.MemberCount
	}
	return 0
}

func (m *GroupInfo) GetEx() string {
	if m != nil {
		return m.Ex
	}
	return ""
}

func (m *GroupInfo) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *GroupInfo) GetCreatorUserID() string {
	if m != nil {
		return m.CreatorUserID
	}
	return ""
}

func (m *GroupInfo) GetGroupType() int32 {
	if m != nil {
		return m.GroupType
	}
	return 0
}

type GroupMemberFullInfo struct {
	GroupID        string `protobuf:"bytes,1,opt,name=groupID" json:"groupID,omitempty"`
	UserID         string `protobuf:"bytes,2,opt,name=userID" json:"userID,omitempty"`
	RoleLevel      int32  `protobuf:"varint,3,opt,name=roleLevel" json:"roleLevel,omitempty"`
	JoinTime       int32  `protobuf:"varint,4,opt,name=joinTime" json:"joinTime,omitempty"`
	Nickname       string `protobuf:"bytes,5,opt,name=nickname" json:"nickname,omitempty"`
	FaceURL        string `protobuf:"bytes,6,opt,name=faceURL" json:"faceURL,omitempty"`
	AppMangerLevel int32  `protobuf:"varint,7,opt,name=appMangerLevel" json:"appMangerLevel,omitempty"`
	JoinSource     int32  `protobuf:"varint,8,opt,name=joinSource" json:"joinSource,omitempty"`
	OperatorUserID string `protobuf:"bytes,9,opt,name=operatorUserID" json:"operatorUserID,omitempty"`
	Ex             string `protobuf:"bytes,10,opt,name=ex" json:"ex,omitempty"`
}

func (m *GroupMemberFullInfo) Reset()                    { *m = GroupMemberFullInfo{} }
func (m *GroupMemberFullInfo) String() string            { return proto.CompactTextString(m) }
func (*GroupMemberFullInfo) ProtoMessage()               {}
func (*GroupMemberFullInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *GroupMemberFullInfo) GetGroupID() string {
	if m != nil {
		return m.GroupID
	}
	return ""
}

func (m *GroupMemberFullInfo) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *GroupMemberFullInfo) GetRoleLevel() int32 {
	if m != nil {
		return m.RoleLevel
	}
	return 0
}

func (m *GroupMemberFullInfo) GetJoinTime() int32 {
	if m != nil {
		return m.JoinTime
	}
	return 0
}

func (m *GroupMemberFullInfo) GetNickname() string {
	if m != nil {
		return m.Nickname
	}
	return ""
}

func (m *GroupMemberFullInfo) GetFaceURL() string {
	if m != nil {
		return m.FaceURL
	}
	return ""
}

func (m *GroupMemberFullInfo) GetAppMangerLevel() int32 {
	if m != nil {
		return m.AppMangerLevel
	}
	return 0
}

func (m *GroupMemberFullInfo) GetJoinSource() int32 {
	if m != nil {
		return m.JoinSource
	}
	return 0
}

func (m *GroupMemberFullInfo) GetOperatorUserID() string {
	if m != nil {
		return m.OperatorUserID
	}
	return ""
}

func (m *GroupMemberFullInfo) GetEx() string {
	if m != nil {
		return m.Ex
	}
	return ""
}

type ParticipantMetaData struct {
	GroupInfo       *GroupInfo           `protobuf:"bytes,1,opt,name=groupInfo" json:"groupInfo,omitempty"`
	GroupMemberInfo *GroupMemberFullInfo `protobuf:"bytes,2,opt,name=groupMemberInfo" json:"groupMemberInfo,omitempty"`
	UserInfo        *PublicUserInfo      `protobuf:"bytes,3,opt,name=userInfo" json:"userInfo,omitempty"`
}

func (m *ParticipantMetaData) Reset()                    { *m = ParticipantMetaData{} }
func (m *ParticipantMetaData) String() string            { return proto.CompactTextString(m) }
func (*ParticipantMetaData) ProtoMessage()               {}
func (*ParticipantMetaData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *ParticipantMetaData) GetGroupInfo() *GroupInfo {
	if m != nil {
		return m.GroupInfo
	}
	return nil
}

func (m *ParticipantMetaData) GetGroupMemberInfo() *GroupMemberFullInfo {
	if m != nil {
		return m.GroupMemberInfo
	}
	return nil
}

func (m *ParticipantMetaData) GetUserInfo() *PublicUserInfo {
	if m != nil {
		return m.UserInfo
	}
	return nil
}

type PublicUserInfo struct {
	UserID   string `protobuf:"bytes,1,opt,name=userID" json:"userID,omitempty"`
	Nickname string `protobuf:"bytes,2,opt,name=nickname" json:"nickname,omitempty"`
	FaceURL  string `protobuf:"bytes,3,opt,name=faceURL" json:"faceURL,omitempty"`
	Gender   int32  `protobuf:"varint,4,opt,name=gender" json:"gender,omitempty"`
	Ex       string `protobuf:"bytes,5,opt,name=ex" json:"ex,omitempty"`
}

func (m *PublicUserInfo) Reset()                    { *m = PublicUserInfo{} }
func (m *PublicUserInfo) String() string            { return proto.CompactTextString(m) }
func (*PublicUserInfo) ProtoMessage()               {}
func (*PublicUserInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *PublicUserInfo) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *PublicUserInfo) GetNickname() string {
	if m != nil {
		return m.Nickname
	}
	return ""
}

func (m *PublicUserInfo) GetFaceURL() string {
	if m != nil {
		return m.FaceURL
	}
	return ""
}

func (m *PublicUserInfo) GetGender() int32 {
	if m != nil {
		return m.Gender
	}
	return 0
}

func (m *PublicUserInfo) GetEx() string {
	if m != nil {
		return m.Ex
	}
	return ""
}

type GetJoinTokenReq struct {
	Room        string               `protobuf:"bytes,1,opt,name=room" json:"room,omitempty"`
	Identity    string               `protobuf:"bytes,2,opt,name=identity" json:"identity,omitempty"`
	MetaData    *ParticipantMetaData `protobuf:"bytes,3,opt,name=metaData" json:"metaData,omitempty"`
	OperationID string               `protobuf:"bytes,4,opt,name=operationID" json:"operationID,omitempty"`
}

func (m *GetJoinTokenReq) Reset()                    { *m = GetJoinTokenReq{} }
func (m *GetJoinTokenReq) String() string            { return proto.CompactTextString(m) }
func (*GetJoinTokenReq) ProtoMessage()               {}
func (*GetJoinTokenReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *GetJoinTokenReq) GetRoom() string {
	if m != nil {
		return m.Room
	}
	return ""
}

func (m *GetJoinTokenReq) GetIdentity() string {
	if m != nil {
		return m.Identity
	}
	return ""
}

func (m *GetJoinTokenReq) GetMetaData() *ParticipantMetaData {
	if m != nil {
		return m.MetaData
	}
	return nil
}

func (m *GetJoinTokenReq) GetOperationID() string {
	if m != nil {
		return m.OperationID
	}
	return ""
}

type GetJoinTokenResp struct {
	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=CommonResp,json=commonResp" json:"CommonResp,omitempty"`
	Jwt        string      `protobuf:"bytes,2,opt,name=jwt" json:"jwt,omitempty"`
	LiveURL    string      `protobuf:"bytes,3,opt,name=liveURL" json:"liveURL,omitempty"`
}

func (m *GetJoinTokenResp) Reset()                    { *m = GetJoinTokenResp{} }
func (m *GetJoinTokenResp) String() string            { return proto.CompactTextString(m) }
func (*GetJoinTokenResp) ProtoMessage()               {}
func (*GetJoinTokenResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *GetJoinTokenResp) GetCommonResp() *CommonResp {
	if m != nil {
		return m.CommonResp
	}
	return nil
}

func (m *GetJoinTokenResp) GetJwt() string {
	if m != nil {
		return m.Jwt
	}
	return ""
}

func (m *GetJoinTokenResp) GetLiveURL() string {
	if m != nil {
		return m.LiveURL
	}
	return ""
}

type OfflinePushInfo struct {
	Title         string `protobuf:"bytes,1,opt,name=title" json:"title,omitempty"`
	Desc          string `protobuf:"bytes,2,opt,name=desc" json:"desc,omitempty"`
	Ex            string `protobuf:"bytes,3,opt,name=ex" json:"ex,omitempty"`
	IOSPushSound  string `protobuf:"bytes,4,opt,name=iOSPushSound" json:"iOSPushSound,omitempty"`
	IOSBadgeCount bool   `protobuf:"varint,5,opt,name=iOSBadgeCount" json:"iOSBadgeCount,omitempty"`
}

func (m *OfflinePushInfo) Reset()                    { *m = OfflinePushInfo{} }
func (m *OfflinePushInfo) String() string            { return proto.CompactTextString(m) }
func (*OfflinePushInfo) ProtoMessage()               {}
func (*OfflinePushInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *OfflinePushInfo) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *OfflinePushInfo) GetDesc() string {
	if m != nil {
		return m.Desc
	}
	return ""
}

func (m *OfflinePushInfo) GetEx() string {
	if m != nil {
		return m.Ex
	}
	return ""
}

func (m *OfflinePushInfo) GetIOSPushSound() string {
	if m != nil {
		return m.IOSPushSound
	}
	return ""
}

func (m *OfflinePushInfo) GetIOSBadgeCount() bool {
	if m != nil {
		return m.IOSBadgeCount
	}
	return false
}

type SignalReq struct {
	// Types that are valid to be assigned to Payload:
	//	*SignalReq_Invite
	//	*SignalReq_InviteInGroup
	//	*SignalReq_Cancel
	//	*SignalReq_Accept
	//	*SignalReq_HungUp
	//	*SignalReq_Reject
	//	*SignalReq_GetRoomByGroupID
	//	*SignalReq_OnRoomParticipantConnectedReq
	//	*SignalReq_OnRoomParticipantDisconnectedReq
	//	*SignalReq_GetTokenByRoomID
	Payload isSignalReq_Payload `protobuf_oneof:"payload"`
}

func (m *SignalReq) Reset()                    { *m = SignalReq{} }
func (m *SignalReq) String() string            { return proto.CompactTextString(m) }
func (*SignalReq) ProtoMessage()               {}
func (*SignalReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

type isSignalReq_Payload interface{ isSignalReq_Payload() }

type SignalReq_Invite struct {
	Invite *SignalInviteReq `protobuf:"bytes,1,opt,name=invite,oneof"`
}
type SignalReq_InviteInGroup struct {
	InviteInGroup *SignalInviteInGroupReq `protobuf:"bytes,2,opt,name=inviteInGroup,oneof"`
}
type SignalReq_Cancel struct {
	Cancel *SignalCancelReq `protobuf:"bytes,3,opt,name=cancel,oneof"`
}
type SignalReq_Accept struct {
	Accept *SignalAcceptReq `protobuf:"bytes,4,opt,name=accept,oneof"`
}
type SignalReq_HungUp struct {
	HungUp *SignalHungUpReq `protobuf:"bytes,5,opt,name=hungUp,oneof"`
}
type SignalReq_Reject struct {
	Reject *SignalRejectReq `protobuf:"bytes,6,opt,name=reject,oneof"`
}
type SignalReq_GetRoomByGroupID struct {
	GetRoomByGroupID *SignalGetRoomByGroupIDReq `protobuf:"bytes,7,opt,name=getRoomByGroupID,oneof"`
}
type SignalReq_OnRoomParticipantConnectedReq struct {
	OnRoomParticipantConnectedReq *SignalOnRoomParticipantConnectedReq `protobuf:"bytes,8,opt,name=onRoomParticipantConnectedReq,oneof"`
}
type SignalReq_OnRoomParticipantDisconnectedReq struct {
	OnRoomParticipantDisconnectedReq *SignalOnRoomParticipantDisconnectedReq `protobuf:"bytes,9,opt,name=onRoomParticipantDisconnectedReq,oneof"`
}
type SignalReq_GetTokenByRoomID struct {
	GetTokenByRoomID *SignalGetTokenByRoomIDReq `protobuf:"bytes,10,opt,name=getTokenByRoomID,oneof"`
}

func (*SignalReq_Invite) isSignalReq_Payload()                           {}
func (*SignalReq_InviteInGroup) isSignalReq_Payload()                    {}
func (*SignalReq_Cancel) isSignalReq_Payload()                           {}
func (*SignalReq_Accept) isSignalReq_Payload()                           {}
func (*SignalReq_HungUp) isSignalReq_Payload()                           {}
func (*SignalReq_Reject) isSignalReq_Payload()                           {}
func (*SignalReq_GetRoomByGroupID) isSignalReq_Payload()                 {}
func (*SignalReq_OnRoomParticipantConnectedReq) isSignalReq_Payload()    {}
func (*SignalReq_OnRoomParticipantDisconnectedReq) isSignalReq_Payload() {}
func (*SignalReq_GetTokenByRoomID) isSignalReq_Payload()                 {}

func (m *SignalReq) GetPayload() isSignalReq_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *SignalReq) GetInvite() *SignalInviteReq {
	if x, ok := m.GetPayload().(*SignalReq_Invite); ok {
		return x.Invite
	}
	return nil
}

func (m *SignalReq) GetInviteInGroup() *SignalInviteInGroupReq {
	if x, ok := m.GetPayload().(*SignalReq_InviteInGroup); ok {
		return x.InviteInGroup
	}
	return nil
}

func (m *SignalReq) GetCancel() *SignalCancelReq {
	if x, ok := m.GetPayload().(*SignalReq_Cancel); ok {
		return x.Cancel
	}
	return nil
}

func (m *SignalReq) GetAccept() *SignalAcceptReq {
	if x, ok := m.GetPayload().(*SignalReq_Accept); ok {
		return x.Accept
	}
	return nil
}

func (m *SignalReq) GetHungUp() *SignalHungUpReq {
	if x, ok := m.GetPayload().(*SignalReq_HungUp); ok {
		return x.HungUp
	}
	return nil
}

func (m *SignalReq) GetReject() *SignalRejectReq {
	if x, ok := m.GetPayload().(*SignalReq_Reject); ok {
		return x.Reject
	}
	return nil
}

func (m *SignalReq) GetGetRoomByGroupID() *SignalGetRoomByGroupIDReq {
	if x, ok := m.GetPayload().(*SignalReq_GetRoomByGroupID); ok {
		return x.GetRoomByGroupID
	}
	return nil
}

func (m *SignalReq) GetOnRoomParticipantConnectedReq() *SignalOnRoomParticipantConnectedReq {
	if x, ok := m.GetPayload().(*SignalReq_OnRoomParticipantConnectedReq); ok {
		return x.OnRoomParticipantConnectedReq
	}
	return nil
}

func (m *SignalReq) GetOnRoomParticipantDisconnectedReq() *SignalOnRoomParticipantDisconnectedReq {
	if x, ok := m.GetPayload().(*SignalReq_OnRoomParticipantDisconnectedReq); ok {
		return x.OnRoomParticipantDisconnectedReq
	}
	return nil
}

func (m *SignalReq) GetGetTokenByRoomID() *SignalGetTokenByRoomIDReq {
	if x, ok := m.GetPayload().(*SignalReq_GetTokenByRoomID); ok {
		return x.GetTokenByRoomID
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*SignalReq) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _SignalReq_OneofMarshaler, _SignalReq_OneofUnmarshaler, _SignalReq_OneofSizer, []interface{}{
		(*SignalReq_Invite)(nil),
		(*SignalReq_InviteInGroup)(nil),
		(*SignalReq_Cancel)(nil),
		(*SignalReq_Accept)(nil),
		(*SignalReq_HungUp)(nil),
		(*SignalReq_Reject)(nil),
		(*SignalReq_GetRoomByGroupID)(nil),
		(*SignalReq_OnRoomParticipantConnectedReq)(nil),
		(*SignalReq_OnRoomParticipantDisconnectedReq)(nil),
		(*SignalReq_GetTokenByRoomID)(nil),
	}
}

func _SignalReq_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*SignalReq)
	// payload
	switch x := m.Payload.(type) {
	case *SignalReq_Invite:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Invite); err != nil {
			return err
		}
	case *SignalReq_InviteInGroup:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.InviteInGroup); err != nil {
			return err
		}
	case *SignalReq_Cancel:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Cancel); err != nil {
			return err
		}
	case *SignalReq_Accept:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Accept); err != nil {
			return err
		}
	case *SignalReq_HungUp:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.HungUp); err != nil {
			return err
		}
	case *SignalReq_Reject:
		b.EncodeVarint(6<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Reject); err != nil {
			return err
		}
	case *SignalReq_GetRoomByGroupID:
		b.EncodeVarint(7<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.GetRoomByGroupID); err != nil {
			return err
		}
	case *SignalReq_OnRoomParticipantConnectedReq:
		b.EncodeVarint(8<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.OnRoomParticipantConnectedReq); err != nil {
			return err
		}
	case *SignalReq_OnRoomParticipantDisconnectedReq:
		b.EncodeVarint(9<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.OnRoomParticipantDisconnectedReq); err != nil {
			return err
		}
	case *SignalReq_GetTokenByRoomID:
		b.EncodeVarint(10<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.GetTokenByRoomID); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("SignalReq.Payload has unexpected type %T", x)
	}
	return nil
}

func _SignalReq_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*SignalReq)
	switch tag {
	case 1: // payload.invite
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SignalInviteReq)
		err := b.DecodeMessage(msg)
		m.Payload = &SignalReq_Invite{msg}
		return true, err
	case 2: // payload.inviteInGroup
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SignalInviteInGroupReq)
		err := b.DecodeMessage(msg)
		m.Payload = &SignalReq_InviteInGroup{msg}
		return true, err
	case 3: // payload.cancel
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SignalCancelReq)
		err := b.DecodeMessage(msg)
		m.Payload = &SignalReq_Cancel{msg}
		return true, err
	case 4: // payload.accept
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SignalAcceptReq)
		err := b.DecodeMessage(msg)
		m.Payload = &SignalReq_Accept{msg}
		return true, err
	case 5: // payload.hungUp
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SignalHungUpReq)
		err := b.DecodeMessage(msg)
		m.Payload = &SignalReq_HungUp{msg}
		return true, err
	case 6: // payload.reject
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SignalRejectReq)
		err := b.DecodeMessage(msg)
		m.Payload = &SignalReq_Reject{msg}
		return true, err
	case 7: // payload.getRoomByGroupID
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SignalGetRoomByGroupIDReq)
		err := b.DecodeMessage(msg)
		m.Payload = &SignalReq_GetRoomByGroupID{msg}
		return true, err
	case 8: // payload.onRoomParticipantConnectedReq
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SignalOnRoomParticipantConnectedReq)
		err := b.DecodeMessage(msg)
		m.Payload = &SignalReq_OnRoomParticipantConnectedReq{msg}
		return true, err
	case 9: // payload.onRoomParticipantDisconnectedReq
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SignalOnRoomParticipantDisconnectedReq)
		err := b.DecodeMessage(msg)
		m.Payload = &SignalReq_OnRoomParticipantDisconnectedReq{msg}
		return true, err
	case 10: // payload.getTokenByRoomID
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SignalGetTokenByRoomIDReq)
		err := b.DecodeMessage(msg)
		m.Payload = &SignalReq_GetTokenByRoomID{msg}
		return true, err
	default:
		return false, nil
	}
}

func _SignalReq_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*SignalReq)
	// payload
	switch x := m.Payload.(type) {
	case *SignalReq_Invite:
		s := proto.Size(x.Invite)
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *SignalReq_InviteInGroup:
		s := proto.Size(x.InviteInGroup)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *SignalReq_Cancel:
		s := proto.Size(x.Cancel)
		n += proto.SizeVarint(3<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *SignalReq_Accept:
		s := proto.Size(x.Accept)
		n += proto.SizeVarint(4<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *SignalReq_HungUp:
		s := proto.Size(x.HungUp)
		n += proto.SizeVarint(5<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *SignalReq_Reject:
		s := proto.Size(x.Reject)
		n += proto.SizeVarint(6<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *SignalReq_GetRoomByGroupID:
		s := proto.Size(x.GetRoomByGroupID)
		n += proto.SizeVarint(7<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *SignalReq_OnRoomParticipantConnectedReq:
		s := proto.Size(x.OnRoomParticipantConnectedReq)
		n += proto.SizeVarint(8<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *SignalReq_OnRoomParticipantDisconnectedReq:
		s := proto.Size(x.OnRoomParticipantDisconnectedReq)
		n += proto.SizeVarint(9<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *SignalReq_GetTokenByRoomID:
		s := proto.Size(x.GetTokenByRoomID)
		n += proto.SizeVarint(10<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type SignalResp struct {
	// Types that are valid to be assigned to Payload:
	//	*SignalResp_Invite
	//	*SignalResp_InviteInGroup
	//	*SignalResp_Cancel
	//	*SignalResp_Accept
	//	*SignalResp_HungUp
	//	*SignalResp_Reject
	//	*SignalResp_GetRoomByGroupID
	//	*SignalResp_GetTokenByRoomID
	Payload isSignalResp_Payload `protobuf_oneof:"payload"`
}

func (m *SignalResp) Reset()                    { *m = SignalResp{} }
func (m *SignalResp) String() string            { return proto.CompactTextString(m) }
func (*SignalResp) ProtoMessage()               {}
func (*SignalResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

type isSignalResp_Payload interface{ isSignalResp_Payload() }

type SignalResp_Invite struct {
	Invite *SignalInviteReply `protobuf:"bytes,1,opt,name=invite,oneof"`
}
type SignalResp_InviteInGroup struct {
	InviteInGroup *SignalInviteInGroupReply `protobuf:"bytes,2,opt,name=inviteInGroup,oneof"`
}
type SignalResp_Cancel struct {
	Cancel *SignalCancelReply `protobuf:"bytes,3,opt,name=cancel,oneof"`
}
type SignalResp_Accept struct {
	Accept *SignalAcceptReply `protobuf:"bytes,4,opt,name=accept,oneof"`
}
type SignalResp_HungUp struct {
	HungUp *SignalHungUpReply `protobuf:"bytes,5,opt,name=hungUp,oneof"`
}
type SignalResp_Reject struct {
	Reject *SignalRejectReply `protobuf:"bytes,6,opt,name=reject,oneof"`
}
type SignalResp_GetRoomByGroupID struct {
	GetRoomByGroupID *SignalGetRoomByGroupIDReply `protobuf:"bytes,7,opt,name=getRoomByGroupID,oneof"`
}
type SignalResp_GetTokenByRoomID struct {
	GetTokenByRoomID *SignalGetTokenByRoomIDReply `protobuf:"bytes,8,opt,name=getTokenByRoomID,oneof"`
}

func (*SignalResp_Invite) isSignalResp_Payload()           {}
func (*SignalResp_InviteInGroup) isSignalResp_Payload()    {}
func (*SignalResp_Cancel) isSignalResp_Payload()           {}
func (*SignalResp_Accept) isSignalResp_Payload()           {}
func (*SignalResp_HungUp) isSignalResp_Payload()           {}
func (*SignalResp_Reject) isSignalResp_Payload()           {}
func (*SignalResp_GetRoomByGroupID) isSignalResp_Payload() {}
func (*SignalResp_GetTokenByRoomID) isSignalResp_Payload() {}

func (m *SignalResp) GetPayload() isSignalResp_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *SignalResp) GetInvite() *SignalInviteReply {
	if x, ok := m.GetPayload().(*SignalResp_Invite); ok {
		return x.Invite
	}
	return nil
}

func (m *SignalResp) GetInviteInGroup() *SignalInviteInGroupReply {
	if x, ok := m.GetPayload().(*SignalResp_InviteInGroup); ok {
		return x.InviteInGroup
	}
	return nil
}

func (m *SignalResp) GetCancel() *SignalCancelReply {
	if x, ok := m.GetPayload().(*SignalResp_Cancel); ok {
		return x.Cancel
	}
	return nil
}

func (m *SignalResp) GetAccept() *SignalAcceptReply {
	if x, ok := m.GetPayload().(*SignalResp_Accept); ok {
		return x.Accept
	}
	return nil
}

func (m *SignalResp) GetHungUp() *SignalHungUpReply {
	if x, ok := m.GetPayload().(*SignalResp_HungUp); ok {
		return x.HungUp
	}
	return nil
}

func (m *SignalResp) GetReject() *SignalRejectReply {
	if x, ok := m.GetPayload().(*SignalResp_Reject); ok {
		return x.Reject
	}
	return nil
}

func (m *SignalResp) GetGetRoomByGroupID() *SignalGetRoomByGroupIDReply {
	if x, ok := m.GetPayload().(*SignalResp_GetRoomByGroupID); ok {
		return x.GetRoomByGroupID
	}
	return nil
}

func (m *SignalResp) GetGetTokenByRoomID() *SignalGetTokenByRoomIDReply {
	if x, ok := m.GetPayload().(*SignalResp_GetTokenByRoomID); ok {
		return x.GetTokenByRoomID
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*SignalResp) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _SignalResp_OneofMarshaler, _SignalResp_OneofUnmarshaler, _SignalResp_OneofSizer, []interface{}{
		(*SignalResp_Invite)(nil),
		(*SignalResp_InviteInGroup)(nil),
		(*SignalResp_Cancel)(nil),
		(*SignalResp_Accept)(nil),
		(*SignalResp_HungUp)(nil),
		(*SignalResp_Reject)(nil),
		(*SignalResp_GetRoomByGroupID)(nil),
		(*SignalResp_GetTokenByRoomID)(nil),
	}
}

func _SignalResp_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*SignalResp)
	// payload
	switch x := m.Payload.(type) {
	case *SignalResp_Invite:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Invite); err != nil {
			return err
		}
	case *SignalResp_InviteInGroup:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.InviteInGroup); err != nil {
			return err
		}
	case *SignalResp_Cancel:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Cancel); err != nil {
			return err
		}
	case *SignalResp_Accept:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Accept); err != nil {
			return err
		}
	case *SignalResp_HungUp:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.HungUp); err != nil {
			return err
		}
	case *SignalResp_Reject:
		b.EncodeVarint(6<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Reject); err != nil {
			return err
		}
	case *SignalResp_GetRoomByGroupID:
		b.EncodeVarint(7<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.GetRoomByGroupID); err != nil {
			return err
		}
	case *SignalResp_GetTokenByRoomID:
		b.EncodeVarint(8<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.GetTokenByRoomID); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("SignalResp.Payload has unexpected type %T", x)
	}
	return nil
}

func _SignalResp_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*SignalResp)
	switch tag {
	case 1: // payload.invite
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SignalInviteReply)
		err := b.DecodeMessage(msg)
		m.Payload = &SignalResp_Invite{msg}
		return true, err
	case 2: // payload.inviteInGroup
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SignalInviteInGroupReply)
		err := b.DecodeMessage(msg)
		m.Payload = &SignalResp_InviteInGroup{msg}
		return true, err
	case 3: // payload.cancel
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SignalCancelReply)
		err := b.DecodeMessage(msg)
		m.Payload = &SignalResp_Cancel{msg}
		return true, err
	case 4: // payload.accept
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SignalAcceptReply)
		err := b.DecodeMessage(msg)
		m.Payload = &SignalResp_Accept{msg}
		return true, err
	case 5: // payload.hungUp
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SignalHungUpReply)
		err := b.DecodeMessage(msg)
		m.Payload = &SignalResp_HungUp{msg}
		return true, err
	case 6: // payload.reject
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SignalRejectReply)
		err := b.DecodeMessage(msg)
		m.Payload = &SignalResp_Reject{msg}
		return true, err
	case 7: // payload.getRoomByGroupID
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SignalGetRoomByGroupIDReply)
		err := b.DecodeMessage(msg)
		m.Payload = &SignalResp_GetRoomByGroupID{msg}
		return true, err
	case 8: // payload.getTokenByRoomID
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SignalGetTokenByRoomIDReply)
		err := b.DecodeMessage(msg)
		m.Payload = &SignalResp_GetTokenByRoomID{msg}
		return true, err
	default:
		return false, nil
	}
}

func _SignalResp_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*SignalResp)
	// payload
	switch x := m.Payload.(type) {
	case *SignalResp_Invite:
		s := proto.Size(x.Invite)
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *SignalResp_InviteInGroup:
		s := proto.Size(x.InviteInGroup)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *SignalResp_Cancel:
		s := proto.Size(x.Cancel)
		n += proto.SizeVarint(3<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *SignalResp_Accept:
		s := proto.Size(x.Accept)
		n += proto.SizeVarint(4<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *SignalResp_HungUp:
		s := proto.Size(x.HungUp)
		n += proto.SizeVarint(5<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *SignalResp_Reject:
		s := proto.Size(x.Reject)
		n += proto.SizeVarint(6<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *SignalResp_GetRoomByGroupID:
		s := proto.Size(x.GetRoomByGroupID)
		n += proto.SizeVarint(7<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *SignalResp_GetTokenByRoomID:
		s := proto.Size(x.GetTokenByRoomID)
		n += proto.SizeVarint(8<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type InvitationInfo struct {
	InviterUserID      string   `protobuf:"bytes,1,opt,name=inviterUserID" json:"inviterUserID,omitempty"`
	InviteeUserIDList  []string `protobuf:"bytes,2,rep,name=inviteeUserIDList" json:"inviteeUserIDList,omitempty"`
	CustomData         string   `protobuf:"bytes,3,opt,name=customData" json:"customData,omitempty"`
	GroupID            string   `protobuf:"bytes,4,opt,name=groupID" json:"groupID,omitempty"`
	RoomID             string   `protobuf:"bytes,5,opt,name=roomID" json:"roomID,omitempty"`
	Timeout            int32    `protobuf:"varint,6,opt,name=timeout" json:"timeout,omitempty"`
	MediaType          string   `protobuf:"bytes,7,opt,name=mediaType" json:"mediaType,omitempty"`
	PlatformID         int32    `protobuf:"varint,8,opt,name=platformID" json:"platformID,omitempty"`
	SessionType        int32    `protobuf:"varint,9,opt,name=sessionType" json:"sessionType,omitempty"`
	InitiateTime       int32    `protobuf:"varint,10,opt,name=initiateTime" json:"initiateTime,omitempty"`
	BusyLineUserIDList []string `protobuf:"bytes,11,rep,name=busyLineUserIDList" json:"busyLineUserIDList,omitempty"`
}

func (m *InvitationInfo) Reset()                    { *m = InvitationInfo{} }
func (m *InvitationInfo) String() string            { return proto.CompactTextString(m) }
func (*InvitationInfo) ProtoMessage()               {}
func (*InvitationInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *InvitationInfo) GetInviterUserID() string {
	if m != nil {
		return m.InviterUserID
	}
	return ""
}

func (m *InvitationInfo) GetInviteeUserIDList() []string {
	if m != nil {
		return m.InviteeUserIDList
	}
	return nil
}

func (m *InvitationInfo) GetCustomData() string {
	if m != nil {
		return m.CustomData
	}
	return ""
}

func (m *InvitationInfo) GetGroupID() string {
	if m != nil {
		return m.GroupID
	}
	return ""
}

func (m *InvitationInfo) GetRoomID() string {
	if m != nil {
		return m.RoomID
	}
	return ""
}

func (m *InvitationInfo) GetTimeout() int32 {
	if m != nil {
		return m.Timeout
	}
	return 0
}

func (m *InvitationInfo) GetMediaType() string {
	if m != nil {
		return m.MediaType
	}
	return ""
}

func (m *InvitationInfo) GetPlatformID() int32 {
	if m != nil {
		return m.PlatformID
	}
	return 0
}

func (m *InvitationInfo) GetSessionType() int32 {
	if m != nil {
		return m.SessionType
	}
	return 0
}

func (m *InvitationInfo) GetInitiateTime() int32 {
	if m != nil {
		return m.InitiateTime
	}
	return 0
}

func (m *InvitationInfo) GetBusyLineUserIDList() []string {
	if m != nil {
		return m.BusyLineUserIDList
	}
	return nil
}

type SignalInviteReq struct {
	OpUserID        string               `protobuf:"bytes,1,opt,name=opUserID" json:"opUserID,omitempty"`
	Invitation      *InvitationInfo      `protobuf:"bytes,2,opt,name=invitation" json:"invitation,omitempty"`
	OfflinePushInfo *OfflinePushInfo     `protobuf:"bytes,3,opt,name=offlinePushInfo" json:"offlinePushInfo,omitempty"`
	Participant     *ParticipantMetaData `protobuf:"bytes,4,opt,name=participant" json:"participant,omitempty"`
}

func (m *SignalInviteReq) Reset()                    { *m = SignalInviteReq{} }
func (m *SignalInviteReq) String() string            { return proto.CompactTextString(m) }
func (*SignalInviteReq) ProtoMessage()               {}
func (*SignalInviteReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *SignalInviteReq) GetOpUserID() string {
	if m != nil {
		return m.OpUserID
	}
	return ""
}

func (m *SignalInviteReq) GetInvitation() *InvitationInfo {
	if m != nil {
		return m.Invitation
	}
	return nil
}

func (m *SignalInviteReq) GetOfflinePushInfo() *OfflinePushInfo {
	if m != nil {
		return m.OfflinePushInfo
	}
	return nil
}

func (m *SignalInviteReq) GetParticipant() *ParticipantMetaData {
	if m != nil {
		return m.Participant
	}
	return nil
}

type SignalInviteReply struct {
	Token              string   `protobuf:"bytes,1,opt,name=token" json:"token,omitempty"`
	RoomID             string   `protobuf:"bytes,2,opt,name=roomID" json:"roomID,omitempty"`
	LiveURL            string   `protobuf:"bytes,3,opt,name=liveURL" json:"liveURL,omitempty"`
	BusyLineUserIDList []string `protobuf:"bytes,4,rep,name=busyLineUserIDList" json:"busyLineUserIDList,omitempty"`
}

func (m *SignalInviteReply) Reset()                    { *m = SignalInviteReply{} }
func (m *SignalInviteReply) String() string            { return proto.CompactTextString(m) }
func (*SignalInviteReply) ProtoMessage()               {}
func (*SignalInviteReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *SignalInviteReply) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *SignalInviteReply) GetRoomID() string {
	if m != nil {
		return m.RoomID
	}
	return ""
}

func (m *SignalInviteReply) GetLiveURL() string {
	if m != nil {
		return m.LiveURL
	}
	return ""
}

func (m *SignalInviteReply) GetBusyLineUserIDList() []string {
	if m != nil {
		return m.BusyLineUserIDList
	}
	return nil
}

type SignalInviteInGroupReq struct {
	OpUserID        string               `protobuf:"bytes,1,opt,name=opUserID" json:"opUserID,omitempty"`
	Invitation      *InvitationInfo      `protobuf:"bytes,2,opt,name=invitation" json:"invitation,omitempty"`
	OfflinePushInfo *OfflinePushInfo     `protobuf:"bytes,3,opt,name=offlinePushInfo" json:"offlinePushInfo,omitempty"`
	Participant     *ParticipantMetaData `protobuf:"bytes,4,opt,name=participant" json:"participant,omitempty"`
}

func (m *SignalInviteInGroupReq) Reset()                    { *m = SignalInviteInGroupReq{} }
func (m *SignalInviteInGroupReq) String() string            { return proto.CompactTextString(m) }
func (*SignalInviteInGroupReq) ProtoMessage()               {}
func (*SignalInviteInGroupReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *SignalInviteInGroupReq) GetOpUserID() string {
	if m != nil {
		return m.OpUserID
	}
	return ""
}

func (m *SignalInviteInGroupReq) GetInvitation() *InvitationInfo {
	if m != nil {
		return m.Invitation
	}
	return nil
}

func (m *SignalInviteInGroupReq) GetOfflinePushInfo() *OfflinePushInfo {
	if m != nil {
		return m.OfflinePushInfo
	}
	return nil
}

func (m *SignalInviteInGroupReq) GetParticipant() *ParticipantMetaData {
	if m != nil {
		return m.Participant
	}
	return nil
}

type SignalInviteInGroupReply struct {
	Token              string   `protobuf:"bytes,1,opt,name=token" json:"token,omitempty"`
	RoomID             string   `protobuf:"bytes,2,opt,name=roomID" json:"roomID,omitempty"`
	LiveURL            string   `protobuf:"bytes,3,opt,name=liveURL" json:"liveURL,omitempty"`
	BusyLineUserIDList []string `protobuf:"bytes,4,rep,name=busyLineUserIDList" json:"busyLineUserIDList,omitempty"`
}

func (m *SignalInviteInGroupReply) Reset()                    { *m = SignalInviteInGroupReply{} }
func (m *SignalInviteInGroupReply) String() string            { return proto.CompactTextString(m) }
func (*SignalInviteInGroupReply) ProtoMessage()               {}
func (*SignalInviteInGroupReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *SignalInviteInGroupReply) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *SignalInviteInGroupReply) GetRoomID() string {
	if m != nil {
		return m.RoomID
	}
	return ""
}

func (m *SignalInviteInGroupReply) GetLiveURL() string {
	if m != nil {
		return m.LiveURL
	}
	return ""
}

func (m *SignalInviteInGroupReply) GetBusyLineUserIDList() []string {
	if m != nil {
		return m.BusyLineUserIDList
	}
	return nil
}

type SignalCancelReq struct {
	OpUserID        string               `protobuf:"bytes,1,opt,name=opUserID" json:"opUserID,omitempty"`
	Invitation      *InvitationInfo      `protobuf:"bytes,2,opt,name=invitation" json:"invitation,omitempty"`
	OfflinePushInfo *OfflinePushInfo     `protobuf:"bytes,3,opt,name=offlinePushInfo" json:"offlinePushInfo,omitempty"`
	Participant     *ParticipantMetaData `protobuf:"bytes,4,opt,name=participant" json:"participant,omitempty"`
}

func (m *SignalCancelReq) Reset()                    { *m = SignalCancelReq{} }
func (m *SignalCancelReq) String() string            { return proto.CompactTextString(m) }
func (*SignalCancelReq) ProtoMessage()               {}
func (*SignalCancelReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

func (m *SignalCancelReq) GetOpUserID() string {
	if m != nil {
		return m.OpUserID
	}
	return ""
}

func (m *SignalCancelReq) GetInvitation() *InvitationInfo {
	if m != nil {
		return m.Invitation
	}
	return nil
}

func (m *SignalCancelReq) GetOfflinePushInfo() *OfflinePushInfo {
	if m != nil {
		return m.OfflinePushInfo
	}
	return nil
}

func (m *SignalCancelReq) GetParticipant() *ParticipantMetaData {
	if m != nil {
		return m.Participant
	}
	return nil
}

type SignalCancelReply struct {
}

func (m *SignalCancelReply) Reset()                    { *m = SignalCancelReply{} }
func (m *SignalCancelReply) String() string            { return proto.CompactTextString(m) }
func (*SignalCancelReply) ProtoMessage()               {}
func (*SignalCancelReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

type SignalAcceptReq struct {
	OpUserID         string               `protobuf:"bytes,1,opt,name=opUserID" json:"opUserID,omitempty"`
	Invitation       *InvitationInfo      `protobuf:"bytes,2,opt,name=invitation" json:"invitation,omitempty"`
	OfflinePushInfo  *OfflinePushInfo     `protobuf:"bytes,3,opt,name=offlinePushInfo" json:"offlinePushInfo,omitempty"`
	Participant      *ParticipantMetaData `protobuf:"bytes,4,opt,name=participant" json:"participant,omitempty"`
	OpUserPlatformID int32                `protobuf:"varint,5,opt,name=opUserPlatformID" json:"opUserPlatformID,omitempty"`
}

func (m *SignalAcceptReq) Reset()                    { *m = SignalAcceptReq{} }
func (m *SignalAcceptReq) String() string            { return proto.CompactTextString(m) }
func (*SignalAcceptReq) ProtoMessage()               {}
func (*SignalAcceptReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{18} }

func (m *SignalAcceptReq) GetOpUserID() string {
	if m != nil {
		return m.OpUserID
	}
	return ""
}

func (m *SignalAcceptReq) GetInvitation() *InvitationInfo {
	if m != nil {
		return m.Invitation
	}
	return nil
}

func (m *SignalAcceptReq) GetOfflinePushInfo() *OfflinePushInfo {
	if m != nil {
		return m.OfflinePushInfo
	}
	return nil
}

func (m *SignalAcceptReq) GetParticipant() *ParticipantMetaData {
	if m != nil {
		return m.Participant
	}
	return nil
}

func (m *SignalAcceptReq) GetOpUserPlatformID() int32 {
	if m != nil {
		return m.OpUserPlatformID
	}
	return 0
}

type SignalAcceptReply struct {
	Token   string `protobuf:"bytes,1,opt,name=token" json:"token,omitempty"`
	RoomID  string `protobuf:"bytes,2,opt,name=roomID" json:"roomID,omitempty"`
	LiveURL string `protobuf:"bytes,3,opt,name=liveURL" json:"liveURL,omitempty"`
}

func (m *SignalAcceptReply) Reset()                    { *m = SignalAcceptReply{} }
func (m *SignalAcceptReply) String() string            { return proto.CompactTextString(m) }
func (*SignalAcceptReply) ProtoMessage()               {}
func (*SignalAcceptReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{19} }

func (m *SignalAcceptReply) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *SignalAcceptReply) GetRoomID() string {
	if m != nil {
		return m.RoomID
	}
	return ""
}

func (m *SignalAcceptReply) GetLiveURL() string {
	if m != nil {
		return m.LiveURL
	}
	return ""
}

type SignalHungUpReq struct {
	OpUserID        string           `protobuf:"bytes,1,opt,name=opUserID" json:"opUserID,omitempty"`
	Invitation      *InvitationInfo  `protobuf:"bytes,2,opt,name=invitation" json:"invitation,omitempty"`
	OfflinePushInfo *OfflinePushInfo `protobuf:"bytes,3,opt,name=offlinePushInfo" json:"offlinePushInfo,omitempty"`
}

func (m *SignalHungUpReq) Reset()                    { *m = SignalHungUpReq{} }
func (m *SignalHungUpReq) String() string            { return proto.CompactTextString(m) }
func (*SignalHungUpReq) ProtoMessage()               {}
func (*SignalHungUpReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{20} }

func (m *SignalHungUpReq) GetOpUserID() string {
	if m != nil {
		return m.OpUserID
	}
	return ""
}

func (m *SignalHungUpReq) GetInvitation() *InvitationInfo {
	if m != nil {
		return m.Invitation
	}
	return nil
}

func (m *SignalHungUpReq) GetOfflinePushInfo() *OfflinePushInfo {
	if m != nil {
		return m.OfflinePushInfo
	}
	return nil
}

type SignalHungUpReply struct {
}

func (m *SignalHungUpReply) Reset()                    { *m = SignalHungUpReply{} }
func (m *SignalHungUpReply) String() string            { return proto.CompactTextString(m) }
func (*SignalHungUpReply) ProtoMessage()               {}
func (*SignalHungUpReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{21} }

type SignalRejectReq struct {
	OpUserID         string               `protobuf:"bytes,1,opt,name=opUserID" json:"opUserID,omitempty"`
	Invitation       *InvitationInfo      `protobuf:"bytes,2,opt,name=invitation" json:"invitation,omitempty"`
	OfflinePushInfo  *OfflinePushInfo     `protobuf:"bytes,3,opt,name=offlinePushInfo" json:"offlinePushInfo,omitempty"`
	Participant      *ParticipantMetaData `protobuf:"bytes,4,opt,name=participant" json:"participant,omitempty"`
	OpUserPlatformID int32                `protobuf:"varint,5,opt,name=opUserPlatformID" json:"opUserPlatformID,omitempty"`
}

func (m *SignalRejectReq) Reset()                    { *m = SignalRejectReq{} }
func (m *SignalRejectReq) String() string            { return proto.CompactTextString(m) }
func (*SignalRejectReq) ProtoMessage()               {}
func (*SignalRejectReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{22} }

func (m *SignalRejectReq) GetOpUserID() string {
	if m != nil {
		return m.OpUserID
	}
	return ""
}

func (m *SignalRejectReq) GetInvitation() *InvitationInfo {
	if m != nil {
		return m.Invitation
	}
	return nil
}

func (m *SignalRejectReq) GetOfflinePushInfo() *OfflinePushInfo {
	if m != nil {
		return m.OfflinePushInfo
	}
	return nil
}

func (m *SignalRejectReq) GetParticipant() *ParticipantMetaData {
	if m != nil {
		return m.Participant
	}
	return nil
}

func (m *SignalRejectReq) GetOpUserPlatformID() int32 {
	if m != nil {
		return m.OpUserPlatformID
	}
	return 0
}

type SignalRejectReply struct {
}

func (m *SignalRejectReply) Reset()                    { *m = SignalRejectReply{} }
func (m *SignalRejectReply) String() string            { return proto.CompactTextString(m) }
func (*SignalRejectReply) ProtoMessage()               {}
func (*SignalRejectReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{23} }

type SignalGetRoomByGroupIDReq struct {
	OpUserID    string               `protobuf:"bytes,1,opt,name=opUserID" json:"opUserID,omitempty"`
	GroupID     string               `protobuf:"bytes,2,opt,name=groupID" json:"groupID,omitempty"`
	Participant *ParticipantMetaData `protobuf:"bytes,3,opt,name=participant" json:"participant,omitempty"`
}

func (m *SignalGetRoomByGroupIDReq) Reset()                    { *m = SignalGetRoomByGroupIDReq{} }
func (m *SignalGetRoomByGroupIDReq) String() string            { return proto.CompactTextString(m) }
func (*SignalGetRoomByGroupIDReq) ProtoMessage()               {}
func (*SignalGetRoomByGroupIDReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{24} }

func (m *SignalGetRoomByGroupIDReq) GetOpUserID() string {
	if m != nil {
		return m.OpUserID
	}
	return ""
}

func (m *SignalGetRoomByGroupIDReq) GetGroupID() string {
	if m != nil {
		return m.GroupID
	}
	return ""
}

func (m *SignalGetRoomByGroupIDReq) GetParticipant() *ParticipantMetaData {
	if m != nil {
		return m.Participant
	}
	return nil
}

type SignalGetRoomByGroupIDReply struct {
	Invitation  *InvitationInfo        `protobuf:"bytes,1,opt,name=invitation" json:"invitation,omitempty"`
	Participant []*ParticipantMetaData `protobuf:"bytes,2,rep,name=participant" json:"participant,omitempty"`
	RoomID      string                 `protobuf:"bytes,3,opt,name=roomID" json:"roomID,omitempty"`
}

func (m *SignalGetRoomByGroupIDReply) Reset()                    { *m = SignalGetRoomByGroupIDReply{} }
func (m *SignalGetRoomByGroupIDReply) String() string            { return proto.CompactTextString(m) }
func (*SignalGetRoomByGroupIDReply) ProtoMessage()               {}
func (*SignalGetRoomByGroupIDReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{25} }

func (m *SignalGetRoomByGroupIDReply) GetInvitation() *InvitationInfo {
	if m != nil {
		return m.Invitation
	}
	return nil
}

func (m *SignalGetRoomByGroupIDReply) GetParticipant() []*ParticipantMetaData {
	if m != nil {
		return m.Participant
	}
	return nil
}

func (m *SignalGetRoomByGroupIDReply) GetRoomID() string {
	if m != nil {
		return m.RoomID
	}
	return ""
}

type SignalOnRoomParticipantConnectedReq struct {
	Invitation  *InvitationInfo        `protobuf:"bytes,1,opt,name=invitation" json:"invitation,omitempty"`
	Participant []*ParticipantMetaData `protobuf:"bytes,2,rep,name=participant" json:"participant,omitempty"`
	GroupID     string                 `protobuf:"bytes,3,opt,name=groupID" json:"groupID,omitempty"`
}

func (m *SignalOnRoomParticipantConnectedReq) Reset()         { *m = SignalOnRoomParticipantConnectedReq{} }
func (m *SignalOnRoomParticipantConnectedReq) String() string { return proto.CompactTextString(m) }
func (*SignalOnRoomParticipantConnectedReq) ProtoMessage()    {}
func (*SignalOnRoomParticipantConnectedReq) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{26}
}

func (m *SignalOnRoomParticipantConnectedReq) GetInvitation() *InvitationInfo {
	if m != nil {
		return m.Invitation
	}
	return nil
}

func (m *SignalOnRoomParticipantConnectedReq) GetParticipant() []*ParticipantMetaData {
	if m != nil {
		return m.Participant
	}
	return nil
}

func (m *SignalOnRoomParticipantConnectedReq) GetGroupID() string {
	if m != nil {
		return m.GroupID
	}
	return ""
}

type SignalOnRoomParticipantDisconnectedReq struct {
	Invitation  *InvitationInfo        `protobuf:"bytes,1,opt,name=invitation" json:"invitation,omitempty"`
	Participant []*ParticipantMetaData `protobuf:"bytes,2,rep,name=participant" json:"participant,omitempty"`
	GroupID     string                 `protobuf:"bytes,3,opt,name=groupID" json:"groupID,omitempty"`
}

func (m *SignalOnRoomParticipantDisconnectedReq) Reset() {
	*m = SignalOnRoomParticipantDisconnectedReq{}
}
func (m *SignalOnRoomParticipantDisconnectedReq) String() string { return proto.CompactTextString(m) }
func (*SignalOnRoomParticipantDisconnectedReq) ProtoMessage()    {}
func (*SignalOnRoomParticipantDisconnectedReq) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{27}
}

func (m *SignalOnRoomParticipantDisconnectedReq) GetInvitation() *InvitationInfo {
	if m != nil {
		return m.Invitation
	}
	return nil
}

func (m *SignalOnRoomParticipantDisconnectedReq) GetParticipant() []*ParticipantMetaData {
	if m != nil {
		return m.Participant
	}
	return nil
}

func (m *SignalOnRoomParticipantDisconnectedReq) GetGroupID() string {
	if m != nil {
		return m.GroupID
	}
	return ""
}

type SignalGetTokenByRoomIDReq struct {
	RoomID      string               `protobuf:"bytes,1,opt,name=roomID" json:"roomID,omitempty"`
	OpUserID    string               `protobuf:"bytes,2,opt,name=opUserID" json:"opUserID,omitempty"`
	Participant *ParticipantMetaData `protobuf:"bytes,3,opt,name=participant" json:"participant,omitempty"`
	OperationID string               `protobuf:"bytes,4,opt,name=operationID" json:"operationID,omitempty"`
}

func (m *SignalGetTokenByRoomIDReq) Reset()                    { *m = SignalGetTokenByRoomIDReq{} }
func (m *SignalGetTokenByRoomIDReq) String() string            { return proto.CompactTextString(m) }
func (*SignalGetTokenByRoomIDReq) ProtoMessage()               {}
func (*SignalGetTokenByRoomIDReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{28} }

func (m *SignalGetTokenByRoomIDReq) GetRoomID() string {
	if m != nil {
		return m.RoomID
	}
	return ""
}

func (m *SignalGetTokenByRoomIDReq) GetOpUserID() string {
	if m != nil {
		return m.OpUserID
	}
	return ""
}

func (m *SignalGetTokenByRoomIDReq) GetParticipant() *ParticipantMetaData {
	if m != nil {
		return m.Participant
	}
	return nil
}

func (m *SignalGetTokenByRoomIDReq) GetOperationID() string {
	if m != nil {
		return m.OperationID
	}
	return ""
}

type SignalGetTokenByRoomIDReply struct {
	Token   string `protobuf:"bytes,1,opt,name=token" json:"token,omitempty"`
	LiveURL string `protobuf:"bytes,2,opt,name=liveURL" json:"liveURL,omitempty"`
}

func (m *SignalGetTokenByRoomIDReply) Reset()                    { *m = SignalGetTokenByRoomIDReply{} }
func (m *SignalGetTokenByRoomIDReply) String() string            { return proto.CompactTextString(m) }
func (*SignalGetTokenByRoomIDReply) ProtoMessage()               {}
func (*SignalGetTokenByRoomIDReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{29} }

func (m *SignalGetTokenByRoomIDReply) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *SignalGetTokenByRoomIDReply) GetLiveURL() string {
	if m != nil {
		return m.LiveURL
	}
	return ""
}

type SignalMessageAssembleReq struct {
	SignalReq   *SignalReq `protobuf:"bytes,1,opt,name=signalReq" json:"signalReq,omitempty"`
	OperationID string     `protobuf:"bytes,2,opt,name=operationID" json:"operationID,omitempty"`
}

func (m *SignalMessageAssembleReq) Reset()                    { *m = SignalMessageAssembleReq{} }
func (m *SignalMessageAssembleReq) String() string            { return proto.CompactTextString(m) }
func (*SignalMessageAssembleReq) ProtoMessage()               {}
func (*SignalMessageAssembleReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{30} }

func (m *SignalMessageAssembleReq) GetSignalReq() *SignalReq {
	if m != nil {
		return m.SignalReq
	}
	return nil
}

func (m *SignalMessageAssembleReq) GetOperationID() string {
	if m != nil {
		return m.OperationID
	}
	return ""
}

type SignalMessageAssembleResp struct {
	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=commonResp" json:"commonResp,omitempty"`
	IsPass     bool        `protobuf:"varint,2,opt,name=isPass" json:"isPass,omitempty"`
	SignalResp *SignalResp `protobuf:"bytes,3,opt,name=signalResp" json:"signalResp,omitempty"`
	MsgData    *MsgData    `protobuf:"bytes,4,opt,name=msgData" json:"msgData,omitempty"`
}

func (m *SignalMessageAssembleResp) Reset()                    { *m = SignalMessageAssembleResp{} }
func (m *SignalMessageAssembleResp) String() string            { return proto.CompactTextString(m) }
func (*SignalMessageAssembleResp) ProtoMessage()               {}
func (*SignalMessageAssembleResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{31} }

func (m *SignalMessageAssembleResp) GetCommonResp() *CommonResp {
	if m != nil {
		return m.CommonResp
	}
	return nil
}

func (m *SignalMessageAssembleResp) GetIsPass() bool {
	if m != nil {
		return m.IsPass
	}
	return false
}

func (m *SignalMessageAssembleResp) GetSignalResp() *SignalResp {
	if m != nil {
		return m.SignalResp
	}
	return nil
}

func (m *SignalMessageAssembleResp) GetMsgData() *MsgData {
	if m != nil {
		return m.MsgData
	}
	return nil
}

type SignalGetRoomsReq struct {
	OperationID string `protobuf:"bytes,1,opt,name=operationID" json:"operationID,omitempty"`
	RoomID      string `protobuf:"bytes,2,opt,name=roomID" json:"roomID,omitempty"`
}

func (m *SignalGetRoomsReq) Reset()                    { *m = SignalGetRoomsReq{} }
func (m *SignalGetRoomsReq) String() string            { return proto.CompactTextString(m) }
func (*SignalGetRoomsReq) ProtoMessage()               {}
func (*SignalGetRoomsReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{32} }

func (m *SignalGetRoomsReq) GetOperationID() string {
	if m != nil {
		return m.OperationID
	}
	return ""
}

func (m *SignalGetRoomsReq) GetRoomID() string {
	if m != nil {
		return m.RoomID
	}
	return ""
}

type SignalGetRoomsResp struct {
	CommonResp *CommonResp                    `protobuf:"bytes,1,opt,name=commonResp" json:"commonResp,omitempty"`
	RoomList   []*SignalGetRoomByGroupIDReply `protobuf:"bytes,2,rep,name=roomList" json:"roomList,omitempty"`
}

func (m *SignalGetRoomsResp) Reset()                    { *m = SignalGetRoomsResp{} }
func (m *SignalGetRoomsResp) String() string            { return proto.CompactTextString(m) }
func (*SignalGetRoomsResp) ProtoMessage()               {}
func (*SignalGetRoomsResp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{33} }

func (m *SignalGetRoomsResp) GetCommonResp() *CommonResp {
	if m != nil {
		return m.CommonResp
	}
	return nil
}

func (m *SignalGetRoomsResp) GetRoomList() []*SignalGetRoomByGroupIDReply {
	if m != nil {
		return m.RoomList
	}
	return nil
}

func init() {
	proto.RegisterType((*CommonResp)(nil), "proto.CommonResp")
	proto.RegisterType((*MsgData)(nil), "proto.MsgData")
	proto.RegisterType((*GroupInfo)(nil), "proto.GroupInfo")
	proto.RegisterType((*GroupMemberFullInfo)(nil), "proto.GroupMemberFullInfo")
	proto.RegisterType((*ParticipantMetaData)(nil), "proto.ParticipantMetaData")
	proto.RegisterType((*PublicUserInfo)(nil), "proto.PublicUserInfo")
	proto.RegisterType((*GetJoinTokenReq)(nil), "proto.GetJoinTokenReq")
	proto.RegisterType((*GetJoinTokenResp)(nil), "proto.GetJoinTokenResp")
	proto.RegisterType((*OfflinePushInfo)(nil), "proto.OfflinePushInfo")
	proto.RegisterType((*SignalReq)(nil), "proto.SignalReq")
	proto.RegisterType((*SignalResp)(nil), "proto.SignalResp")
	proto.RegisterType((*InvitationInfo)(nil), "proto.InvitationInfo")
	proto.RegisterType((*SignalInviteReq)(nil), "proto.SignalInviteReq")
	proto.RegisterType((*SignalInviteReply)(nil), "proto.SignalInviteReply")
	proto.RegisterType((*SignalInviteInGroupReq)(nil), "proto.SignalInviteInGroupReq")
	proto.RegisterType((*SignalInviteInGroupReply)(nil), "proto.SignalInviteInGroupReply")
	proto.RegisterType((*SignalCancelReq)(nil), "proto.SignalCancelReq")
	proto.RegisterType((*SignalCancelReply)(nil), "proto.SignalCancelReply")
	proto.RegisterType((*SignalAcceptReq)(nil), "proto.SignalAcceptReq")
	proto.RegisterType((*SignalAcceptReply)(nil), "proto.SignalAcceptReply")
	proto.RegisterType((*SignalHungUpReq)(nil), "proto.SignalHungUpReq")
	proto.RegisterType((*SignalHungUpReply)(nil), "proto.SignalHungUpReply")
	proto.RegisterType((*SignalRejectReq)(nil), "proto.SignalRejectReq")
	proto.RegisterType((*SignalRejectReply)(nil), "proto.SignalRejectReply")
	proto.RegisterType((*SignalGetRoomByGroupIDReq)(nil), "proto.SignalGetRoomByGroupIDReq")
	proto.RegisterType((*SignalGetRoomByGroupIDReply)(nil), "proto.SignalGetRoomByGroupIDReply")
	proto.RegisterType((*SignalOnRoomParticipantConnectedReq)(nil), "proto.SignalOnRoomParticipantConnectedReq")
	proto.RegisterType((*SignalOnRoomParticipantDisconnectedReq)(nil), "proto.SignalOnRoomParticipantDisconnectedReq")
	proto.RegisterType((*SignalGetTokenByRoomIDReq)(nil), "proto.SignalGetTokenByRoomIDReq")
	proto.RegisterType((*SignalGetTokenByRoomIDReply)(nil), "proto.SignalGetTokenByRoomIDReply")
	proto.RegisterType((*SignalMessageAssembleReq)(nil), "proto.SignalMessageAssembleReq")
	proto.RegisterType((*SignalMessageAssembleResp)(nil), "proto.SignalMessageAssembleResp")
	proto.RegisterType((*SignalGetRoomsReq)(nil), "proto.SignalGetRoomsReq")
	proto.RegisterType((*SignalGetRoomsResp)(nil), "proto.SignalGetRoomsResp")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for RtcService service

type RtcServiceClient interface {
	SignalMessageAssemble(ctx context.Context, in *SignalMessageAssembleReq, opts ...grpc.CallOption) (*SignalMessageAssembleResp, error)
	SignalGetRooms(ctx context.Context, in *SignalGetRoomsReq, opts ...grpc.CallOption) (*SignalGetRoomsResp, error)
}

type rtcServiceClient struct {
	cc *grpc.ClientConn
}

func NewRtcServiceClient(cc *grpc.ClientConn) RtcServiceClient {
	return &rtcServiceClient{cc}
}

func (c *rtcServiceClient) SignalMessageAssemble(ctx context.Context, in *SignalMessageAssembleReq, opts ...grpc.CallOption) (*SignalMessageAssembleResp, error) {
	out := new(SignalMessageAssembleResp)
	err := grpc.Invoke(ctx, "/proto.RtcService/SignalMessageAssemble", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rtcServiceClient) SignalGetRooms(ctx context.Context, in *SignalGetRoomsReq, opts ...grpc.CallOption) (*SignalGetRoomsResp, error) {
	out := new(SignalGetRoomsResp)
	err := grpc.Invoke(ctx, "/proto.RtcService/SignalGetRooms", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for RtcService service

type RtcServiceServer interface {
	SignalMessageAssemble(context.Context, *SignalMessageAssembleReq) (*SignalMessageAssembleResp, error)
	SignalGetRooms(context.Context, *SignalGetRoomsReq) (*SignalGetRoomsResp, error)
}

func RegisterRtcServiceServer(s *grpc.Server, srv RtcServiceServer) {
	s.RegisterService(&_RtcService_serviceDesc, srv)
}

func _RtcService_SignalMessageAssemble_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SignalMessageAssembleReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RtcServiceServer).SignalMessageAssemble(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.RtcService/SignalMessageAssemble",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RtcServiceServer).SignalMessageAssemble(ctx, req.(*SignalMessageAssembleReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _RtcService_SignalGetRooms_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SignalGetRoomsReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RtcServiceServer).SignalGetRooms(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.RtcService/SignalGetRooms",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RtcServiceServer).SignalGetRooms(ctx, req.(*SignalGetRoomsReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _RtcService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.RtcService",
	HandlerType: (*RtcServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SignalMessageAssemble",
			Handler:    _RtcService_SignalMessageAssemble_Handler,
		},
		{
			MethodName: "SignalGetRooms",
			Handler:    _RtcService_SignalGetRooms_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "rtc/rtc.proto",
}

func init() { proto.RegisterFile("rtc/rtc.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 1929 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe4, 0x59, 0xcd, 0x6f, 0x23, 0x49,
	0x15, 0x9f, 0xb6, 0xe3, 0x24, 0x7e, 0xce, 0x67, 0x0d, 0x1b, 0xf5, 0x64, 0x58, 0xb0, 0x9a, 0xd1,
	0xc8, 0x1a, 0x41, 0x86, 0x35, 0x5a, 0x84, 0x16, 0xb4, 0x62, 0x13, 0xcf, 0x64, 0x8c, 0xc6, 0x93,
	0xa8, 0xb2, 0x73, 0x59, 0x0e, 0xa8, 0xd3, 0xae, 0x78, 0x7b, 0xc6, 0xae, 0xea, 0x74, 0x57, 0x67,
	0xd7, 0xe2, 0x8a, 0x00, 0x89, 0x03, 0x08, 0x89, 0x13, 0x57, 0xc4, 0x81, 0xcb, 0x5e, 0x90, 0xf6,
	0xc6, 0x85, 0x7f, 0x85, 0x03, 0x12, 0x67, 0xee, 0xa8, 0x5e, 0x55, 0x77, 0x57, 0xb7, 0xdb, 0x99,
	0x0c, 0x20, 0xed, 0x6a, 0xf6, 0xe4, 0x7e, 0xaf, 0xde, 0xab, 0x8f, 0xf7, 0xfb, 0xd5, 0xab, 0x57,
	0x65, 0xd8, 0x8c, 0x65, 0xf0, 0x30, 0x96, 0xc1, 0x41, 0x14, 0x0b, 0x29, 0x48, 0x0b, 0x7f, 0xbc,
	0xf7, 0x01, 0x8e, 0xc4, 0x6c, 0x26, 0x38, 0x65, 0x49, 0x44, 0x5c, 0x58, 0x63, 0x71, 0x7c, 0x24,
	0xc6, 0xcc, 0x75, 0xba, 0x4e, 0xaf, 0x45, 0x33, 0x91, 0xec, 0xc1, 0x2a, 0x8b, 0xe3, 0x51, 0x32,
	0x71, 0x1b, 0x5d, 0xa7, 0xd7, 0xa6, 0x46, 0xf2, 0xfe, 0xd4, 0x82, 0xb5, 0x51, 0x32, 0x19, 0xf8,
	0xd2, 0x57, 0x36, 0x09, 0xe3, 0xe3, 0xe1, 0x00, 0x9d, 0xdb, 0xd4, 0x48, 0x4a, 0x1f, 0xb3, 0xe0,
	0x6a, 0x38, 0xc8, 0x7c, 0xb5, 0xa4, 0x46, 0x9b, 0xc4, 0x22, 0x8d, 0x86, 0x03, 0xb7, 0x89, 0x0d,
	0x99, 0x48, 0xba, 0xd0, 0x09, 0xa6, 0x21, 0xe3, 0x72, 0x94, 0x4c, 0x86, 0x03, 0x77, 0x05, 0x5b,
	0x6d, 0x95, 0xb2, 0x48, 0x58, 0x7c, 0xc5, 0x62, 0x6d, 0xd1, 0xd2, 0x16, 0x96, 0x8a, 0x3c, 0x80,
	0x1d, 0x35, 0x3e, 0x8b, 0x4f, 0xa7, 0xbe, 0xbc, 0x10, 0xf1, 0x6c, 0x38, 0x70, 0x57, 0x71, 0x51,
	0x0b, 0x7a, 0x72, 0x1f, 0xb6, 0xb4, 0xee, 0x59, 0x18, 0xbc, 0xe4, 0xfe, 0x8c, 0xb9, 0x6b, 0xd8,
	0x61, 0x45, 0x4b, 0xee, 0xc1, 0xa6, 0xd6, 0x3c, 0xf6, 0x03, 0xf6, 0x9c, 0x3e, 0x75, 0xd7, 0xd1,
	0xac, 0xac, 0xd4, 0x73, 0x4b, 0x92, 0x50, 0xf0, 0x0f, 0xe7, 0x11, 0x73, 0xdb, 0x38, 0xa8, 0xad,
	0x52, 0x2b, 0x9f, 0x25, 0x93, 0xc7, 0xb1, 0x98, 0xb9, 0xa0, 0xe3, 0x6c, 0x44, 0x5c, 0xb9, 0xe0,
	0x92, 0x71, 0x89, 0xbe, 0x1d, 0xed, 0x6b, 0xa9, 0x94, 0xaf, 0x11, 0xdd, 0x8d, 0xae, 0xd3, 0xdb,
	0xa0, 0x99, 0x48, 0x76, 0xa0, 0x99, 0xb0, 0x4b, 0x77, 0xab, 0xeb, 0xf4, 0x36, 0xa9, 0xfa, 0x24,
	0xfb, 0xb0, 0xae, 0xa6, 0xf6, 0x61, 0x38, 0x63, 0xee, 0x76, 0xd7, 0xe9, 0x35, 0x69, 0x2e, 0x93,
	0x6f, 0x00, 0x04, 0x31, 0xf3, 0x25, 0xc3, 0xd6, 0x1d, 0x6c, 0xb5, 0x34, 0x88, 0xa6, 0xf4, 0x65,
	0x9a, 0xb8, 0xbb, 0x38, 0x09, 0x23, 0x91, 0x77, 0x61, 0x4d, 0x44, 0x32, 0x14, 0x3c, 0x71, 0x49,
	0xb7, 0xd9, 0xeb, 0xf4, 0xef, 0x6a, 0x46, 0x1d, 0x18, 0x1a, 0x1c, 0x9c, 0xe8, 0xd6, 0x47, 0x5c,
	0xc6, 0x73, 0x9a, 0xd9, 0x92, 0x1f, 0xc3, 0xb6, 0xb8, 0xb8, 0x98, 0x86, 0x9c, 0x9d, 0xa6, 0xc9,
	0xc7, 0x43, 0x7e, 0x21, 0xdc, 0xdb, 0x5d, 0xa7, 0xd7, 0xe9, 0xef, 0x19, 0xf7, 0x93, 0x72, 0x2b,
	0xad, 0x9a, 0xef, 0xbf, 0x07, 0x1b, 0x76, 0xd7, 0x6a, 0xb9, 0x2f, 0xd9, 0xdc, 0x70, 0x4d, 0x7d,
	0x92, 0xaf, 0x41, 0xeb, 0xca, 0x9f, 0xa6, 0x0c, 0x79, 0xb6, 0x4e, 0xb5, 0xf0, 0x5e, 0xe3, 0x07,
	0x8e, 0xf7, 0xef, 0x06, 0xb4, 0x8f, 0x91, 0x5c, 0xfc, 0x42, 0xd8, 0xc4, 0x73, 0xca, 0xc4, 0xfb,
	0x3a, 0xb4, 0xf1, 0xf3, 0x99, 0xe2, 0x80, 0x66, 0x6b, 0xa1, 0x20, 0x1e, 0x6c, 0x70, 0x21, 0xc3,
	0x8b, 0x30, 0xf0, 0xd5, 0x3c, 0x0c, 0x6b, 0x4b, 0x3a, 0x65, 0x13, 0x72, 0x19, 0x8b, 0x71, 0x1a,
	0xa0, 0x8d, 0xe6, 0x6e, 0x49, 0xa7, 0xc6, 0xbf, 0x30, 0x04, 0xd2, 0xc4, 0xcd, 0x44, 0x05, 0xbf,
	0xf8, 0x84, 0xb3, 0xf8, 0x79, 0xc2, 0x62, 0xc3, 0xd7, 0x36, 0xb5, 0x55, 0x15, 0xd8, 0xd6, 0x10,
	0x6b, 0x1b, 0xb6, 0x2e, 0x74, 0x66, 0x6c, 0x76, 0xce, 0xe2, 0x23, 0x91, 0x72, 0x89, 0x04, 0xdd,
	0xa4, 0xb6, 0x8a, 0x6c, 0x41, 0x83, 0x7d, 0x8a, 0xac, 0x6c, 0xd3, 0x06, 0xfb, 0xd4, 0x02, 0x1a,
	0x4a, 0x40, 0xdf, 0x83, 0x4d, 0xec, 0x57, 0x64, 0xb3, 0xe9, 0x68, 0xb2, 0x97, 0x94, 0x79, 0xc4,
	0x90, 0xae, 0x1b, 0xd8, 0x41, 0xa1, 0xf0, 0x3e, 0x6f, 0xc0, 0x6d, 0x8c, 0xfb, 0x08, 0x27, 0xf0,
	0x38, 0x9d, 0x4e, 0x5f, 0x81, 0xc0, 0x1e, 0xac, 0xa6, 0x7a, 0x38, 0x93, 0x2c, 0xd2, 0x7c, 0x9c,
	0x58, 0x4c, 0xd9, 0x53, 0x76, 0xc5, 0xa6, 0x18, 0xf8, 0x16, 0x2d, 0x14, 0x8a, 0xe8, 0x2f, 0x44,
	0xc8, 0x31, 0x26, 0x2b, 0xd8, 0x98, 0xcb, 0xaa, 0x8d, 0x67, 0xdb, 0x5a, 0x87, 0x3b, 0x97, 0x6d,
	0x24, 0x56, 0xcb, 0x48, 0xdc, 0x87, 0x2d, 0x3f, 0x8a, 0x46, 0x3e, 0x9f, 0xb0, 0x58, 0x0f, 0xba,
	0x86, 0xfd, 0x56, 0xb4, 0x0a, 0x0f, 0x35, 0xd2, 0x99, 0x48, 0xe3, 0x80, 0x61, 0xb8, 0x5b, 0xd4,
	0xd2, 0xa8, 0x7e, 0x44, 0xc4, 0x62, 0x2b, 0x8c, 0x3a, 0xf2, 0x15, 0xad, 0x41, 0x05, 0x32, 0x54,
	0xbc, 0xbf, 0x39, 0x70, 0xfb, 0xd4, 0x8f, 0x65, 0x18, 0x84, 0x91, 0xcf, 0xe5, 0x88, 0x49, 0x1f,
	0x93, 0xec, 0x81, 0x89, 0x37, 0xee, 0x20, 0x07, 0x77, 0xd0, 0x8e, 0xd9, 0x41, 0x39, 0xc1, 0x69,
	0x61, 0x42, 0x06, 0xb0, 0x3d, 0x29, 0x00, 0x40, 0xaf, 0x06, 0x7a, 0xed, 0xdb, 0x5e, 0x65, 0x78,
	0x68, 0xd5, 0x85, 0xbc, 0x03, 0xeb, 0x88, 0x83, 0x72, 0x6f, 0xa2, 0xfb, 0x5b, 0xc6, 0xfd, 0x34,
	0x3d, 0x9f, 0x86, 0xc1, 0x73, 0xd3, 0x48, 0x73, 0x33, 0xef, 0x97, 0x0e, 0x6c, 0x95, 0x1b, 0x2d,
	0x6c, 0x9d, 0x12, 0xb6, 0x36, 0x42, 0x8d, 0xe5, 0x08, 0x35, 0xcb, 0x08, 0xed, 0xc1, 0xea, 0x04,
	0xf3, 0xae, 0x41, 0xdc, 0x48, 0x26, 0x92, 0xad, 0x3c, 0x92, 0x7f, 0x74, 0x60, 0xfb, 0x98, 0xc9,
	0x9f, 0x28, 0x3e, 0x88, 0x97, 0x8c, 0x53, 0x76, 0x49, 0x08, 0xac, 0xc4, 0x42, 0xcc, 0xcc, 0x3c,
	0xf0, 0x5b, 0xcd, 0x22, 0x1c, 0x33, 0x2e, 0x43, 0x39, 0xcf, 0x66, 0x91, 0xc9, 0xe4, 0xfb, 0xb0,
	0x3e, 0x33, 0x08, 0x98, 0xf5, 0x67, 0xe1, 0xab, 0xc1, 0x88, 0xe6, 0xb6, 0xb8, 0x9f, 0x11, 0xe7,
	0x50, 0xf0, 0xe2, 0x20, 0xb3, 0x54, 0xde, 0x25, 0xec, 0x94, 0x27, 0x97, 0x44, 0xe4, 0x1d, 0xfb,
	0x50, 0x36, 0x20, 0xef, 0x9a, 0xf1, 0x8a, 0x06, 0x0a, 0x41, 0x71, 0x72, 0xef, 0x40, 0xf3, 0xc5,
	0x27, 0xd2, 0xcc, 0x5b, 0x7d, 0xaa, 0xc0, 0x4d, 0xc3, 0x2b, 0x3b, 0x70, 0x46, 0xf4, 0xfe, 0xe0,
	0xc0, 0x76, 0x25, 0xdb, 0xaa, 0xd4, 0x29, 0x43, 0x39, 0x65, 0x26, 0x22, 0x5a, 0x50, 0x61, 0x1a,
	0xb3, 0x24, 0x30, 0xdd, 0xe2, 0xb7, 0x09, 0x6f, 0x33, 0x4f, 0x1f, 0x2a, 0xe1, 0x9d, 0x9c, 0xa9,
	0x8e, 0xce, 0x44, 0xca, 0xc7, 0x79, 0xc2, 0xb3, 0x74, 0x2a, 0x95, 0x84, 0x27, 0x67, 0x87, 0xfe,
	0x78, 0xc2, 0x74, 0x5a, 0x6a, 0x61, 0x82, 0x2e, 0x2b, 0xbd, 0x7f, 0xb6, 0xa0, 0x7d, 0x16, 0x4e,
	0xb8, 0x3f, 0x55, 0x10, 0x7d, 0x17, 0x56, 0x43, 0x7e, 0x15, 0x4a, 0x66, 0x02, 0x90, 0x9d, 0x13,
	0xda, 0x62, 0x88, 0x4d, 0x94, 0x5d, 0x3e, 0xb9, 0x45, 0x8d, 0x1d, 0x79, 0x04, 0x9b, 0xfa, 0x6b,
	0xc8, 0x91, 0xd4, 0x86, 0xe8, 0x6f, 0xd7, 0x38, 0x1a, 0x0b, 0xed, 0x5f, 0xf6, 0x52, 0x03, 0x07,
	0x3e, 0x0f, 0x4c, 0x9a, 0xa9, 0x0e, 0x7c, 0x84, 0x4d, 0x66, 0x60, 0x6d, 0xa7, 0x3c, 0xfc, 0x20,
	0x60, 0x91, 0xc4, 0xc5, 0x57, 0x3d, 0x3e, 0xc0, 0x26, 0xe3, 0xa1, 0xed, 0x94, 0xc7, 0xc7, 0x29,
	0x9f, 0x3c, 0x8f, 0x30, 0x12, 0x55, 0x8f, 0x27, 0xd8, 0x64, 0x3c, 0xb4, 0x9d, 0xf2, 0x88, 0xd9,
	0x0b, 0x16, 0x48, 0x4c, 0x54, 0x55, 0x0f, 0x8a, 0x4d, 0xc6, 0x43, 0xdb, 0x91, 0x67, 0xb0, 0x33,
	0x61, 0x92, 0x0a, 0x31, 0x3b, 0x9c, 0x1f, 0x9b, 0x64, 0xbb, 0x86, 0xbe, 0xdd, 0x92, 0xef, 0x71,
	0xc5, 0x48, 0xf7, 0xb2, 0xe0, 0x4b, 0x62, 0x78, 0x5b, 0x70, 0xa5, 0xb2, 0x28, 0x7f, 0x24, 0x38,
	0x67, 0x81, 0x64, 0x63, 0xca, 0x2e, 0x31, 0xf9, 0x75, 0xfa, 0x0f, 0x4a, 0x9d, 0x9f, 0x5c, 0xe7,
	0xf1, 0xe4, 0x16, 0xbd, 0xbe, 0x4b, 0xf2, 0x73, 0xe8, 0x2e, 0x18, 0x0c, 0xc2, 0x24, 0xb0, 0x87,
	0x6d, 0xe3, 0xb0, 0xdf, 0xb9, 0x7e, 0xd8, 0x8a, 0xd3, 0x93, 0x5b, 0xf4, 0x95, 0x1d, 0x9b, 0x00,
	0xe2, 0xb6, 0x3c, 0x9c, 0x2b, 0xdb, 0xe1, 0x00, 0x13, 0x74, 0x4d, 0x00, 0x4b, 0x46, 0x45, 0x00,
	0x4b, 0xea, 0xc3, 0x36, 0xac, 0x45, 0xfe, 0x7c, 0x2a, 0xfc, 0xb1, 0xf7, 0xeb, 0x15, 0x80, 0x0c,
	0xb9, 0x24, 0x22, 0xfd, 0x0a, 0xd7, 0xdd, 0x5a, 0xae, 0x47, 0xd3, 0xb9, 0xc5, 0xf6, 0xe3, 0x7a,
	0xb6, 0x7f, 0xf3, 0x3a, 0xb6, 0xeb, 0x1e, 0x2a, 0x7c, 0xef, 0x57, 0xf8, 0xee, 0xd6, 0xf2, 0xdd,
	0x0c, 0x6e, 0x18, 0xdf, 0xaf, 0x30, 0xde, 0xad, 0x65, 0xbc, 0xf1, 0x31, 0x9c, 0xef, 0x57, 0x38,
	0xef, 0xd6, 0x72, 0xde, 0xf8, 0x18, 0xd6, 0xf7, 0x2b, 0xac, 0x77, 0x6b, 0x59, 0x6f, 0x7c, 0x0c,
	0xef, 0x4f, 0x97, 0xf2, 0xde, 0x7b, 0x05, 0xef, 0x75, 0x3f, 0x8b, 0xcc, 0x3f, 0xad, 0x21, 0xc2,
	0x7a, 0x7d, 0x8f, 0x15, 0x22, 0x14, 0x3d, 0x2e, 0xa5, 0xc2, 0x2f, 0x9a, 0xb0, 0x85, 0x30, 0xe9,
	0x13, 0x41, 0x25, 0xe3, 0x7b, 0x19, 0xb4, 0x59, 0xc9, 0xa0, 0x93, 0x72, 0x59, 0x49, 0xbe, 0x0d,
	0xbb, 0x5a, 0xc1, 0xb4, 0xe2, 0x69, 0x98, 0xa8, 0x03, 0xa0, 0xd9, 0x6b, 0xd3, 0xc5, 0x06, 0xac,
	0x1b, 0xd3, 0x44, 0x8a, 0x59, 0x7e, 0x86, 0xb5, 0xa9, 0xa5, 0xb1, 0x2b, 0xb2, 0x95, 0x85, 0x8a,
	0x2c, 0xd6, 0x6b, 0x6e, 0x99, 0xeb, 0x1b, 0x4a, 0xca, 0x43, 0x86, 0x33, 0x26, 0x52, 0x69, 0xee,
	0x55, 0x99, 0xa8, 0x6a, 0xb5, 0x19, 0x1b, 0x87, 0x3e, 0xd6, 0x84, 0xfa, 0x26, 0x55, 0x28, 0xd4,
	0x4c, 0xa2, 0xe2, 0x4a, 0x66, 0x2a, 0xa6, 0x42, 0x73, 0x83, 0xeb, 0x13, 0xd6, 0xd8, 0xa1, 0x0c,
	0xb3, 0x2a, 0x58, 0xd7, 0xad, 0x25, 0x1d, 0x39, 0x00, 0x72, 0x9e, 0x26, 0xf3, 0xa7, 0x21, 0xb7,
	0xc3, 0xd3, 0xc1, 0xf0, 0xd4, 0xb4, 0x78, 0xff, 0x70, 0x60, 0xbb, 0x72, 0xb4, 0xa8, 0x8a, 0x40,
	0x44, 0x25, 0x08, 0x72, 0x99, 0xbc, 0x0b, 0x10, 0xe6, 0xa8, 0x99, 0xbd, 0x97, 0xd5, 0x44, 0x65,
	0x38, 0xa9, 0x65, 0x58, 0x77, 0x0d, 0x6a, 0xbe, 0xd6, 0x35, 0x88, 0xfc, 0x08, 0x3a, 0x51, 0x91,
	0xb3, 0xcc, 0xfe, 0xbb, 0xae, 0x1a, 0xb1, 0xcd, 0xbd, 0xdf, 0x38, 0xb0, 0xbb, 0x90, 0x55, 0xf0,
	0xf4, 0x57, 0xfc, 0xcc, 0x4f, 0x7f, 0x25, 0x58, 0xc0, 0x37, 0xaa, 0xc0, 0xd7, 0x57, 0x16, 0x4b,
	0x82, 0xbe, 0xb2, 0x34, 0xe8, 0xff, 0x72, 0x60, 0xaf, 0xfe, 0x58, 0x7e, 0x13, 0x63, 0xff, 0x7b,
	0x07, 0xdc, 0x65, 0x69, 0xf9, 0x0b, 0x83, 0xa0, 0xe0, 0x7d, 0x5e, 0xd9, 0xbc, 0x89, 0xb1, 0xbf,
	0x9d, 0xd1, 0xde, 0x3a, 0xcf, 0xbc, 0xdf, 0x35, 0xb2, 0xb5, 0xe7, 0x35, 0xda, 0x1b, 0xb8, 0x76,
	0xf2, 0x00, 0x76, 0xf4, 0x12, 0xac, 0x97, 0xb0, 0x96, 0x7e, 0x09, 0xab, 0xea, 0xbd, 0x9f, 0x66,
	0x71, 0xb2, 0xce, 0xf0, 0xff, 0x17, 0x37, 0xbd, 0x3f, 0xe7, 0x5c, 0xcb, 0x2b, 0xdc, 0x2f, 0x65,
	0xbc, 0x0b, 0xb6, 0x58, 0x55, 0x89, 0xc5, 0x96, 0xbc, 0xda, 0xfe, 0xaa, 0xb3, 0x25, 0x8f, 0x93,
	0x55, 0x89, 0x79, 0xbf, 0x75, 0xe0, 0xce, 0xd2, 0x9b, 0xc5, 0xb5, 0x11, 0xb3, 0x6a, 0x90, 0x46,
	0xb9, 0x06, 0xa9, 0x2c, 0xa9, 0xf9, 0x7a, 0x9b, 0xff, 0x2f, 0x0e, 0xdc, 0xbd, 0xa6, 0xe6, 0xab,
	0x20, 0xe5, 0xdc, 0x14, 0xa9, 0xca, 0xa4, 0x1a, 0xf8, 0x1a, 0x7a, 0xe3, 0x38, 0x17, 0xdb, 0xa7,
	0x69, 0x6f, 0x1f, 0xef, 0xaf, 0x0e, 0x7c, 0xeb, 0x06, 0x77, 0xa7, 0x2f, 0x66, 0xd2, 0x4b, 0x9f,
	0xec, 0xbd, 0xcf, 0x1d, 0xb8, 0x7f, 0xb3, 0xbb, 0xd7, 0x97, 0x6d, 0xe6, 0x9f, 0xd9, 0x7c, 0xad,
	0x5e, 0xe4, 0x2c, 0x98, 0x9c, 0x52, 0x96, 0xb3, 0x79, 0xdc, 0xa8, 0xf0, 0xf8, 0x7f, 0x62, 0xeb,
	0x0d, 0xde, 0x8c, 0x46, 0x16, 0x9d, 0x17, 0x2f, 0x1c, 0x4b, 0xd2, 0xb5, 0x95, 0x96, 0x1b, 0xe5,
	0xb4, 0x3c, 0xcd, 0xca, 0x92, 0x11, 0x4b, 0x12, 0x7f, 0xc2, 0x3e, 0x48, 0x12, 0x36, 0x3b, 0x9f,
	0x62, 0x09, 0x7c, 0x00, 0xed, 0x24, 0x7b, 0x92, 0xa9, 0x3c, 0x37, 0xe6, 0x4f, 0x35, 0xb4, 0x30,
	0xa9, 0x4e, 0xbe, 0xb1, 0x38, 0xf9, 0xbf, 0xe7, 0xe1, 0x5e, 0x18, 0x4e, 0x3f, 0x7d, 0x05, 0xaf,
	0xf9, 0xf4, 0xb5, 0x07, 0xab, 0x61, 0x72, 0xea, 0x27, 0x89, 0x79, 0xf6, 0x37, 0x92, 0xea, 0x2a,
	0xc9, 0xaf, 0xd8, 0x06, 0x84, 0xdd, 0xca, 0xdc, 0x55, 0x57, 0x85, 0x11, 0xe9, 0xe1, 0xff, 0x32,
	0x78, 0x43, 0xd2, 0x59, 0x73, 0xab, 0xfc, 0xdf, 0x06, 0xcd, 0x9a, 0xbd, 0x51, 0x96, 0xf9, 0x4c,
	0x46, 0x49, 0x6a, 0x16, 0xef, 0x2c, 0x2c, 0x7e, 0xd9, 0x99, 0xe9, 0xfd, 0xca, 0x01, 0x52, 0xed,
	0xef, 0xbf, 0x8b, 0xc6, 0xfb, 0xb0, 0xae, 0xfa, 0xcc, 0x2f, 0x83, 0x37, 0xba, 0xf5, 0xd2, 0xdc,
	0xa7, 0xff, 0x99, 0x03, 0x40, 0x65, 0x70, 0xc6, 0xe2, 0xab, 0x30, 0x60, 0xe4, 0x23, 0x78, 0xab,
	0x16, 0x2c, 0x52, 0x7e, 0x67, 0x58, 0x64, 0xce, 0x7e, 0xf7, 0x7a, 0x83, 0x24, 0x22, 0x8f, 0x60,
	0xab, 0xbc, 0x66, 0xe2, 0xd6, 0x4d, 0x55, 0x85, 0x76, 0xff, 0xce, 0x92, 0x96, 0x24, 0x3a, 0xbc,
	0xfb, 0xd1, 0x9d, 0x93, 0x88, 0xf1, 0x9f, 0x0d, 0x47, 0x0f, 0xa3, 0x97, 0x93, 0x87, 0x68, 0xf7,
	0x30, 0x96, 0xc1, 0x0f, 0x63, 0x19, 0x9c, 0xaf, 0xa2, 0xf8, 0xbd, 0xff, 0x04, 0x00, 0x00, 0xff,
	0xff, 0x7b, 0xcb, 0xc1, 0x21, 0xfe, 0x1c, 0x00, 0x00,
}
